{
    "swagger": "2.0",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "APIKeyHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "AUTHTOKEN"
        }
    },
    "security": [
        {
            "APIKeyHeader": []
        }
    ],
    "paths": {
        "/api/blueprints": {
            "post": {
                "summary": "Create blueprint",
                "description": "Creates new blueprint instance. Input has additional `design` and `init_type`\nspecific properties at the top level.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for blueprint entity to be created and\n      return its ID (backwards compatible option for clients not ported to\n      task API)\n  * 'full' -- return task reference as soon as a task is created\n\nWhen `init_type` == `template_reference`, `template_id` must also be\nprovided in the request data.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsResponse"
                        }
                    },
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Specified design is unknown"
                    },
                    "409": {
                        "description": "Blueprint with same ID or label already exists; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Design not specified; or task failed"
                    },
                    "429": {
                        "description": "Another blueprint is being created; or too many tasks in queue"
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get all blueprint IDs",
                "description": "Returns all blueprint IDs present in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "List blueprints",
                "description": "Returns all blueprint ids present in the system with blueprint digest\nspecific to design.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint was removed during processing"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}": {
            "patch": {
                "summary": "Patch blueprint",
                "description": "Adds/Removes/Edits nodes and relationships in blueprint.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint is being deleted; or blueprint has pending tasks; or blueprint is locked by other user; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get blueprint data",
                "description": "Returns nodes, relationships and metadata of blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/lock-status": {
            "get": {
                "summary": "Get lock status of the blueprint",
                "description": "Returns information whether the blueprint is locked for the user or not.\n\nChangelog:\n    - 5.1.0: [CHANGED] The response schema has been updated to include\n                       lock_type.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdLockStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "The response schema has been updated to include lock_type."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/lock-blueprint": {
            "put": {
                "summary": "Lock the blueprint",
                "description": "A locked blueprint is unavailable for modification by other users. This state\ncannot be overridden using this API. To unlock the blueprint, use the\n/unlock-blueprint.\nThe locked state is not released after committing changes.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint already has a lock; or blueprint is being created and cannot be updated;"
                    },
                    "422": {
                        "description": "Invalid request data provided; requester user not found; or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/unlock-blueprint": {
            "put": {
                "summary": "Unlock the blueprint",
                "description": "Unlocks the blueprint, allowing other users to make changes. It also unlocks\nthe ability to set your own lock.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated"
                    },
                    "422": {
                        "description": "Invalid request data provided; user does not have enough permissions to unlock blueprint; or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/deploy": {
            "get": {
                "summary": "Get deploy status of given version of the blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdDeployResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Deploy status is malformed"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Deploy given version of the blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiBlueprintsBlueprintIdDeployRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or deployment config does not exist; or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revert": {
            "post": {
                "summary": "Revert blueprint to latest backup version",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Task failed or backup is missing"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/nodes": {
            "get": {
                "summary": "Get graph nodes",
                "description": "Returns all nodes in the blueprint. Each node may have additional design\nspecific properties.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_type",
                        "description": "Return only nodes of this type",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdNodesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create new graph node",
                "description": "Payload may have additional design specific node properties.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus the endpoint is\nconsidered unsafe and can only be used with 'allow_unsafe' query parameter\nset to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesResponse"
                        }
                    },
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Endpoint usage is prohibited or invalid request data provided"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update graph nodes",
                "description": "Updates one or more nodes in the blueprint. Each node may have additional\ndesign specific properties.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus only certain node\ntypes and properties are allowed to be updated without 'allow_unsafe'\nquery parameter set to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**\n\nFor 'Datacenter' blueprints these <node_type>: <safe_properties> are:\n\n```\n{\n    'domain': ['label', 'domain_id'],\n    'gbp_config': any property,\n    'interface': ['label', 'description'],\n    'link': ['label'],\n    'pod': ['label'],\n    'policy': ['label', 'description', 'dhcp_servers', 'enabled'],\n    'rack': ['label'],\n    'redundancy_group': ['label'],\n    'superspine_plane': ['label'],\n    'system': ['label', 'deploy_mode', 'system_id', 'hostname'],\n}\n```\n\nFor 'Freeform' blueprints these <node_type>: <safe_properties> are:\n\n```\n{\n    'interface': ['label', 'description'],\n    'system': ['label', 'deploy_mode', 'system_id', 'hostname'],\n}\n```",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint with other node types or update properties which are considered unsafe",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdNodesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdNodesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/nodes/{node_id}": {
            "get": {
                "summary": "Get graph node",
                "description": "Returns specific node in blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdNodesNodeIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or node with given ID not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update graph node",
                "description": "Updates node properties with given ID.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus only certain node\ntypes and properties are allowed to be updated without 'allow_unsafe'\nquery parameter set to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**\n\nFor 'Datacenter' blueprints these <node_type>: <safe_properties> are:\n\n```\n{\n    'domain': ['label', 'domain_id'],\n    'gbp_config': any property,\n    'interface': ['label', 'description'],\n    'link': ['label'],\n    'pod': ['label'],\n    'policy': ['label', 'description', 'dhcp_servers', 'enabled'],\n    'rack': ['label'],\n    'redundancy_group': ['label'],\n    'superspine_plane': ['label'],\n    'system': ['label', 'deploy_mode', 'system_id', 'hostname'],\n}\n```\n\nFor 'Freeform' blueprints these <node_type>: <safe_properties> are:\n\n```\n{\n    'interface': ['label', 'description'],\n    'system': ['label', 'deploy_mode', 'system_id', 'hostname'],\n}\n```",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint with other node types or update properties which are considered unsafe",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdNodesNodeIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint or node with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete graph node",
                "description": "Deletes node with given ID.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus the endpoint is\nconsidered unsafe and can only be used with 'allow_unsafe' query parameter\nset to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/relationships": {
            "options": {
                "summary": "Get all relationship IDs",
                "description": "Returns all relationship IDs present in the blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get relationships",
                "description": "Returns all relationships in the blueprint or those matching filters provided\n via parameters.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "relationship_type",
                        "description": "Get only relationships of this type",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "source_id",
                        "description": "Get only relationships from node with this ID",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "target_id",
                        "description": "Get only relationships to node with this ID",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdRelationshipsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create new graph relationship",
                "description": "Creates new relationship with given type, source_id and target_id.\nEach relationship may have additional design specific properties.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus the endpoint is\nconsidered unsafe and can only be used with 'allow_unsafe' query parameter\nset to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdRelationshipsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesResponse"
                        }
                    },
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Endpoint usage is prohibited; or invalid request data provided; or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/relationships/{relationship_id}": {
            "get": {
                "summary": "Get graph relationship",
                "description": "Returns specific relationship in the blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "relationship_id",
                        "description": "ID of the relationship",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdRelationshipsRelationshipIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or relationship with given ID not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update graph relationship",
                "description": "Updates properties of relationship with given ID.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus the endpoint is\nconsidered unsafe and can only be used with 'allow_unsafe' query parameter\nset to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "relationship_id",
                        "description": "ID of the relationship",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdNodesNodeIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint or relationship with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Endpoint usage is prohibited; or invalid request data provided; or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete graph relationship",
                "description": "Deletes relationship with given ID.\n\nLow-level graph calls are not covered with semantic validations\nand can cause inconsistencies in the graph structure, thus the endpoint is\nconsidered unsafe and can only be used with 'allow_unsafe' query parameter\nset to 'true'.\n\n**Please consider using regular facade API unless\nyou are confident you are doing the right thing.**",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "relationship_id",
                        "description": "ID of the relationship",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "allow_unsafe",
                        "description": "Set to true if you want to use this endpoint",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint or relationship with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Endpoint usage is prohibited; or invalid request data provided; or task failed"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/errors": {
            "get": {
                "summary": "Get blueprint validation errors",
                "description": "Returns validation errors separately for nodes and relationships together\nwith its version.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdErrorsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/meta/errors": {
            "get": {
                "summary": "Get blueprint validation errors meta",
                "description": "Returns the version of blueprint errors. If currently known version of\nerrors is less than the one returned by this API, new call to `/errors`\nshould be issued to get the latest errors.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdMetaErrorsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/qe": {
            "post": {
                "summary": "Execute the specified query",
                "description": "Returns all paths that match query in the blueprint.\nEach path is a dictionary mapping from matcher name to matched\nnode/relationship.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQeResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/cypher": {
            "post": {
                "summary": "Execute the specified cypher query",
                "description": "Get all paths that match given cypher query in the blueprint.\nEach path is a dictionary mapping from matcher name to matched\nnode/relationship.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdCypherRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdCypherResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid cypher query provided"
                    },
                    "404": {
                        "description": "Blueprint or relationship with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/trace-query": {
            "post": {
                "summary": "Execute the specified query and output query trace information",
                "description": "Returns all query search steps and results found after each step.\nUsed in Graph Debugger UI.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdTraceQueryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdTraceQueryResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/ql-readonly": {
            "post": {
                "summary": "Execute the GraphQL query in a readonly mode",
                "description": "Returns the result of executing GraphQL query on the blueprint.\nIf the query tries to change the blueprint, an error will be returned.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQlReadonlyRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Invalid request data provided"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid query provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/ql": {
            "post": {
                "summary": "Execute the GraphQL query in a readonly mode",
                "description": "Returns the result of executing GraphQL query on the blueprint.\nIf the query tries to change the blueprint, an error will be returned.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQlRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Invalid request data provided"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid query provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/{path}": {
            "delete": {
                "summary": "Bridge to reference design specific APIs",
                "description": "Each reference design defines Blueprint API extensions which are\nbridged by this method. See your reference design documentation for\nspecific APIs.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or selected reference design does not have Facade; or invalid URL; or some resource is missing"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or conflicting object is being created (e.g. tags); or blueprint is locked by other user; or task execution is blocked by other task; or task failed; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or semantic validation errors have been found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Bridge to reference design specific APIs",
                "description": "Each reference design defines Blueprint API extensions which are\nbridged by this method. See your reference design documentation for\nspecific APIs.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or selected reference design does not have Facade; or invalid URL; or some resource is missing"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or conflicting object is being created (e.g. tags); or blueprint is locked by other user; or task execution is blocked by other task; or task failed; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or semantic validation errors have been found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            },
            "patch": {
                "summary": "Bridge to reference design specific APIs",
                "description": "Each reference design defines Blueprint API extensions which are\nbridged by this method. See your reference design documentation for\nspecific APIs.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or selected reference design does not have Facade; or invalid URL; or some resource is missing"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or conflicting object is being created (e.g. tags); or blueprint is locked by other user; or task execution is blocked by other task; or task failed; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or semantic validation errors have been found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            },
            "post": {
                "summary": "Bridge to reference design specific APIs",
                "description": "Each reference design defines Blueprint API extensions which are\nbridged by this method. See your reference design documentation for\nspecific APIs.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or selected reference design does not have Facade; or invalid URL; or some resource is missing"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or conflicting object is being created (e.g. tags); or blueprint is locked by other user; or task execution is blocked by other task; or task failed; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or semantic validation errors have been found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Bridge to reference design specific APIs",
                "description": "Each reference design defines Blueprint API extensions which are\nbridged by this method. See your reference design documentation for\nspecific APIs.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or selected reference design does not have Facade; or invalid URL; or some resource is missing"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or conflicting object is being created (e.g. tags); or blueprint is locked by other user; or task execution is blocked by other task; or task failed; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or semantic validation errors have been found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            },
            "options": {
                "summary": "Bridge to reference design specific APIs",
                "description": "Each reference design defines Blueprint API extensions which are\nbridged by this method. See your reference design documentation for\nspecific APIs.\n\nWhen task framework is enabled, it is possible to specify a mode in which\ntasks are executed:\n  * 'partial' -- create a task, wait for changes to applied to config graph\n      (backwards compatible option for clients not ported to task API)\n  * 'full' -- return task reference as soon as a task is created\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "async",
                        "description": "(optional) 'full' or 'partial' (default)",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or selected reference design does not have Facade; or invalid URL; or some resource is missing"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be updated; or conflicting object is being created (e.g. tags); or blueprint is locked by other user; or task execution is blocked by other task; or task failed; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or semantic validation errors have been found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/tasks": {
            "get": {
                "summary": "Get list of tasks",
                "description": "Returns list of tasks executed on blueprint with given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdTasksResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get list of task IDs",
                "description": "Returns list of task IDs executed on the blueprint with given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiBlueprintsBlueprintIdTasksResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/tasks/{task_id}": {
            "get": {
                "summary": "Get details of a task",
                "description": "Returns details of a given task executed on blueprint with given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "task_id",
                        "description": "ID of the task",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdTasksTaskIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or task with given ID not found"
                    },
                    "422": {
                        "description": "Task is malformed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies_services_count": {
            "get": {
                "summary": "Get number of anomalies per role",
                "description": "Returns the number of anomalies per each 2-tuple of role and anomaly_type\nin the blueprint.\n\nIt is possible to specify a mode in which aggregated anomalies are returned\nusing a \"mode\" query parameter:\n  * 'lite' -- (default) only entries with non-zero anomaly count are returned\n  * 'full' -- return entries for all supported 2-tuple role and anomaly_type,\n              useful for getting maximum possible number of anomalies",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdAnomaliesServicesCountResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided. Namely, requested mode is not supported"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies_nodes_count": {
            "get": {
                "summary": "Get number of anomalies per node",
                "description": "Returns a count of anomalies per each node in the blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdAnomaliesNodesCountResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revisions": {
            "get": {
                "summary": "Get a list of blueprint revisions",
                "description": "Returns a list of blueprint revisions eligible to roll back to.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdRevisionsResponse"
                        }
                    },
                    "422": {
                        "description": "Revisions list for blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revisions/{revision_id}": {
            "delete": {
                "summary": "Delete a blueprint revision",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "revision_id",
                        "description": "ID of the revision to delete",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Invalid revision ID provided"
                    },
                    "404": {
                        "description": "Revision with given ID not found for the blueprint; or revision list update config not found"
                    },
                    "422": {
                        "description": "Invalid request data provided. Namely, recent revision cannot be deleted"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update revision description",
                "description": "Updates the description of a given blueprint revision.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "revision_id",
                        "description": "ID of the revision",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdRevisionsRevisionIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Invalid revision ID provided"
                    },
                    "404": {
                        "description": "Revision with given ID not found for the blueprint; or revision list update config not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revisions/{revision_id}/keep": {
            "post": {
                "summary": "Save recent blueprint revision permanently",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "revision_id",
                        "description": "ID of the revision to keep",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdRevisionsRevisionIdKeepRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Invalid revision ID provided"
                    },
                    "404": {
                        "description": "Revision with given ID not found for the blueprint; or revision list update config not found"
                    },
                    "422": {
                        "description": "Invalid request data provided; or revision list is full"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/rollback": {
            "post": {
                "summary": "Roll back to a previous revision of the blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdRollbackRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Blueprint is being created and cannot be rolled back; or blueprint manipulations not allowed at the moment"
                    },
                    "422": {
                        "description": "Invalid request data provided; or task failed; or revision not found; or backup for given revision not found"
                    },
                    "429": {
                        "description": "Too many tasks in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revisions/user-config": {
            "get": {
                "summary": "Get maximum allowed number of revisions",
                "description": "Returns the max number of revisions that users are allowed to save for this\nblueprint, and the max number of revisions that AOS automatically saves when\nuser deploys new changes to this blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdRevisionsUserConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Revision info not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revisions/preview-deleted-recent": {
            "post": {
                "summary": "Get a list of revisions that would be deleted by setting a new max",
                "description": "Returns a list of the revisions that would be deleted. Setting the maximum\nnumber of revisions that are saved as recent using the `/max-most-recent`\nendpoint with the `retire_excess_revisions` argument can cause some\nrevisions to be deleted.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdRevisionsPreviewDeletedRecentRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdRevisionsResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided; or revision manager not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/revisions/max-most-recent": {
            "put": {
                "summary": "Set the maximum number of revisions that are saved as recent",
                "description": "Updates the configuration of revision retention. Namely, changes the maximum\nallowed amount of revisions that AOS automatically saves when user deploys\nnew changes to this blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiBlueprintsBlueprintIdRevisionsMaxMostRecentRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Revision configuration not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/predefined-reports": {
            "get": {
                "summary": "List all the Predefined Reports according to the blueprint design",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdPredefinedReportsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/predefined-reports/{report_name}": {
            "get": {
                "summary": "Get Predefined Report parameters",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "report_name",
                        "description": "Name of a report",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdPredefinedReportsReportNameResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found OR Predefined Report not found for a given blueprint's reference design"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/predefined-report/{report_name}": {
            "post": {
                "summary": "Generate a Predefined Report according to the provided parameters",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "report_name",
                        "description": "Name of a Predefined Report",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdPredefinedReportReportNameRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdPredefinedReportReportNameResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found OR Predefined Report not found for given blueprint's reference design OR query execution error"
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/operation-mode": {
            "put": {
                "summary": "Update AOS Server operation mode",
                "description": "Updates AOS Server operation mode.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiClusterOperationModeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "409": {
                        "description": "Invalid request data provided; or devices not deployed, or cluster nodes are not ready yet"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get AOS Server operation mode",
                "description": "Retrieves AOS Server operation mode.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterOperationModeResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/nodes": {
            "post": {
                "summary": "Add a new dependent node to AOS cluster",
                "description": "Adds a new dependent node to AOS cluster by specifying the node address and its\ncredentials.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiClusterNodesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiClusterNodesResponse"
                        }
                    },
                    "409": {
                        "description": "Node already configured"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all AOS dependent nodes",
                "description": "Retrieves the list of dependent nodes available in the AOS cluster along with\ntheir statuses.\n\nChangelog:\n    - 5.1.0: [CHANGED] New application type 'apstra_edge' has been added.\n    - 6.0.0: [CHANGED] New application summary field 'restarting' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterNodesResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New application type 'apstra_edge' has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New application summary field 'restarting' has been added."
                        ]
                    }
                }
            },
            "options": {
                "summary": "Get all AOS dependent node IDs",
                "description": "Returns all AOS dependent node IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/nodes/{node_id}": {
            "put": {
                "summary": "Modify an AOS dependent node configuration",
                "description": "Updates an AOS dependent node configuration by replacing all its parameters with\nprovided.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_id",
                        "description": "ID of the AOS dependent node to modify",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiClusterNodesNodeIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Node not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Modify an AOS dependent node configuration",
                "description": "Updates an AOS dependent node configuration only with provided parameters.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_id",
                        "description": "ID of the AOS dependent node to modify",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiClusterNodesNodeIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Node not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get AOS dependent node status",
                "description": "Changelog:\n    - 5.1.0: [CHANGED] New application type 'apstra_edge' has been added.\n    - 6.0.0: [CHANGED] New application summary field 'restarting' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_id",
                        "description": "ID of the AOS dependent node which status to retrieve",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterNodesNodeIdResponse"
                        }
                    },
                    "404": {
                        "description": "Cluster controller running config entity not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New application type 'apstra_edge' has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New application summary field 'restarting' has been added."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete an AOS dependent node from configuration",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_id",
                        "description": "ID of the AOS dependent node to be deleted",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Node not found"
                    },
                    "409": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/nodes/{node_id}/errors": {
            "get": {
                "summary": "Get error for an AOS cluster node",
                "description": "Retrieves the errors for node `node_id` in the AOS cluster.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_id",
                        "description": "ID of the AOS dependent node which errors to retrieve",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterNodesNodeIdErrorsResponse"
                        }
                    },
                    "404": {
                        "description": "Cluster controller running config entity not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/nodes/{node_id}/containers/{container_name}": {
            "get": {
                "summary": "Get container status",
                "description": "Retrieves the status of container `container_name` hosted on node `node_id`.\n\nChangelog:\n    - 5.1.0: [CHANGED] New application type 'apstra_edge' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "node_id",
                        "description": "ID of the AOS node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "container_name",
                        "description": "Name of the container",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterNodesNodeIdContainersContainerNameResponse"
                        }
                    },
                    "404": {
                        "description": "Node with given node_id not found; or container not found; or container is not ready yet"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New application type 'apstra_edge' has been added."
                        ]
                    }
                }
            }
        },
        "/api/cluster/memleak": {
            "post": {
                "summary": "Get the potential memory leak agents",
                "description": "Retrieves agents info if they have memory leak from container `container_name`\nhosted on node `node_id`.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiClusterMemleakRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiClusterMemleakResponse"
                        }
                    },
                    "404": {
                        "description": "No data for selected timestamp"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/application-weight": {
            "put": {
                "summary": "Update cluster scheduling parameters",
                "description": "Updates the memory usage of different AOS applications that is used\nby AOS cluster to schedule containers. Configuration is fully replaced by a\nprovided one.\n\nChangelog:\n    - 5.1.0: [CHANGED] New application type 'apstra_edge' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiClusterApplicationWeightRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New application type 'apstra_edge' has been added."
                        ]
                    }
                }
            },
            "patch": {
                "summary": "Patch cluster scheduling parameters",
                "description": "Patch the memory usage of different AOS applications that is used by AOS cluster\nto schedule containers.\n\nChangelog:\n    - 5.1.0: [CHANGED] New application type 'apstra_edge' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiClusterApplicationWeightRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New application type 'apstra_edge' has been added."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Get cluster scheduling parameters",
                "description": "Returns the memory usage parameters used by AOS cluster to schedule containers.\n\nChangelog:\n    - 5.1.0: [CHANGED] New application type 'apstra_edge' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PutApiClusterApplicationWeightRequest"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New application type 'apstra_edge' has been added."
                        ]
                    }
                }
            }
        },
        "/api/cluster/worker/sync": {
            "post": {
                "summary": "Sync all AOS dependent nodes",
                "description": "Syncs all dependent nodes available in the AOS cluster along with their statuses.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/apstra-edge": {
            "put": {
                "summary": "Launch or update Apstra Edge container",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] apstra-edge image_name version has been updated to 0.19.0.\n    - 6.0.0: [CHANGED] Memory limit format has been changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiClusterApstraEdgeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "apstra-edge image_name version has been updated to 0.19.0.",
                            "Memory limit format has been changed."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Get Apstra Edge container",
                "description": "Retrieves Apstra Edge container info.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] apstra-edge image_name version has been updated to 0.19.0",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterApstraEdgeResponse"
                        }
                    },
                    "202": {
                        "description": "Apstra Edge container is not running"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "apstra-edge image_name version has been updated to 0.19.0"
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Stop Apstra Edge container",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Apstra Edge container is not running"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/cluster/licenses": {
            "post": {
                "summary": "Add Juniper Apstra license key",
                "description": "This API can be used to add a Juniper Apstra license key to the controller\nVM. The license key is obtained from Juniper's Licensing portal.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiClusterLicensesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "201": {
                        "description": "OK"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Retrieve all Juniper Apstra licenses added to controller",
                "description": "This API can be used to retrieve all licenses configured in the controller\nVM.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterLicensesResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Retrieve all license IDs available",
                "description": "This API can be used to retrieve IDs of all configured licenses.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiClusterLicensesResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/cluster/licenses/{license_id}": {
            "get": {
                "summary": "Retreive a specific license",
                "description": "This API can be used to retrieve a specific license specified in {license_id}",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "license_id",
                        "description": "ID of a license",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetApiClusterLicensesLicenseIdResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown license ID"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Remove an added Juniper Apstra license",
                "description": "This API can be used to remove a specific license speified in {license_id}\nfrom the controller VM.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "license_id",
                        "description": "ID of a license",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "cluster"
                ],
                "responses": {
                    "204": {
                        "description": "Successfully removed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/configuration": {
            "get": {
                "summary": "Get status of configuration deployment for specified blueprint",
                "description": "Returns the status of configuration deployment for selected blueprint and all\nassociated systems.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdConfigurationResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/services/configuration/data": {
            "get": {
                "summary": "Get device deployment status",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of system or device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdServicesConfigurationDataResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/configuration": {
            "get": {
                "summary": "Get device deployment status",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of system or device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdServicesConfigurationDataResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/iba-unit-config": {
            "post": {
                "summary": "Change IBA unit configuration",
                "description": "Make a change to IBA processing unit resource configuration entity.\nThe change only affects the new probe scheduling, it will not\naffect existing IBA units.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiIbaUnitConfigRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "iba-unit-config"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "IBA unit not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get IBA unit configuration",
                "description": "Get current IBA processing unit resource configurations.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "iba-unit-config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiIbaUnitConfigRequest"
                        }
                    },
                    "404": {
                        "description": "IBA unit not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/probes": {
            "get": {
                "summary": "Get probes for the given blueprint",
                "description": "Get all configured probes for the given blueprint by\nthe specified {blueprint_id}.\n\nChangelog:\n    - 5.1.0: [CHANGED] New 'created_by' field has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdProbesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New 'created_by' field has been added."
                        ]
                    }
                }
            },
            "post": {
                "summary": "Create a probe for the given blueprint",
                "description": "Creates a probe with described processors for the given blueprint by\nthe specified {blueprint_id}. Returns an object with the id key which\nis a name of the created probe.\n\nChangelog:\n    - 6.0.0: [CHANGED] The dynamic default value for the \"id\" property\n                       was removed from the request schema.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdProbesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Probe created",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdProbesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "The dynamic default value for the \"id\" property was removed from the request schema."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/probes/{probe_id}": {
            "patch": {
                "summary": "Patch a probe for the given blueprint",
                "description": "Allows changing meta-data fields like label, description,\nand stage information such as description and units.\n\nAll fields are optional, and only ones that were specified\nare updated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "Name of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdProbesProbeIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Replace a probe",
                "description": "Completely replace a probe with a new one keeping the id.\nResources used by the old probe will be freed and new probe\nwill be configured.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "Name of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiBlueprintsBlueprintIdProbesProbeIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get a probe for the given blueprint",
                "description": "Returns details of the probe by the specified {blueprint_id} and\n{probe_id}.\n\nChangelog:\n    - 5.1.0: [CHANGED] New 'created_by' field has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "Name of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdProbesProbeIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or probe not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New 'created_by' field has been added."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete the given probe",
                "description": "Delete the given probe by the specified {blueprint_id} and\n{probe_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "Name of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "204": {
                        "description": "Probe deleted.",
                        "schema": {
                            "$ref": "#/definitions/DeleteApiBlueprintsBlueprintIdProbesProbeIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or probe not found"
                    },
                    "409": {
                        "description": "Probe cannot be deleted because it is used by dashboards."
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/probes/{probe_id}/messages": {
            "get": {
                "summary": "Get a list of messages for the given probe",
                "description": "Returns a list of probe messages by the specified {blueprint_id} and\n{probe_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "Name of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdProbesProbeIdMessagesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or probe not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/probes/{probe_id}/query": {
            "post": {
                "summary": "Get a status of the given stage in the probe",
                "description": "Returns probe stage data. The data consists of a series with its properties\nand current values. You can:\n\n* Filter the series with the `filter` parameter, which supports arbitrary\nexpressions.\n* Sort by specifying the `order_by` request parameter.\n* Request that only those series which have raised anomalies are returned\nby specifying the `anomalous_only` request parameter set to `true` .\n\nIf you specify the `include_stage` parameter with the names of preceding\nstages, parent or sibling states, then series items are extended with their\npreceding series.\n\nTo include time-series samples with series, history of their value changes,\nor persisted samples; specify `begin_time` and `end_time` request\nparameters. These two parameters define the timespan within which persisted\nsamples are returned. Samples of all requested stages include persisted\nsamples if they have metric logging enabled. The `aggregation` parameter\nlets you specify the `period` of aggregation, and `metrics` allows to\nspecify which aggregation type to apply to which value and in which requested\nstage.\n\nIf persisted samples are requested, for some scenarios it is assumed that a\nhuge amount of data needs to be returned. In order to retrieve this data\nwithin reasonable time limits, it\u2019s possible to split this data into pages\nand retrieve pages one by one with separate requests using the same request\nparameters. This can be done by using `paging` and `caching` parameters which\nare only needed to be changed between requests. The `paging` parameter allows\nto specify how an entire data set is split into pages. This can be done\ndividing it by amount, through providing `page_size` and `page_number`, or\nby a time interval, through providing `begin_time` and `end_time`\nrespectively.\nThe queried data can also be cached in order to speed up subsequent requests\nwhich access its parts through the paging mechanism. Caching is\ncontrolled through the `caching` parameter which has two options:\n* Use `timeout` to set inactivity timeout in seconds.\n  If the cached data is not accessed for more than the timeout value, the\n  cache is cleared.\n* Explicitly request to clear the cache by setting `clear` to `true` .",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "Name of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdProbesProbeIdQueryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint or probe not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/probes-batch-delete": {
            "post": {
                "summary": "Delete probes in a batch",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdProbesBatchDeleteRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "All probes deleted.",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdProbesBatchDeleteResponse"
                        }
                    },
                    "207": {
                        "description": "Some probes were deleted, but some were not deleted. Details are given in the body of the response."
                    },
                    "404": {
                        "description": "Blueprint not found"
                    },
                    "422": {
                        "description": "None of the objects were deleted"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/probes/{probe_id}/ts-warnings/{stage_name}": {
            "get": {
                "summary": "Get telemetry service warnings",
                "description": "Since some processors are able to auto-enable telemetry\nservices, there might be conflicts/misconfigurations.\n\nThe API endpoint is supposed to return all the telemetry\nservice warnings related to the specified probe's stage.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "ID of a probe.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "stage_name",
                        "description": "Name of a stage.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaProbesProbeIdTsWarningsStageNameResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or probe or stage not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/telemetry/processors": {
            "get": {
                "summary": "Get available processors",
                "description": "Returns a list of available processor types for a particular blueprint\nwith the given {blueprint_id}.\n\nChangelog:\n    - 6.0.0: [CHANGED] A new field 'allow_column_wildcard' has been added\n      in processor inputs.\n    - 6.0.0: [CHANGED] A new field 'primary_keys' has been added in processor\n      input and outputs.\n    - 6.0.0: [CHANGED] A new field 'meta' has been added in processor inputs\n      and outputs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdTelemetryProcessorsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "A new field 'allow_column_wildcard' has been added in processor inputs.",
                            "A new field 'primary_keys' has been added in processor input and outputs.",
                            "A new field 'meta' has been added in processor inputs and outputs."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/iba/predefined-probes": {
            "get": {
                "summary": "List all the predefined probes according to the blueprint design",
                "description": "Changelog:\n    - 6.0.0: [CHANGED] A new field 'sections' has been added to the response.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaPredefinedProbesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "A new field 'sections' has been added to the response."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/iba/predefined-probes/{predefined_probe}": {
            "post": {
                "summary": "Instantiate a predefined probe with parameters",
                "description": "Parameters depend on the type of the probe.\nSee \"schema\" values in response of API endpoint\nGET /blueprints/<blueprint_id>/iba/predefined-probes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "Name of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "predefined_probe",
                        "description": "Name of a predefined probe",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaPredefinedProbesPredefinedProbeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Predefined probe instantiated"
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found OR there no such predefined probe in given blueprint's design"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/predefined-probes/{predefined_probe}/{probe_id}": {
            "put": {
                "summary": "Update predefined probe through simplified set of parameters",
                "description": "Parameters depend on the type of probe.\nSee \"schema\" values in response of API endpoint\nGET /blueprints/<blueprint_id>/iba/predefined-probes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "Name of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "predefined_probe",
                        "description": "Name of a predefined probe",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "ID of a probe",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaPredefinedProbesPredefinedProbeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Existing probe updated"
                    },
                    "201": {
                        "description": "New probe created"
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get parameters of a probe specific to the predefined probe name",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "Name of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "predefined_probe",
                        "description": "Name of a predefined probe",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "probe_id",
                        "description": "ID of a probe",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaPredefinedProbesPredefinedProbeRequest"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found OR predefined probe not found OR probe not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/graph-annotation-properties/registry": {
            "get": {
                "summary": "Get graph annotation properties registry for the given blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "Name of a blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaGraphAnnotationPropertiesRegistryResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/anomalous-stages": {
            "get": {
                "summary": "Get stages with raised anomalies",
                "description": "For probes in the given blueprint, return all\nstages and their anomaly count.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "filter",
                        "description": "Filter items by a specified string.",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaAnomalousStagesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/dashboards": {
            "post": {
                "summary": "Create a dashboard for the given blueprint",
                "description": "Returns an object with id of the new dashboard.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Dashboard instance was successfully created",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get dashboards for the given blueprint",
                "description": "Get all dashboards for the given blueprint by\nthe specified {blueprint_id}.\n\nChangelog:\n    - 5.1.0: [CHANGED] New 'created_by' field has been added.\n    - 6.0.0: [CHANGED] New 'predefined_parameters' field has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaDashboardsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New 'created_by' field has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New 'predefined_parameters' field has been added."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/iba/dashboards/import": {
            "post": {
                "summary": "Import dashboard configuration",
                "description": "Imports a dashboard and instantiates all required probes. If the\ndashboard has the \"predefined_dashboard\" parameter specified, all\nparmaeters are ignored and an instance of the predefined dashboard is\ncreated. If not, a dashboard is created from the passed parameters. In\nthis case, if a probe has the \"predefined_probe\" parameter, an instance\nof this probe is created or re-used if parameters match. In this case,\nparameters of processors and stages are ignored.\n\nReturns an object with id of the new dashboard.\n\nChangelog:\n    - 6.0.0: [CHANGED] 409 response status is returned for creating\n                       an autoscaling dashboard.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsImportRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Dashboard instance was successfully created",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found OR given predefined dashboard not found for given blueprint's reference design"
                    },
                    "409": {
                        "description": "Cannot import an autoscaling predefined dashboard"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "409 response status is returned for creating an autoscaling dashboard."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/iba/dashboards/{dashboard_id}": {
            "get": {
                "summary": "Get dashboard details by its ID",
                "description": "Returns details of the dashboard by the specified {blueprint_id}\nand {dashboard_id}.\n\nChangelog:\n    - 5.1.0: [CHANGED] New 'created_by' field has been added.\n    - 6.0.0: [CHANGED] New 'predefined_parameters' field has been added.\n    - 6.0.0: [CHANGED] New type of dashboard creation condition\n                       'graph_function' has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "dashboard_id",
                        "description": "ID of a dashboard.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaDashboardsDashboardIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found OR dashboard not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New 'created_by' field has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New 'predefined_parameters' field has been added.",
                            "New type of dashboard creation condition 'graph_function' has been added."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Update a dashboard with the given dashboard ID",
                "description": "Returns an object with id of the updated dashboard.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "dashboard_id",
                        "description": "ID of a dashboard.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Existing dashboard is updated",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsResponse"
                        }
                    },
                    "201": {
                        "description": "New dashboard created"
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete a dashboard with a given ID",
                "description": "Delete the given dashboard by the specified {blueprint_id} and\n{dashboard_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "dashboard_id",
                        "description": "ID of a dashboard.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "delete_resources",
                        "description": "If set to `true`, then deletes probes that are used in this dashboard, otherwise only the dashboard is deleted.",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard deleted",
                        "schema": {
                            "$ref": "#/definitions/DeleteApiBlueprintsBlueprintIdIbaDashboardsDashboardIdResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint or dashboard not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/dashboards/{dashboard_id}/export": {
            "get": {
                "summary": "Export dashboard configuration by given dashboard ID",
                "description": "Exports the dashboard with required probes by the specified\n{blueprint_id} and {dashboard_id}. The exported dashboard can be\nimported back through the import API.\n\nChangelog:\n    - 6.0.0: [CHANGED] An autoscaling dashboard is exported as\n                       a custom dashboard.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "dashboard_id",
                        "description": "ID of a dashboard.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaDashboardsDashboardIdExportResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found OR dashboard not found"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "An autoscaling dashboard is exported as a custom dashboard."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/iba/dashboards-batch-delete": {
            "post": {
                "summary": "Delete dashboards in a batch",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "delete_resources",
                        "description": "If set to `true`, then deletes probes that are used in this dashboard, otherwise only the dashboard is deleted.",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsBatchDeleteRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsBatchDeleteResponse"
                        }
                    },
                    "207": {
                        "description": "Some dashboards were deleted, but some were not deleted, details are given in the body of the response"
                    },
                    "422": {
                        "description": "Blueprint or all dashboard not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/iba/predefined-dashboards": {
            "get": {
                "summary": "Get predefined dashboards for the given blueprint",
                "description": "Changelog:\n    - 6.0.0: [CHANGED] New 'dynamic' and 'autoscaling' fields have\n                       been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdIbaPredefinedDashboardsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "New 'dynamic' and 'autoscaling' fields have been added."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/iba/predefined-dashboards/{predefined_dashboard}": {
            "post": {
                "summary": "Instantiate predefined dashboard",
                "description": "Create dashboard with the parameters from the payload.\n\nParameters depend on the type of dashboard.\nSee \"schema\" values in response of API endpoint\nGET /blueprints/<blueprint_id>/iba/predefined-dashboards\n\nChangelog:\n    - 6.0.0: [CHANGED] 409 response status is returned for\n                       instantiating an autoscaling dashboard.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "predefined_dashboard",
                        "description": "Name of a dashboard.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaPredefinedDashboardsPredefinedDashboardRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found"
                    },
                    "409": {
                        "description": "Cannot instantiate an autoscaling dashboard"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "409 response status is returned for instantiating an autoscaling dashboard."
                        ]
                    }
                }
            },
            "patch": {
                "summary": "Update predefined dashboard",
                "description": "The only parameter that could be changed is 'disabled'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of a blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "predefined_dashboard",
                        "description": "Name of a dashboard.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiBlueprintsBlueprintIdIbaPredefinedDashboardsPredefinedDashboardRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdIbaDashboardsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint in \"operational\" state not found OR predefined dashboard does not exist"
                    },
                    "422": {
                        "description": "Cannot update predefined dashboard"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/anomalies": {
            "get": {
                "summary": "Get all anomalies for device",
                "description": "Changelog:\n    - 5.1.0: [CHANGED] New optional 'anomalous_node_id' field has been added.\n    - 5.1.0: [CHANGED] New optional 'predefined_probe_name' field has been added.\n    - 6.0.0: [CHANGED] New parameter 'role' has been added for MLAG anomaly.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system/device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdAnomaliesResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New optional 'anomalous_node_id' field has been added.",
                            "New optional 'predefined_probe_name' field has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New parameter 'role' has been added for MLAG anomaly."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies": {
            "get": {
                "summary": "Get all anomalies for a given blueprint",
                "description": "Retrieves all anomalies for the blueprint specified by `blueprint_id`.\nDefault limit on return is 10,000 entries.\n\nChangelog:\n    - 5.1.0: [CHANGED] New optional 'anomalous_node_id' field has been added.\n    - 5.1.0: [CHANGED] New optional 'predefined_probe_name' field has been added.\n    - 6.0.0: [CHANGED] New parameter 'role' has been added for MLAG anomaly.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdAnomaliesResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New optional 'anomalous_node_id' field has been added.",
                            "New optional 'predefined_probe_name' field has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New parameter 'role' has been added for MLAG anomaly."
                        ]
                    }
                }
            }
        },
        "/api/anomalies": {
            "get": {
                "summary": "Get all anomalies",
                "description": "Retrieves all anomalies.\nDefault limit on return is 10,000 entries.\n\nChangelog:\n    - 5.1.0: [CHANGED] New optional 'anomalous_node_id' field has been added.\n    - 6.0.0: [CHANGED] New parameter 'role' has been added for MLAG anomaly.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "anomalies"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdAnomaliesResponse"
                        }
                    },
                    "409": {
                        "description": "Invalid request data provided. Namely, query parameters `anomaly_type` and `exclude_anomaly_type` cannot be used together"
                    },
                    "422": {
                        "description": "Invalid request data provided. Namely, query parameters are invalid"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New optional 'anomalous_node_id' field has been added."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "New parameter 'role' has been added for MLAG anomaly."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies-history/stats": {
            "get": {
                "summary": "Get anomalies history stats",
                "description": "Retrieves anomaly logging metric information such as\ndisc usage and retention policy.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "id of blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdAnomaliesHistoryStatsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies-history": {
            "post": {
                "summary": "Get anomalies history for a given blueprint",
                "description": "Retrieves anomaly history for the blueprint specified by {blueprint_id}.\nIBA and streaming anomalies are not returned by this endpoint.\n\nChangelog:\n    - 5.1.0: [CHANGED] The counts data was moved to a separate endpoint\n             /blueprints/<blueprint_id>/anomalies-history/counts,\n             request and response schemas have changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "id of blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdAnomaliesHistoryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdAnomaliesHistoryResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "The counts data was moved to a separate endpoint /blueprints/<blueprint_id>/anomalies-history/counts, request and response schemas have changed."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies-history/counts": {
            "post": {
                "summary": "Get anomalies history counts for a given blueprint",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "id of blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdAnomaliesHistoryCountsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdAnomaliesHistoryCountsResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/anomalies-history/trace": {
            "post": {
                "summary": "Get history for a specific anomaly",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "id of blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdAnomaliesHistoryTraceRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdAnomaliesHistoryTraceResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/streaming-alert-descriptions": {
            "get": {
                "summary": "Get protobuf alert descriptions",
                "description": "This effectively returns an entry per each type of alert that is sent via\nthe protobuf streaming mechanism. Each entry is a string meant for human\nconsumption that described the given alert.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-alert-descriptions"
                ],
                "responses": {
                    "200": {
                        "description": null,
                        "schema": {
                            "$ref": "#/definitions/GetApiStreamingAlertDescriptionsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/streaming-config": {
            "options": {
                "summary": "Get all Streaming Endpoints IDs",
                "description": "Get list of all Streaming Endpoints IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiClusterLicensesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Streaming Endpoints",
                "description": "Shows a list of Streaming Endpoints.\n\nChangelog:\n    - 6.0.0: [CHANGED] New 'tls_enabled' field has been added.\n    - 6.0.0: [CHANGED] New optional 'tls_bypass_validation' field has been added.\n                       Only returned if 'tls_enabled' is true.\n    - 6.0.0: [CHANGED] New optional 'tls_trusted_certificate_ids' field has been\n                       added. Only returned if 'tls_enabled' is true.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "New 'tls_enabled' field has been added.",
                            "New optional 'tls_bypass_validation' field has been added. Only returned if 'tls_enabled' is true.",
                            "New optional 'tls_trusted_certificate_ids' field has been added. Only returned if 'tls_enabled' is true."
                        ]
                    }
                }
            },
            "post": {
                "summary": "Create Streaming Endpoint",
                "description": "Creates a new Streaming Endpoint with provided configuration.\n\nChangelog:\n    - 6.0.0: [CHANGED] Added support for TLS-enabled streaming receivers.\n                       New optional 'tls_enabled', 'tls_bypass_validation',\n                       'tls_trusted_certificate_ids' fields have been added.\n                       'tls_bypass_validation' and 'tls_trusted_certificate_ids'\n                       could only be used if 'tls_enabled' is set to true.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-config"
                ],
                "responses": {
                    "201": {
                        "description": "If Streaming Endpoint was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added support for TLS-enabled streaming receivers. New optional 'tls_enabled', 'tls_bypass_validation', 'tls_trusted_certificate_ids' fields have been added. 'tls_bypass_validation' and 'tls_trusted_certificate_ids' could only be used if 'tls_enabled' is set to true."
                        ]
                    }
                }
            }
        },
        "/api/streaming-config/{id}": {
            "get": {
                "summary": "Get Streaming Endpoint",
                "description": "Get detailed information about specific Streaming Endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] New 'tls_enabled' field has been added.\n    - 6.0.0: [CHANGED] New optional 'tls_bypass_validation' field has been added.\n                       Only returned if 'tls_enabled' is true.\n    - 6.0.0: [CHANGED] New optional 'tls_trusted_certificate_ids' field has been\n                       added. Only returned if 'tls_enabled' is true.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Streaming Endpoint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-config"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Streaming Endpoint is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiStreamingConfigIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Streaming Endpoint does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "New 'tls_enabled' field has been added.",
                            "New optional 'tls_bypass_validation' field has been added. Only returned if 'tls_enabled' is true.",
                            "New optional 'tls_trusted_certificate_ids' field has been added. Only returned if 'tls_enabled' is true."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete Streaming Endpoint",
                "description": "Delete Streaming Endpoint specified by ID.\nNo further traffic will be sent to this endpoint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Streaming Endpoint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-config"
                ],
                "responses": {
                    "204": {
                        "description": "Streaming Endpoint successfully deleted"
                    },
                    "404": {
                        "description": "Specified Streaming Endpoint does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Patch Streaming Endpoint",
                "description": "It is only allowed to update trusted certificates for\nTLS enabled Streaming Endpoints.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Streaming Endpoint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiStreamingConfigIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-config"
                ],
                "responses": {
                    "204": {
                        "description": "Streaming Endpoint successfully updated"
                    },
                    "404": {
                        "description": "Specified Streaming Endpoint does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/alert-events": {
            "get": {
                "summary": "Get most recent Events",
                "description": "Get the most recent Events, with a maximum specified by 'max'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "alert-events"
                ],
                "responses": {
                    "200": {
                        "description": "A list of Events is returned - each Event is simply a JSON representation of the Event's protobuf format. Thus, the reader is referred to the protobuf description for the precise schema",
                        "schema": {
                            "$ref": "#/definitions/GetApiAlertEventsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/events": {
            "get": {
                "summary": "Get most recent Events",
                "description": "Get the most recent Events, with a maximum specified by 'max'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "events"
                ],
                "responses": {
                    "200": {
                        "description": "A list of Events is returned - each Event is simply a JSON representation of the Event's protobuf format. Thus, the reader is referred to the protobuf description for the precise schema",
                        "schema": {
                            "$ref": "#/definitions/GetApiAlertEventsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/streaming-telemetry-schema-proto": {
            "get": {
                "summary": "Get text-based protobuf file description for streaming data",
                "description": "Retrieves the protobuf file that describes the data structures used for AOS\nstreaming.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-telemetry-schema-proto"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/streaming-stats": {
            "get": {
                "summary": "Get summary statistics for all streaming endpoints",
                "description": "Retrieves aggregated statistics for alerts, events, and performance monitoring\nstreams.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-stats"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get list of all streaming endpoint IDs",
                "description": "Retrieves a list of IDs for all configured streaming endpoints.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-stats"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/streaming-stats/{endpoint_id}": {
            "get": {
                "summary": "Get detailed statistics for specified streaming endpoint",
                "description": "Retrieves detailed statistics for the streaming endpoint identified by the given\nendpoint ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "endpoint_id",
                        "description": "ID of the streaming endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-stats"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Endpoint not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/streaming-certificates": {
            "post": {
                "summary": "Register new X.509 certificate record",
                "description": "Together with X.509 certificate's base64 encoded data in PEM-format,\nthe payload also accepts user defined label and description for convenience.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingCertificatesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-certificates"
                ],
                "responses": {
                    "201": {
                        "description": "If X.509 certificate record was registered",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingCertificatesResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "get": {
                "summary": "List X.509 certificate records",
                "description": "Get list of X.509 certificate records.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "details",
                        "description": "Boolean flag to output parsed X.509 certificate details",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "streaming-certificates"
                ],
                "responses": {
                    "200": {
                        "description": "Always ok",
                        "schema": {
                            "$ref": "#/definitions/GetApiStreamingCertificatesResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "options": {
                "summary": "Get list of X.509 certificate records' IDs",
                "description": "Changelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "streaming-certificates"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiStreamingCertificatesResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/streaming-certificates/{cert_id}": {
            "delete": {
                "summary": "Delete X.509 certificate record",
                "description": "Delete X.509 certificate record specified by ID.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cert_id",
                        "description": "ID of the certificate record",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-certificates"
                ],
                "responses": {
                    "204": {
                        "description": "Certificate record successfully deleted"
                    },
                    "404": {
                        "description": "Specified certificate record does not exist"
                    },
                    "409": {
                        "description": "Specified certificate record could not be deleted because it is in use"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Get X.509 certificate record under the given ID",
                "description": "Returns the requested X.509 certificate record.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cert_id",
                        "description": "ID of the certificate record",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "details",
                        "description": "Boolean flag to output parsed X.509 certificate details",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "streaming-certificates"
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/GetApiStreamingCertificatesCertIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified certificate record does not exist"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "patch": {
                "summary": "Modify X.509 certificate record attributes",
                "description": "Update an existing X.509 certificate record.\nOnly its 'label' and 'description' could be changed as the\ncertificate itself is immutable entity.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cert_id",
                        "description": "ID of the certificate record",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiStreamingCertificatesCertIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "streaming-certificates"
                ],
                "responses": {
                    "204": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Specified certificate record does not exist"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/systems": {
            "options": {
                "summary": "Get all system IDs (device serial number) from the given blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get status of systems in blueprint",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdSystemsResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/services/{service_name}/data": {
            "get": {
                "summary": "Get status of specified service",
                "description": "Returns status of the requested service on the given system.\nDepending on the type of service, a different type of response is given.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service_name",
                        "description": "Name of telemetry service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdServicesServiceNameDataResponse"
                        }
                    },
                    "400": {
                        "description": "Service converter error"
                    },
                    "404": {
                        "description": "Service not found; service converter not found"
                    },
                    "405": {
                        "description": "Method not allowed for service"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/counters": {
            "get": {
                "summary": "Get interface counters for specified system",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdCountersResponse"
                        }
                    },
                    "404": {
                        "description": "System not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/services/xcvr/data": {
            "get": {
                "summary": "Get transceiver counters for system",
                "description": "Returns transceiver counters for the given system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdServicesXcvrDataResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found; service not available"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/fetchcmd": {
            "post": {
                "summary": "Issue fetch command request",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "Id of the system on which to execute the command",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "command_text",
                        "description": "Command to execute on the system",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "output_format",
                        "description": "Format of the command output",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFetchcmdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully issued fetch command request",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFetchcmdResponse"
                        }
                    },
                    "400": {
                        "description": "Error occurred while processing request"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/fetchcmd/{request_id}": {
            "get": {
                "summary": "Get fetch command output",
                "description": "Retrieves the output of a fetch command request.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request_id",
                        "description": "Id of the request issued",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved fetch command output",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryFetchcmdRequestIdResponse"
                        }
                    },
                    "400": {
                        "description": "Error occurred while processing request"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete fetch command request",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request_id",
                        "description": "Id of the request issued",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted fetch command request"
                    },
                    "400": {
                        "description": "Error occurred while deleting request"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/fetchcmd/{request_id}/query": {
            "post": {
                "summary": "Run XML query on fetch command output",
                "description": "Note: This API has been updated in release 5.0 to allow queries containing\nmultiple value entries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request_id",
                        "description": "Id of the request issued",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFetchcmdRequestIdQueryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully ran XML query on fetch command output",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFetchcmdRequestIdQueryResponse"
                        }
                    },
                    "400": {
                        "description": "Error occurred while processing request"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/fetchcmd/{request_id}/validate": {
            "post": {
                "summary": "Validate command XML output against its RPC schema",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "request_id",
                        "description": "Id of the request issued",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFetchcmdRequestIdValidateRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully validated command XML output against RPC schema",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFetchcmdRequestIdValidateResponse"
                        }
                    },
                    "400": {
                        "description": "Error occurred while processing request"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/schemas": {
            "options": {
                "summary": "Get RPC schema index file contents",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved schema index file contents",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiTelemetrySchemasResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/schemas/{source}/{os_type}/{family}/{os_version}/modules": {
            "get": {
                "summary": "Get list of all available modules",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "source",
                        "description": "Name of the source type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_type",
                        "description": "Name of the os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "family",
                        "description": "Name of the family within the given os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_version",
                        "description": "Supported os version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of modules",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionModulesResponse"
                        }
                    },
                    "404": {
                        "description": "Schema not found error"
                    },
                    "422": {
                        "description": "Schema invalid state error"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/schemas/{source}/{os_type}/{family}/{os_version}/module/{module}": {
            "get": {
                "summary": "Get information related to specific module",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "source",
                        "description": "Name of the source type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_type",
                        "description": "Name of the os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "family",
                        "description": "Name of the family within the given os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_version",
                        "description": "Supported os version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "module",
                        "description": "Name of the module to get the RPCs for",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved module info",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionModuleModuleResponse"
                        }
                    },
                    "404": {
                        "description": "Schema not found error"
                    },
                    "422": {
                        "description": "Schema invalid state error"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/schemas/{source}/{os_type}/{family}/{os_version}/cmd_rpc_map": {
            "get": {
                "summary": "Get contents of cmd_rpc_map file",
                "description": "Gets contents of cmd_rpc_map file that maps all commands to its RPC names.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "source",
                        "description": "Name of the source type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_type",
                        "description": "Name of the os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "family",
                        "description": "Name of the family within the given os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_version",
                        "description": "Supported os version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved cmd_rpc_map",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionCmdRpcMapResponse"
                        }
                    },
                    "404": {
                        "description": "Schema not found error"
                    },
                    "422": {
                        "description": "Schema invalid state error"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/schemas/{source}/{os_type}/{family}/{os_version}/rpc/{rpc_name}": {
            "get": {
                "summary": "Get information related to specific RPC",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "source",
                        "description": "Name of the source type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_type",
                        "description": "Name of the os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "family",
                        "description": "Name of the family within the given os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_version",
                        "description": "Supported os version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "rpc_name",
                        "description": "Name of the RPC",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved RPC info",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionRpcRpcNameResponse"
                        }
                    },
                    "404": {
                        "description": "Schema not found error"
                    },
                    "422": {
                        "description": "Schema invalid state error"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/schemas/parse-device-os-version/{device_os}/{version}": {
            "get": {
                "summary": "Parse device OS version string",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "device_os",
                        "description": "Device OS type, currently only 'junos' supported",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "version",
                        "description": "Device OS version string",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully parsed OS version string"
                    },
                    "400": {
                        "description": "Unsupported device OS"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/services": {
            "post": {
                "summary": "Enable telemetry service",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsSystemIdServicesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Service registry entry not found"
                    },
                    "409": {
                        "description": "Service already exists"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "List telemetry services",
                "description": "Returns list of enabled telemetry services on the given device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "Id of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "source",
                        "description": "one of api/plugin/default - 'default' = service-configurations set by AOS by default, 'plugin' = service-configurations set by plugin via blueprint, 'api' = service-configurations set by admin via REST APIs",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdServicesServiceNameResponse"
                        }
                    },
                    "404": {
                        "description": "No configuration found for source"
                    },
                    "422": {
                        "description": "Invalid source parameter value"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/services/{service_name}": {
            "put": {
                "summary": "Update telemetry service fully replacing its configuration",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service_name",
                        "description": "Service to be updated",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsSystemIdServicesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "No service found by name"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get one telemetry service for one system",
                "description": "Returns specified telemetry service info for the specified device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "source",
                        "description": "one of api/plugin/default - 'default' = service-configurations set by AOS by default, 'plugin' = service-configurations set by plugin via blueprint, 'api' = service-configurations set by admin via REST APIs",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdServicesServiceNameResponse"
                        }
                    },
                    "404": {
                        "description": "No configuration found; no active service configuration found"
                    },
                    "422": {
                        "description": "Invalid source parameter value"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Disable telemetry service",
                "description": "Disables specified telemetry service on the given device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "405": {
                        "description": "Method not allowed for virtual_infra service"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/services": {
            "get": {
                "summary": "Get telemetry service name to devices mapping",
                "description": "Maps telemetry service name to devices enabled and devices with last run error.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved mapping",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryServicesResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get services enabled",
                "description": "Retrieves list of services enabled.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of enabled services",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiTelemetryServicesResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/services/{service_name}": {
            "get": {
                "summary": "Get one telemetry service from all enabled systems",
                "description": "Retrieves specified telemetry service info on all systems with this service\nenabled.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "source",
                        "description": "one of api/plugin/default - 'default' = service-configurations set by AOS by default, 'plugin' = service-configurations set by plugin via blueprint, 'api' = service-configurations set by admin via REST APIs",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved service info",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryServicesServiceNameResponse"
                        }
                    },
                    "404": {
                        "description": "Service not found; no active service configuration found; no configuration found for source"
                    },
                    "422": {
                        "description": "Unknown source parameter"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/collectors": {
            "post": {
                "summary": "Create telemetry service collector",
                "description": "Note: This API has been updated in release 5.0 to allow collector definitions\nwith multiple value entries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryCollectorsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created telemetry service collector",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryCollectorsResponse"
                        }
                    },
                    "409": {
                        "description": "Entity already exists"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get services and associated list of platforms",
                "description": "Gets all services and the associated list of platforms for which a collector is\ndefined.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved service collectors overview",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryCollectorsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/collectors/{service_name}": {
            "put": {
                "summary": "Replace all existing collectors with new collectors list",
                "description": "Note: This API has been updated in release 5.0 to allow collector definitions\nwith multiple value entries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiTelemetryCollectorsServiceNameRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully replaced telemetry service collectors"
                    },
                    "404": {
                        "description": "Service collectors entry for service not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Add or update telemetry service collectors for given service",
                "description": "Note: This API has been updated in release 5.0 to allow collector definitions\nwith multiple value entries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiTelemetryCollectorsServiceNameRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully updated telemetry service collectors"
                    },
                    "404": {
                        "description": "Service collectors entry for service not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete telemetry service and its associated collectors",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted telemetry service collectors"
                    },
                    "404": {
                        "description": "Service collectors entry for service not found"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of collectors for given service",
                "description": "Note: This API has been updated in release 5.0 to allow collector definitions\nwith multiple value entries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of collectors",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryCollectorsServiceNameResponse"
                        }
                    },
                    "404": {
                        "description": "Service collectors entry for service not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/collectors/{service_name}/{os_type}/{family}/{os_version}": {
            "get": {
                "summary": "Get specific collector for given service",
                "description": "Gets specific collector for a given service based on collector platform details.\n\nNote: This API has been updated in release 5.0 to allow collector definitions\nwith multiple value entries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_type",
                        "description": "Name of the os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "family",
                        "description": "Name of the family within the given os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_version",
                        "description": "supported os version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "model",
                        "description": "OS model pattern, None if not set",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved collector by platform",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryCollectorsServiceNameOsTypeFamilyOsVersionResponse"
                        }
                    },
                    "404": {
                        "description": "Service collectors entry for service not found; no collector entry with specified details"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specific collector for given service",
                "description": "Deletes specific collector for a given service based on collector platform\ndetails.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_type",
                        "description": "Name of the os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "family",
                        "description": "Name of the family within the given os type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "os_version",
                        "description": "supported os version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "model",
                        "description": "OS model pattern, None if not set",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted collector by platform"
                    },
                    "404": {
                        "description": "Service name not found; no collector entry with specified details"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry-service-registry": {
            "get": {
                "summary": "Get the service registry list",
                "description": "Gets list of all service registry entries in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved service registry list",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryServiceRegistryResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get list of services in the telemetry service registry",
                "description": "Get the list of services for which the service registry entry is populated in\nthe telemetry service registry in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of services in the telemetry service registry",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiTelemetryServiceRegistryResponse"
                        }
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create service registry entry",
                "description": "Creates a service registry entry by specifying the application schema, the\nstorage schema path and version.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryServiceRegistryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created the service registry entry",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryServiceRegistryResponse"
                        }
                    },
                    "409": {
                        "description": "Service registry entry already exists"
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry-service-registry/{service_name}": {
            "get": {
                "summary": "Get service registry entry",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved service registry list",
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryServiceRegistryServiceNameResponse"
                        }
                    },
                    "404": {
                        "description": "Service registry entry does not exist"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify the entire service registry entry configuration",
                "description": "Replaces the existing configuration of the service registry entry for the given\nservice.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiTelemetryServiceRegistryServiceNameRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully modified the service registry entry"
                    },
                    "409": {
                        "description": "Cannot update service in registry while being used by collectors"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Partially modify the service registry entry configuration",
                "description": "Updates specific fields of the service registry entry for the given service\nwithout replacing the entire configuration.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiTelemetryServiceRegistryServiceNameRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the service registry entry"
                    },
                    "409": {
                        "description": "Cannot update service in registry while being used by collectors"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete service registry entry",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry-service-registry"
                ],
                "responses": {
                    "204": {
                        "description": "Service deleted",
                        "schema": {
                            "$ref": "#/definitions/DeleteApiTelemetryServiceRegistryServiceNameResponse"
                        }
                    },
                    "409": {
                        "description": "Cannot delete service because it is currently in use"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/utilization": {
            "get": {
                "summary": "Get resource utilization information of system",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdUtilizationResponse"
                        }
                    },
                    "404": {
                        "description": "System with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/arca/{arca_id}": {
            "get": {
                "summary": "Get ARCA instance for the given blueprint",
                "description": "Get configureed ARCA instance with given {arca_id} for blueprint\nwith given {blueprint_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "arca_id",
                        "description": "ID of the ARCA instance in the blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdArcaArcaIdResponse"
                        }
                    },
                    "404": {
                        "description": "ARCA instance not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update an ARCA instance for a blueprint",
                "description": "Updates an ARCA instance with the given {arca_id} in the blueprint\nwith the given {blueprint_id}.\n\nChanges will take effect after the previous \"trigger_period\" value.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiBlueprintsBlueprintIdArcaArcaIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "404": {
                        "description": "ARCA instance not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete an ARCA instance for a blueprint",
                "description": "Deletes an ARCA instance with the given {arca_id} in the blueprint\nwith the given {blueprint_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "204": {
                        "description": "ARCA instance successfully deleted"
                    },
                    "404": {
                        "description": "ARCA instance not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/arca": {
            "get": {
                "summary": "Get list of ARCA instances for the given blueprint",
                "description": "Get all configured ARCA instances for blueprint by {blueprint_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdArcaResponse"
                        }
                    },
                    "404": {
                        "description": "Blueprint not found"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create an ARCA instance for given blueprint",
                "description": "Creates an ARCA instance with given system fault model for the blueprint\nwith specified {blueprint_id}. Returns an object with \"id\" key which is\nthe ID of the created ARCA instance. This ID can be used to GET the\nstatus fo the ARCA instance. Only one ARCA instance can be created for\na pair of (blueprint, model).\n\nCurrently only \"connectivity\" model and only for \"two-stage-L3-clos\"\nblueprints is supported.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdArcaRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "201": {
                        "description": "ARCA instance created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "ARCA instance already exists OR reference design is unknown OR model not found OR the model is not compatible with the blueprint"
                    }
                },
                "changelog": null
            }
        },
        "/api/rci/processors": {
            "get": {
                "summary": "Get RCI processor list",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected.",
                        "schema": {
                            "$ref": "#/definitions/GetApiRciProcessorsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/rci/instances/{rci_id}": {
            "get": {
                "summary": "Get RCI instance",
                "description": "Get configured RCI instance with given {rci_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rci_id",
                        "description": "ID of the RCI instance.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiRciInstancesRciIdResponse"
                        }
                    },
                    "404": {
                        "description": "RCI instance with the given {rci_id} not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete an RCI instance",
                "description": "Deletes an RCI instance with the given {rci_id}.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rci_id",
                        "description": "ID of the RCI instance.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "204": {
                        "description": "RCI instance has been deleted"
                    },
                    "404": {
                        "description": "RCI instance with the given {rci_id} not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Patch an RCI instances",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rci_id",
                        "description": "ID of the RCI instance.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiRciInstancesRciIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "202": {
                        "description": "RCI instance has been changed"
                    },
                    "404": {
                        "description": "RCI instance with the given {rci_id} not found"
                    },
                    "409": {
                        "description": "RCI instance cannot be modified because of its current state"
                    }
                },
                "changelog": null
            }
        },
        "/api/rci/instances/": {
            "get": {
                "summary": "Get list of all RCI instances",
                "description": "Get all configured RCI instances.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiRciInstancesResponse"
                        }
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create an RCI instance for given blueprint",
                "description": "Creates an RCI instance with given system fault model for the blueprint\nwith specified {blueprint_id}. Returns an object with \"id\" key which is\nthe ID of the created RCI instance. This ID can be used to GET the\nstatus of the RCI instance.\n\nMultiple blueprints for the same RCI instance are not supported.\n\n\"replay\" meaning:\n* null to run RCI with ongoing telemetry\n* not null to run RCI with replayed telemetry",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiRciInstancesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "201": {
                        "description": "RCI instance created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/rci/instances/{rci_id}/rcf": {
            "post": {
                "summary": "Get impacts for RCF (Root Cause Fault)",
                "description": "For a given RCF (matched or not matched), show its\nimpacts.\n\nNote: timestamp is not yet supported.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rci_id",
                        "description": "ID of the RCI instance.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiRciInstancesRciIdRcfRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiRciInstancesRciIdRcfResponse"
                        }
                    },
                    "404": {
                        "description": "RCI instance with the given {rci_id} not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/rci/instances/{rci_id}/impact": {
            "post": {
                "summary": "Explain the given impact",
                "description": "Returns a possible root cause faults (RCFs) for the given impact.\n\nNote: timestamp is not yet supported.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rci_id",
                        "description": "ID of the RCI instance.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiRciInstancesRciIdImpactRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "rci"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiRciInstancesRciIdImpactResponse"
                        }
                    },
                    "404": {
                        "description": "RCI instance with the given {rci_id} not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/show-tech/jobs": {
            "get": {
                "summary": "Get all show tech jobs status",
                "description": "Retrieves job ID, status, targeted servers and devices, and download link for\nall show tech jobs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiShowTechJobsResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get all AOS controller show tech job IDs",
                "description": "Retrieves all controller show tech job IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiShowTechJobsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/show-tech/jobs/{job_id}": {
            "get": {
                "summary": "Get specified show tech job status",
                "description": "Retrieves job ID, status, targeted servers and devices, and download link for\nthe specified show tech job.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiShowTechJobsJobIdResponse"
                        }
                    },
                    "404": {
                        "description": "Show tech job not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specified show tech job",
                "description": "Removes the job directory of the specified show tech job.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Show tech job not found"
                    },
                    "409": {
                        "description": "Cannot delete job in progress; cannot delete job directory"
                    }
                },
                "changelog": null
            }
        },
        "/api/show-tech/controller": {
            "post": {
                "summary": "Generate show tech log tarball on AOS controller",
                "description": "Starts a new job to generate show tech log tarball from AOS controller.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiShowTechControllerRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "409": {
                        "description": "Show tech job for controller is already running; not enough disk space; exceeded maximum size allowed for show tech directory"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/show-tech/cluster-node": {
            "post": {
                "summary": "Generate show tech log tarball on AOS cluster node",
                "description": "Starts a new job to generate show tech log tarball of a specific cluster node\nfrom AOS controller.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiShowTechClusterNodeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Invalid request; use /show-tech/controller for AosController"
                    },
                    "404": {
                        "description": "Cluster node not found"
                    },
                    "409": {
                        "description": "Show tech job for cluster node already in progress; not enough disk space; exceeded maximum size allowed for show tech directory"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/show-tech/flow-data-collector": {
            "post": {
                "summary": "Generate show tech log tarball for specified flow data collector",
                "description": "Starts a new job to generate show tech log tarball from the specified flow data\ncollector.\n\nNote: Only checks for maximum directory size, not for available disk space.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiShowTechFlowDataCollectorRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Flow data collector not found"
                    },
                    "409": {
                        "description": "Show tech job for flow data collector already in progress; exceeded maximum size allowed for show tech directory"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/show-tech/batch-delete": {
            "post": {
                "summary": "Delete multiple show tech jobs",
                "description": "Removes job directories of show tech jobs specified in the request payload.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiShowTechBatchDeleteRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "show-tech"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "207": {
                        "description": "Partial success; some jobs deleted, some failed"
                    },
                    "422": {
                        "description": "All deletions failed; invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/platform/support/ssrn": {
            "get": {
                "summary": "Get Juniper Apstra Software Support Reference Number",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "platform"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Modify Juniper Apstra Software Support Reference Number",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiPlatformSupportSsrnRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "platform"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/virtual-infra-managers": {
            "post": {
                "summary": "Create new virtual infra manager",
                "description": "Creates a new virtual infra manager by providing necessary connectivity\ninformation.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiVirtualInfraManagersRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully created the virtual infra manager",
                        "schema": {
                            "$ref": "#/definitions/PostApiVirtualInfraManagersResponse"
                        }
                    },
                    "422": {
                        "description": "Duplicate management ip/hostname information in request; virtual infra manager with specified ID already exists"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all virtual infra managers",
                "description": "A list of all virtual infra managers in AOS is returned.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of virtual infra managers",
                        "schema": {
                            "$ref": "#/definitions/GetApiVirtualInfraManagersResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/virtual-infra-managers/{manager_id}": {
            "patch": {
                "summary": "Modify specific parts of virtual infra manager's configuration",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of the virtual infra manager",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiVirtualInfraManagersManagerIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully updated the virtual infra manager configuration"
                    },
                    "404": {
                        "description": "Virtual infra manager agent not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Replace entire configuration of virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of the virtual infra manager",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiVirtualInfraManagersManagerIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully updated the virtual infra manager configuration"
                    },
                    "404": {
                        "description": "Virtual infra manager not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of the virtual infra manager",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the virtual infra manager"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get data for virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of the virtual infra manager",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved data for the virtual infra manager",
                        "schema": {
                            "$ref": "#/definitions/GetApiVirtualInfraManagersManagerIdResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual infra manager with specified ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/virtual-infra-managers/{manager_id}/vcenters": {
            "post": {
                "summary": "Create new vcenter associated with virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of the virtual infra manager new vcenter will be associated with",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiVirtualInfraManagersManagerIdVcentersRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully created the vcenter",
                        "schema": {
                            "$ref": "#/definitions/PostApiVirtualInfraManagersManagerIdVcentersResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual infra manager not found;"
                    },
                    "422": {
                        "description": "Vcenter with specified ID already exists; vcenters can be added to virtual infra manager of the type NSX only"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all vcenters data associated with virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of virtual infra manager that vcenters are associated with",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved vcenter data associated with virtual infra manager",
                        "schema": {
                            "$ref": "#/definitions/GetApiVirtualInfraManagersManagerIdVcentersResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual infra manager not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/virtual-infra-managers/{manager_id}/vcenters/{vcenter_id}": {
            "put": {
                "summary": "Replace entire vcenter configuration associated with virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of virtual infra manager that vcenter is associated with",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vcenter_id",
                        "description": "ID of vcenter",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiVirtualInfraManagersManagerIdVcentersVcenterIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully updated vcenter configuration"
                    },
                    "404": {
                        "description": "Virtual infra manager not found; vcenter not found; vcenter not associated with the manager"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Modify part of vcenter configuration associated with virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of virtual infra manager that vcenter is associated with",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vcenter_id",
                        "description": "ID of vcenter",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiVirtualInfraManagersManagerIdVcentersVcenterIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully patched vcenter configuration"
                    },
                    "404": {
                        "description": "Virtual infra manager not found; vcenter not found; vcenter not associated with the manager"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete vcenter configuration associated with virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of the virtual infra manager",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vcenter_id",
                        "description": "ID of the vcenter",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the vcenter"
                    },
                    "404": {
                        "description": "Virtual infra manager not found"
                    },
                    "422": {
                        "description": "API must be invoked for virtual infra manager of the type NSX"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get vcenter data associated with virtual infra manager",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "manager_id",
                        "description": "ID of virtual infra manager that vcenter is associated with",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vcenter_id",
                        "description": "ID of vcenter",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "virtual-infra-managers"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved vcenter data associated with virtual infra manager",
                        "schema": {
                            "$ref": "#/definitions/GetApiVirtualInfraManagersManagerIdVcentersVcenterIdResponse"
                        }
                    },
                    "404": {
                        "description": "Virtual infra manager or vcenter not found; vcenter is not associated with the manager"
                    }
                },
                "changelog": null
            }
        },
        "/api/product-usage": {
            "post": {
                "summary": "Request new product usage report",
                "description": "Creates a request for a new product usage report to be generated.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "product-usage"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiProductUsageResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Get all product usage reports",
                "description": "Returns the product usage reports with information about Apstra features being\nused.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Undefined value of design_subcategory is changed from\n        `''` to `null`.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "product-usage"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiProductUsageResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Undefined value of design_subcategory is changed from `''` to `null`."
                        ]
                    }
                }
            }
        },
        "/api/product-usage/digest": {
            "get": {
                "summary": "Get all product usage report IDs with completion status and error",
                "description": "Changelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "product-usage"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiProductUsageDigestResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/product-usage-nightly": {
            "get": {
                "summary": "Get auto-generated product usage report",
                "description": "Returns the product usage report with information about Apstra features being\nused. It returns the report that is generated automatically every night.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Undefined value of design_subcategory is changed from\n        `''` to `null`.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "product-usage-nightly"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiProductUsageNightlyResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Undefined value of design_subcategory is changed from `''` to `null`."
                        ]
                    }
                }
            }
        },
        "/api/product-usage/{job_id}": {
            "get": {
                "summary": "Get product usage report",
                "description": "Returns the product usage report with information about Apstra features being\nused.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Undefined value of design_subcategory is changed from\n        `''` to `null`.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the product usage report generation job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "product-usage"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiProductUsageNightlyResponse"
                        }
                    },
                    "404": {
                        "description": "Product usage report with given ID not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Undefined value of design_subcategory is changed from `''` to `null`."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete product usage report",
                "description": "Removes the product usage report config which triggers removal of the\ncorresponding report.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the product usage report generation job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "product-usage"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Job with given ID not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/port-aliases": {
            "get": {
                "summary": "Get all port aliases",
                "description": "Retrieves all port aliases present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "port-aliases"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiPortAliasesResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "List all port alias IDs",
                "description": "Retrieves a list of all port alias IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "port-aliases"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create new port alias",
                "description": "Creates a new port alias and returns its ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiPortAliasesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "port-aliases"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiPortAliasesResponse"
                        }
                    },
                    "409": {
                        "description": "Label or value is not unique"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/port-aliases/{alias_id}": {
            "get": {
                "summary": "Get port alias with specified ID",
                "description": "Retrieves details of the port alias identified by the given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alias_id",
                        "description": "ID of port alias",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "port-aliases"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiPortAliasesRequest"
                        }
                    },
                    "404": {
                        "description": "Port alias not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update port alias with specified ID",
                "description": "Replaces the entire configuration of the port alias identified by the given\nID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alias_id",
                        "description": "ID of port alias",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiPortAliasesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "port-aliases"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Port alias not found"
                    },
                    "409": {
                        "description": "Label or value is not unique"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete port alias with specified ID",
                "description": "Removes the port alias identified by the given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "alias_id",
                        "description": "ID of port alias",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "port-aliases"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Port alias not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/configlets": {
            "options": {
                "summary": "Get all configlet IDs",
                "description": "Returns a list of all configlets' IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all configlets",
                "description": "Returns a list of all configlets present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "display_name",
                        "description": "filter configlets with matching display_name",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "section",
                        "description": "filter configlets with matching section",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "ref_arch",
                        "description": "filter configlets with matching reference architecture",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignConfigletsResponse"
                        }
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create a new configlet",
                "description": "Creates a new configlet with the given parameters.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignConfigletsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "409": {
                        "description": "Configlet with the same parameters already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/configlets/{configlet_id}": {
            "get": {
                "summary": "Get a configlet",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "configlet_id",
                        "description": "ID of the configlet",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignConfigletsRequest"
                        }
                    },
                    "404": {
                        "description": "Configlet with the given ID not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update an existing configlet",
                "description": "Updates the specified configlet by completely replacing its parameters.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "configlet_id",
                        "description": "ID of the configlet",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignConfigletsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignConfigletsRequest"
                        }
                    },
                    "404": {
                        "description": "Configlet with the given ID not found"
                    },
                    "409": {
                        "description": "Configlet ID modification not allowed; or configlet with the same parameters already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete an existing configlet",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "configlet_id",
                        "description": "ID of configlet",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Configlet with the given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/linecard-profiles": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "linecard-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Linecard Profiles",
                "description": "Shows a list of Linecard Profiles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "linecard-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiLinecardProfilesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Linecard Profile",
                "description": "Create Linecard Profile with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiLinecardProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "linecard-profiles"
                ],
                "responses": {
                    "201": {
                        "description": "If Linecard Profile was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/linecard-profiles/{id}": {
            "get": {
                "summary": "Get Linecard Profile by ID",
                "description": "Get detailed information about specific Linecard Profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Linecard Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "linecard-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Linecard Profile is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiLinecardProfilesIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Linecard Profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Linecard Profile",
                "description": "Update an existing Linecard Profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Linecard Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiLinecardProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "linecard-profiles"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Linecard Profile successfully updated"
                    },
                    "404": {
                        "description": "Specified Linecard Profile does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Linecard Profile",
                "description": "Delete Linecard Profile specified by ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Linecard Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "linecard-profiles"
                ],
                "responses": {
                    "204": {
                        "description": "Linecard Profile successfully deleted"
                    },
                    "404": {
                        "description": "Specified Linecard Profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-profiles": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Device Profiles",
                "description": "Shows a list of Device Profiles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceProfilesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Device Profile",
                "description": "Create Device Profile with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.The \"reference_design_capabilities\" and \"dual_routing_engine\" fields are derived from corresponding Chassis Profile for modular Device Profiles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDeviceProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "device-profiles"
                ],
                "responses": {
                    "201": {
                        "description": "If Device Profile was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-profiles/{id}": {
            "get": {
                "summary": "Get Device Profile by ID",
                "description": "Get detailed information about specific Device Profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Device Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "device-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Device Profile is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceProfilesIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Device Profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Device Profile",
                "description": "Update an existing Device Profile.\nThe 'physical_device', 'reference_design_capabilities' and 'dual_routing_engine' fields are derived from corresponding Chassis Profile for modular Device Profiles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Device Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDeviceProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "device-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Specified Device Profile successfully updated"
                    },
                    "404": {
                        "description": "Specified Device Profile does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Device Profile",
                "description": "Delete Device Profile specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Device Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "device-profiles"
                ],
                "responses": {
                    "204": {
                        "description": "Device Profile successfully deleted"
                    },
                    "404": {
                        "description": "Specified Device Profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-profile-clone": {
            "post": {
                "summary": "Create a clone of existing Device Profile and optionally any related Interface Maps",
                "description": "Create a clone of existing Device Profile with the specified ID with required edits to any section except 'ports'. If any Interface Map referenced by original Device Profile is also supplied, it will be cloned and updated to reflect newly cloned Device Profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDeviceProfileCloneRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "device-profile-clone"
                ],
                "responses": {
                    "201": {
                        "description": "If Device Profile was successfully cloned",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-profile-digests": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-profile-digests"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Device Profile Digest",
                "description": "Shows a list of Device Profile Digest.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-profile-digests"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceProfileDigestsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-profile-digests/{id}": {
            "get": {
                "summary": "Get Device Profile Digest",
                "description": "Get Device Profile Digest by device profile ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of device profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "device-profile-digests"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified device profile is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceProfileDigestsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified device profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/chassis-profiles": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "chassis-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Chassis Profiles",
                "description": "Shows a list of Chassis Profiles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "chassis-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiChassisProfilesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Chassis Profile",
                "description": "Create Chassis Profile with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiChassisProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "chassis-profiles"
                ],
                "responses": {
                    "201": {
                        "description": "If Chassis Profile was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/chassis-profiles/{id}": {
            "get": {
                "summary": "Get Chassis Profile",
                "description": "Get detailed information about specific Chassis Profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Chassis Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "chassis-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Chassis Profile is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiChassisProfilesIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Chassis Profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Chassis Profile",
                "description": "Update an existing Chassis Profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Chassis Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiChassisProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "chassis-profiles"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Chassis Profile successfully updated"
                    },
                    "404": {
                        "description": "Specified Chassis Profile does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Chassis Profile",
                "description": "Delete Chassis Profile specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Chassis Profile.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "chassis-profiles"
                ],
                "responses": {
                    "204": {
                        "description": "Chassis Profile successfully deleted"
                    },
                    "404": {
                        "description": "Specified Chassis Profile does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/logical-devices": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Logical Devices",
                "description": "Shows a list of Logical Devices.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignLogicalDevicesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Logical Device",
                "description": "Create Logical Device with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignLogicalDevicesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "If Logical Device was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/logical-devices/{id}": {
            "get": {
                "summary": "Get Logical Device",
                "description": "Get detailed information about specific Logical Device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Logical Device.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Logical Device is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignLogicalDevicesIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Logical Device does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Logical Device",
                "description": "Update an existing Logical Device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Logical Device.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignLogicalDevicesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Specified Logical Device successfully updated"
                    },
                    "404": {
                        "description": "Specified Logical Device does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Logical Device",
                "description": "Delete Logical Device specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Logical Device.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Logical Device successfully deleted"
                    },
                    "404": {
                        "description": "Specified Logical Device does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/templates": {
            "options": {
                "summary": "Get all design templates IDs",
                "description": "Returns a list of all design template IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all design templates",
                "description": "Returns a list of all design templates present in AOS.\n\nChangelog:\n    - 5.1.0: [CHANGED] Deprecated fields 'external_link_count',\n             'external_link_speed', 'external_facing_node_count'\n             and 'external_links_per_node' were removed.\n    - 6.0.0: [CHANGED] Added new template `type` - `'rail_collapsed'`.\n        It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignTemplatesResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Deprecated fields 'external_link_count', 'external_link_speed', 'external_facing_node_count' and 'external_links_per_node' were removed."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Added new template `type` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            },
            "post": {
                "summary": "Create a design template",
                "description": "Changelog:\n    - 5.1.0: [CHANGED] Deprecated fields 'external_link_count',\n             'external_link_speed', 'external_facing_node_count'\n             and 'external_links_per_node' were removed.\n    - 6.0.0: [CHANGED] Added new template `type` - `'rail_collapsed'`.\n        It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignTemplatesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Provided template ID is invalid"
                    },
                    "409": {
                        "description": "Template with the same parameters already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Deprecated fields 'external_link_count', 'external_link_speed', 'external_facing_node_count' and 'external_links_per_node' were removed."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Added new template `type` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            }
        },
        "/api/design/templates/{template_id}": {
            "get": {
                "summary": "Get design template",
                "description": "Changelog:\n    - 5.1.0: [CHANGED] Deprecated fields 'external_link_count',\n             'external_link_speed', 'external_facing_node_count'\n             and 'external_links_per_node' were removed.\n    - 6.0.0: [CHANGED] Added new template `type` - `'rail_collapsed'`.\n        It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "ID of the template",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignTemplatesTemplateIdResponse"
                        }
                    },
                    "404": {
                        "description": "Template with given ID not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Deprecated fields 'external_link_count', 'external_link_speed', 'external_facing_node_count' and 'external_links_per_node' were removed."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Added new template `type` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Update an existing design template",
                "description": "Updates specified design template by completely replacing its parameters.\n\nChangelog:\n    - 5.1.0: [CHANGED] Deprecated fields 'external_link_count',\n             'external_link_speed', 'external_facing_node_count'\n             and 'external_links_per_node' were removed.\n    - 6.0.0: [CHANGED] Added new template `type` - `'rail_collapsed'`.\n        It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "ID of the design template",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Template with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Deprecated fields 'external_link_count', 'external_link_speed', 'external_facing_node_count' and 'external_links_per_node' were removed."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Added new template `type` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete an existing design template",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "template_id",
                        "description": "ID of the design template",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Template with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/rack-types": {
            "options": {
                "summary": "Get all rack types IDs",
                "description": "Returns a list of all rack types IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all rack types",
                "description": "Returns a list of all rack types present in AOS.\n\nChangelog:\n    - 6.0.0: [CHANGED] Added support for AI/ML optimized racks.\n    - 6.0.0: [CHANGED] Added new `fabric_connectivity_design` -\n        `'rail_collapsed'`. It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignRackTypesResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added support for AI/ML optimized racks.",
                            "Added new `fabric_connectivity_design` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            },
            "post": {
                "summary": "Create new rack type",
                "description": "Changelog:\n   - 6.0.0: [CHANGED] Added support for AI/ML optimized racks.\n   - 6.0.0: [CHANGED] Added new `fabric_connectivity_design` -\n       `'rail_collapsed'`. It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignRackTypesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "409": {
                        "description": "Rack type with the same parameters already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added support for AI/ML optimized racks.",
                            "Added new `fabric_connectivity_design` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            }
        },
        "/api/design/rack-types/{rack_type_id}": {
            "get": {
                "summary": "Get specified rack type",
                "description": "Changelog:\n    - 6.0.0: [CHANGED] Added support for AI/ML optimized racks.\n    - 6.0.0: [CHANGED] Added new `fabric_connectivity_design` -\n        `'rail_collapsed'`. It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rack_type_id",
                        "description": "ID of the rack type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignRackTypesRequest"
                        }
                    },
                    "404": {
                        "description": "Rack type with given ID not found"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added support for AI/ML optimized racks.",
                            "Added new `fabric_connectivity_design` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Update an existing rack type",
                "description": "Updates specified rack type by completely replacing its parameters.\n\nChangelog:\n    - 6.0.0: [CHANGED] Added support for AI/ML optimized racks.\n    - 6.0.0: [CHANGED] Added new `fabric_connectivity_design` -\n        `'rail_collapsed'`. It models collapsed AI/ML fabric.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rack_type_id",
                        "description": "ID of the rack type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignRackTypesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Rack type with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added support for AI/ML optimized racks.",
                            "Added new `fabric_connectivity_design` - `'rail_collapsed'`. It models collapsed AI/ML fabric."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete an existing rack type",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rack_type_id",
                        "description": "ID of the rack type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Rack type with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/endpoint-policies/{endpoint_policy_id}": {
            "get": {
                "summary": "Get specified endpoint policy",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "endpoint_policy_id",
                        "description": "ID of the endpoint policy",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignEndpointPoliciesEndpointPolicyIdResponse"
                        }
                    },
                    "404": {
                        "description": "Endpoint policy with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/endpoint-policies": {
            "get": {
                "summary": "Get list of endpoint policies",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignEndpointPoliciesResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/design/ai-ml-template-calculator/calculate-l3-clos": {
            "post": {
                "summary": "Calculate L3 Clos AI/ML template options",
                "description": "Calculates the L3 Clos template options to be used for AI/ML fabric based\non the provided input parameters.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignAiMlTemplateCalculatorCalculateL3ClosRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignAiMlTemplateCalculatorCalculateL3ClosResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/design/ai-ml-template-calculator/calculate-rail-collapsed": {
            "post": {
                "summary": "Calculate Rail Collapsed AI/ML template options",
                "description": "Calculates the Rail Collapsed template options (single Stripe and\nno spine switches) to be used for AI/ML fabric based on the provided\ninput parameters.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignAiMlTemplateCalculatorCalculateRailCollapsedRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignAiMlTemplateCalculatorCalculateRailCollapsedResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/design/ai-ml-template-calculator/juniper-recommended": {
            "get": {
                "summary": "Get Juniper recommended Device Profiles",
                "description": "Returns list of the Device Profile that Juniper recommends for fabric\nswitches for AI/ML fabric.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignAiMlTemplateCalculatorJuniperRecommendedResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/design/config-templates": {
            "options": {
                "summary": "Get all Config Template IDs",
                "description": "Get list of all Config Template IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Config Templates",
                "description": "Shows a list of Config Templates.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignConfigTemplatesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Config Template",
                "description": "Create Config Template with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignConfigTemplatesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "If Config Template was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/config-templates/{id}": {
            "get": {
                "summary": "Get Config Template by ID",
                "description": "Get detailed information about specific Config Template.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Config Template.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Config Template is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignConfigTemplatesIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Config Template does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Config Template",
                "description": "Update an existing Config Template.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Config Template.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiDesignConfigTemplatesIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Config Template successfully updated"
                    },
                    "404": {
                        "description": "Specified Config Template does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Config Template",
                "description": "Delete Config Template specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Config Template.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Config Template successfully deleted"
                    },
                    "404": {
                        "description": "Specified Config Template does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/tags": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Tags",
                "description": "Shows a list of Tags.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignTagsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Tag",
                "description": "Create Tag with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignTagsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "If Tag was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/tags/{id}": {
            "get": {
                "summary": "Get Tag by ID",
                "description": "Get detailed information about specific Tag.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Tag.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Tag is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignTagsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Tag does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Tag",
                "description": "Update an existing Tag.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Tag.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiDesignTagsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Tag successfully updated"
                    },
                    "404": {
                        "description": "Specified Tag does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Tag",
                "description": "Delete Tag specified by ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Tag.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Tag successfully deleted"
                    },
                    "404": {
                        "description": "Specified Tag does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/graph-queries": {
            "options": {
                "summary": "Get all Graph Query IDs",
                "description": "Get list of all Graph Query IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Graph Queries",
                "description": "Shows a list of Graph Queries.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignGraphQueriesResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Graph Query",
                "description": "Create Graph Query with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignGraphQueriesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "If Graph Query was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/graph-queries/{id}": {
            "get": {
                "summary": "Get Graph Query by ID",
                "description": "Get detailed information about specific Graph Query.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Graph Query.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Graph Query is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignGraphQueriesIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Graph Query does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Graph Query",
                "description": "Update an existing Graph Query.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Graph Query.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiDesignGraphQueriesIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Graph Query successfully updated"
                    },
                    "404": {
                        "description": "Specified Graph Query does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Graph Query",
                "description": "Delete Graph Query specified by ID",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Graph Query.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Graph Query successfully deleted"
                    },
                    "404": {
                        "description": "Specified Graph Query does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/tenant-index": {
            "get": {
                "summary": "Get list of all tenant labels",
                "description": "Retrieves all tenants from role scopes and from blueprints and returns as a list.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "tenant-index"
                ],
                "responses": {
                    "200": {
                        "description": null,
                        "schema": {
                            "$ref": "#/definitions/GetApiTenantIndexResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/design/interface-maps": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Interface Maps",
                "description": "Shows a list of Interface Maps.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignInterfaceMapsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Interface Map",
                "description": "Create Interface Map with the specified ID. The \"created_at\" and \"last_modified_at\" fields are ignored. If no \"id\" is supplied, one will be generated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignInterfaceMapsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "201": {
                        "description": "If Interface Map was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/interface-maps/{id}": {
            "get": {
                "summary": "Get Interface Map by ID",
                "description": "Get detailed information about specific Interface Map.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Interface Map.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Interface Map is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignInterfaceMapsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Interface Map does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Interface Map",
                "description": "Update an existing Interface Map.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Interface Map.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDesignInterfaceMapsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Interface Map successfully updated"
                    },
                    "404": {
                        "description": "Specified Interface Map does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Interface Map",
                "description": "Delete Interface Map specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Interface Map.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "204": {
                        "description": "Interface Map successfully deleted"
                    },
                    "404": {
                        "description": "Specified Interface Map does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/interface-map-digests": {
            "options": {
                "summary": "Get all Resource IDs",
                "description": "Get list of all Resource IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of Interface Map Digests",
                "description": "Shows a list of Interface Map Digest payloads.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignInterfaceMapDigestsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/design/interface-map-digests/{id}": {
            "get": {
                "summary": "Get Interface Map Digest",
                "description": "Get Interface Map Digest by Interface Map ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of Interface Map.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "description": "Specified Interface Map Digest is returned successfully",
                        "schema": {
                            "$ref": "#/definitions/GetApiDesignInterfaceMapDigestsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Interface Map Digest does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/property-sets": {
            "get": {
                "summary": "Get all property sets",
                "description": "Retrieves all property sets present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiPropertySetsResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "List all property set IDs",
                "description": "Retrieves a list of all property set IDs present in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create new property set",
                "description": "Creates a new property set and returns its ID.\n\nThe request must include a label and either `values` or `values_yaml`,\nbut not both.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiPropertySetsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiPropertySetsResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided; invalid property key names; invalid YAML format; duplicate label"
                    }
                },
                "changelog": null
            }
        },
        "/api/property-sets/{property_set_id}": {
            "get": {
                "summary": "Get property set with specified ID",
                "description": "Retrieves details of the property set identified by the given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_set_id",
                        "description": "ID of property set",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiPropertySetsPropertySetIdResponse"
                        }
                    },
                    "404": {
                        "description": "Property set not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update property set with specified ID",
                "description": "Replaces the entire configuration of the property set identified by the\ngiven ID.\n\nThe request must include a label and either `values` or `values_yaml`,\nbut not both.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_set_id",
                        "description": "ID of property set",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiPropertySetsPropertySetIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Property set not found"
                    },
                    "422": {
                        "description": "Invalid request data provided; invalid property key names; invalid YAML format; duplicate label"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Partially update property set with specified ID",
                "description": "Updates specific fields of the property set identified by the given ID.\n\nThe request may include a label and/or either `values` or `values_yaml`,\nbut not both.\n\nIn the `values` object, a None value for a key is used as an instruction to\nremove that key.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_set_id",
                        "description": "ID of property set",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiPropertySetsPropertySetIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Property set not found"
                    },
                    "422": {
                        "description": "Invalid request data provided; invalid property key names; invalid YAML format; duplicate label"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete property set with specified ID",
                "description": "Removes the property set identified by the given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_set_id",
                        "description": "ID of property set",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "property-sets"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Property set not found"
                    },
                    "409": {
                        "description": "Property set in use"
                    }
                },
                "changelog": null
            }
        },
        "/api/port-setting-schemas": {
            "get": {
                "summary": "Get port setting schemas for supported vendors",
                "description": "Retrieves JSON schemas for port settings specific to EOS, NXOS, JunOS, and SONiC\nplatforms.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "port-setting-schemas"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/connector-types": {
            "get": {
                "summary": "Get connector types",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "connector-types"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiConnectorTypesResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/supported-speeds": {
            "get": {
                "summary": "Enumerate supported speeds",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "supported-speeds"
                ],
                "responses": {
                    "200": {
                        "description": null,
                        "schema": {
                            "$ref": "#/definitions/GetApiSupportedSpeedsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/flow-data-collectors": {
            "post": {
                "summary": "Add a flow data collector",
                "description": "Add a flow data collector to Juniper Apstra by specifying the access\ninformation and credentials.\n\nChangelog:\n    - 5.1.0: [CHANGED] SSH connection check has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFlowDataCollectorsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "201": {
                        "description": "Created successfully"
                    },
                    "409": {
                        "description": "Connectivity test failed"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "SSH connection check has been added."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Get all flow data collectors configured",
                "description": "Get all flow data collectors configured in Juniper Apstra.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": null,
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryFlowDataCollectorsResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "GET all flow data collector IDs",
                "description": "Get all flow data collector IDs configured in Juniper Apstra",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": null,
                        "schema": {
                            "$ref": "#/definitions/OptionsApiTelemetryFlowDataCollectorsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/telemetry/flow-data-collectors/{collector_id}": {
            "put": {
                "summary": "Replace configuration of an already configured flow data collector configuration",
                "description": "Replace an already configured flow data collector configuration for\na given {collector_id} using PUT API.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "collector_id",
                        "description": "ID of the flow data collector configured.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiTelemetryFlowDataCollectorsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": null
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Modify an already configured flow data collector configuration",
                "description": "Modify an already configured flow data collector configuration for\na given {collector_id} using PATCH API.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "collector_id",
                        "description": "ID of the flow data collector configured.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiTelemetryFlowDataCollectorsCollectorIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": null
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get flow data collector configuration",
                "description": "Get flow data collector configuration for the specified {collector_id}",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "200": {
                        "description": null,
                        "schema": {
                            "$ref": "#/definitions/GetApiTelemetryFlowDataCollectorsCollectorIdResponse"
                        }
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Remove flow data collector",
                "description": "Remove flow data collector specified in {collector_id} from Juniper Apstra.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "collector_id",
                        "description": "ID of the flow data collector configured.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "telemetry"
                ],
                "responses": {
                    "204": {
                        "description": null
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/asn-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all ASN Pools",
                "description": "Shows a list of all ASN Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesAsnPoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create ASN Pool",
                "description": "Create ASN Pool with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiResourcesAsnPoolsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "201": {
                        "description": "If ASN Pool was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/asn-pools/{id}": {
            "get": {
                "summary": "Get specified ASN Pool",
                "description": "Get detailed information about specific ASN Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given ASN Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified ASN Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesAsnPoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified ASN Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify ASN Pool",
                "description": "Update an existing ASN Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given ASN Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiResourcesAsnPoolsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Specified ASN Pool successfully updated"
                    },
                    "404": {
                        "description": "Specified ASN Pool does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete ASN Pool",
                "description": "Delete ASN Pool as specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given ASN Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "ASN Pool successfully deleted"
                    },
                    "404": {
                        "description": "Specified ASN Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/ip-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all IP Address Pools",
                "description": "Shows a list of all IP Address Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesIpPoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create IP Address Pool",
                "description": "Create IP Address Pool with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiResourcesIpPoolsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "201": {
                        "description": "If IP Address Pool was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/ip-pools/{id}": {
            "get": {
                "summary": "Get specified IP Address Pool",
                "description": "Get detailed information about specific IP Address Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given IP Address Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified IP Address Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesIpPoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified IP Address Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify IP Address Pool",
                "description": "Update an existing IP Address Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given IP Address Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiResourcesIpPoolsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Specified IP Address Pool successfully updated"
                    },
                    "404": {
                        "description": "Specified IP Address Pool does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete IP Address Pool",
                "description": "Delete IP Address Pool as specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given IP Address Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "IP Address Pool successfully deleted"
                    },
                    "404": {
                        "description": "Specified IP Address Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/ipv6-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all IP Address Pools",
                "description": "Shows a list of all IP Address Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesIpv6PoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create IP Address Pool",
                "description": "Create IP Address Pool with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiResourcesIpv6PoolsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "201": {
                        "description": "If IP Address Pool was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/ipv6-pools/{id}": {
            "get": {
                "summary": "Get specified IP Address Pool",
                "description": "Get detailed information about specific IP Address Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given IP Address Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified IP Address Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesIpv6PoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified IP Address Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify IP Address Pool",
                "description": "Update an existing IP Address Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given IP Address Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiResourcesIpv6PoolsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Specified IP Address Pool successfully updated"
                    },
                    "404": {
                        "description": "Specified IP Address Pool does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete IP Address Pool",
                "description": "Delete IP Address Pool as specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given IP Address Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "IP Address Pool successfully deleted"
                    },
                    "404": {
                        "description": "Specified IP Address Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/vlan-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all VLAN Pools",
                "description": "Shows a list of all VLAN Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesVlanPoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create VLAN Pool",
                "description": "Create VLAN Pool with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiResourcesVlanPoolsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "201": {
                        "description": "If VLAN Pool was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/vlan-pools/{id}": {
            "get": {
                "summary": "Get specified VLAN Pool",
                "description": "Get detailed information about specific VLAN Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given VLAN Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified VLAN Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesVlanPoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified VLAN Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify VLAN Pool",
                "description": "Update an existing VLAN Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given VLAN Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiResourcesVlanPoolsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Specified VLAN Pool successfully updated"
                    },
                    "404": {
                        "description": "Specified VLAN Pool does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete VLAN Pool",
                "description": "Delete VLAN Pool as specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given VLAN Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "VLAN Pool successfully deleted"
                    },
                    "404": {
                        "description": "Specified VLAN Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/vni-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all VNI Pools",
                "description": "Shows a list of all VNI Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesVniPoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create VNI Pool",
                "description": "Create VNI Pool with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiResourcesVniPoolsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "201": {
                        "description": "If VNI Pool was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/vni-pools/{id}": {
            "get": {
                "summary": "Get specified VNI Pool",
                "description": "Get detailed information about specific VNI Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given VNI Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified VNI Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesVniPoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified VNI Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify VNI Pool",
                "description": "Update an existing VNI Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given VNI Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiResourcesVniPoolsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Specified VNI Pool successfully updated"
                    },
                    "404": {
                        "description": "Specified VNI Pool does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete VNI Pool",
                "description": "Delete VNI Pool as specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given VNI Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "VNI Pool successfully deleted"
                    },
                    "404": {
                        "description": "Specified VNI Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/device-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all Device Pools",
                "description": "Shows a list of all Device Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesDevicePoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/device-pools/{id}": {
            "get": {
                "summary": "Get specified Device Pool",
                "description": "Get detailed information about specific Device Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given Device Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Device Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesDevicePoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Device Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/integer-pools": {
            "options": {
                "summary": "Get all Resource Pool Ids",
                "description": "Get a list of all Resource Pool IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Show all Integer Pools",
                "description": "Shows a list of all Integer Pools in the system.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesIntegerPoolsResponse"
                        }
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create Integer Pool",
                "description": "Create Integer Pool with the specified ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiResourcesIntegerPoolsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "201": {
                        "description": "If Integer Pool was created",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/resources/integer-pools/{id}": {
            "get": {
                "summary": "Get specified Integer Pool",
                "description": "Get detailed information about specific Integer Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given Integer Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "200": {
                        "description": "Status of specified Integer Pool is returned",
                        "schema": {
                            "$ref": "#/definitions/GetApiResourcesIntegerPoolsIdResponse"
                        }
                    },
                    "404": {
                        "description": "Specified Integer Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Modify Integer Pool",
                "description": "Update an existing Integer Pool.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given Integer Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiResourcesIntegerPoolsIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Specified Integer Pool successfully updated"
                    },
                    "404": {
                        "description": "Specified Integer Pool does not exist"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete Integer Pool",
                "description": "Delete Integer Pool as specified by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "ID of the given Integer Pool.",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "resources"
                ],
                "responses": {
                    "204": {
                        "description": "Integer Pool successfully deleted"
                    },
                    "404": {
                        "description": "Specified Integer Pool does not exist"
                    },
                    "422": {
                        "description": "If error occurs"
                    }
                },
                "changelog": null
            }
        },
        "/api/config/audit": {
            "get": {
                "summary": "Return current audit configuration",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiConfigAuditResponse"
                        }
                    },
                    "404": {
                        "description": "Audit configuration not found in sysdb"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update audit configration",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetApiConfigAuditResponse"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "config"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Audit configuration not found in sysdb"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/audit/events": {
            "get": {
                "summary": "Get stored audit events",
                "description": "Changelog:\n    - 5.1.0: [CHANGED] New audit events 'blueprintLock'\n                       and 'blueprintUnlock' have been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "audit"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAuditEventsResponse"
                        }
                    },
                    "404": {
                        "description": "Audit events entity not found in sysdb"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New audit events 'blueprintLock' and 'blueprintUnlock' have been added."
                        ]
                    }
                },
                "deprecated": true
            }
        },
        "/api/audit/events/query": {
            "post": {
                "summary": "Query audit events from metricdb using metric query interface",
                "description": "Returns audit events from metricdb using metric query interface by providing\naudit event types, time range etc.\n\nChangelog:\n    - 5.1.0: [CHANGED] New audit events 'blueprintLock'\n                       and 'blueprintUnlock' have been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAuditEventsQueryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "audit"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAuditEventsQueryResponse"
                        }
                    },
                    "404": {
                        "description": "Metric not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New audit events 'blueprintLock' and 'blueprintUnlock' have been added."
                        ]
                    }
                }
            }
        },
        "/api/audit/events/device-config": {
            "post": {
                "summary": "Get device config change related to audit event",
                "description": "Returns full content of a device config change corresponding to a\nspecific `DeviceConfigChange` audit event. This content is expected to\nbe a large string. Thus, each value is stored in a separate file of its\nown, to be loaded only on demand.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAuditEventsDeviceConfigRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "audit"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAuditEventsDeviceConfigResponse"
                        }
                    },
                    "404": {
                        "description": "Device config not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/audit/events/retention": {
            "get": {
                "summary": "Get retention policy for audit events stored in the metricdb",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "audit"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAuditEventsRetentionResponse"
                        }
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Set retention policy for audit events stored in the metricdb",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAuditEventsRetentionRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "audit"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/audit/events/types": {
            "get": {
                "summary": "Get a list of supported audit event types",
                "description": "Changelog:\n    - 5.1.0: [CHANGED] New audit events 'blueprintLock'\n                       and 'blueprintUnlock' have been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "audit"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAuditEventsTypesResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New audit events 'blueprintLock' and 'blueprintUnlock' have been added."
                        ]
                    }
                }
            }
        },
        "/api/config/syslogs": {
            "get": {
                "summary": "Get all syslog configs",
                "description": "Returns the list of all syslog configs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiConfigSyslogsResponse"
                        }
                    },
                    "422": {
                        "description": "Syslog configs are malformed"
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get all syslog config IDs",
                "description": "Returns the list of all syslog config IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create new syslog config",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiConfigSyslogsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "config"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiConfigSyslogsResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/config/syslogs/{syslog_config_id}": {
            "get": {
                "summary": "Get syslog config with given ID",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "syslog_config_id",
                        "description": "ID of syslog config",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiConfigSyslogsRequest"
                        }
                    },
                    "404": {
                        "description": "Syslog config with given ID not found"
                    },
                    "422": {
                        "description": "Syslog config is malformed"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update syslog config with given ID with full replacement",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "syslog_config_id",
                        "description": "ID of syslog config",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiConfigSyslogsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "config"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Syslog config with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete syslog config with given ID",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "syslog_config_id",
                        "description": "ID of syslog config",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "config"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Syslog config with given ID not found"
                    },
                    "409": {
                        "description": "Syslog config is in use"
                    }
                },
                "changelog": null
            }
        },
        "/api/config/timezones": {
            "get": {
                "summary": "Get a list of supported timezones",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "config"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/docs": {
            "get": {
                "summary": "Get OpenAPI documentation for AOS",
                "description": "Retrieves the OpenAPI documentation for the entire AOS API.\n\nChangelog:\n    - 6.0.0: [CHANGED] New query parameter 'show_removed' to show removed\n                       endpoints.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "show_removed",
                        "description": "Set to true to also get removed endpoints; false by default",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDocsResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "New query parameter 'show_removed' to show removed endpoints."
                        ]
                    }
                }
            }
        },
        "/api/docs/reference_designs": {
            "options": {
                "summary": "Get all Reference Design names",
                "description": "Retrieves all Reference Design names installed in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get available reference designs",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDocsReferenceDesignsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/docs/reference_design_plantuml": {
            "options": {
                "summary": "Get all Reference Design names",
                "description": "Retrieves all Reference Design names installed in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get available reference designs",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDocsReferenceDesignsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/docs/reference_design_schemas": {
            "options": {
                "summary": "Get all Reference Design names",
                "description": "Retrieves all Reference Design names installed in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get available reference designs",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDocsReferenceDesignsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/docs/reference_designs/{reference_design_name}": {
            "get": {
                "summary": "Get OpenAPI documentation for specified reference design",
                "description": "Changelog:\n    - 6.0.0: [CHANGED] New query parameter 'show_removed' to show removed\n                       endpoints.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reference_design_name",
                        "description": "Name of reference design",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "show_removed",
                        "description": "Set to true to also get removed endpoints; false by default",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDocsResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown reference design"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "New query parameter 'show_removed' to show removed endpoints."
                        ]
                    }
                }
            }
        },
        "/api/docs/reference_design_schemas/{reference_design_name}": {
            "get": {
                "summary": "Get graph schema documentation for specified reference design",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reference_design_name",
                        "description": "Name of reference design",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDocsReferenceDesignSchemasReferenceDesignNameResponse"
                        }
                    },
                    "404": {
                        "description": "Unknown reference design"
                    }
                },
                "changelog": null
            }
        },
        "/api/docs/reference_design_plantuml/{reference_design_name}": {
            "get": {
                "summary": "Get PlantUML diagram text for specified reference design",
                "description": "Builds and retrieves the PlantUML diagram text for the given reference\ndesign.\n\nSee also GET `/docs/reference_design_schemas/<reference_design_name>`",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reference_design_name",
                        "description": "Name of reference design",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "docs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Unknown reference design"
                    }
                },
                "changelog": null
            }
        },
        "/api/features": {
            "get": {
                "summary": "Get supported features and their enablement status",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "features"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiFeaturesResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/build": {
            "get": {
                "summary": "Get server build information",
                "description": "Retrieves the current server build version and build datetime.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved server build information",
                        "schema": {
                            "$ref": "#/definitions/GetApiVersionsBuildResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/server": {
            "get": {
                "summary": "Get server build information",
                "description": "Retrieves the current server build version and build datetime.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved server build information",
                        "schema": {
                            "$ref": "#/definitions/GetApiVersionsBuildResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/aosdi": {
            "get": {
                "summary": "Get AOS Device Installer build version",
                "description": "Retrieves the version of the AOS Device Installer.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved AOSDI version",
                        "schema": {
                            "$ref": "#/definitions/GetApiVersionsBuildResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/version": {
            "get": {
                "summary": "Get API version",
                "description": "Retrieves the current API version along with major, minor, build, and hotfix\ndetails.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "version"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved API version",
                        "schema": {
                            "$ref": "#/definitions/GetApiVersionResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/api": {
            "get": {
                "summary": "Get API version",
                "description": "Retrieves the current API version along with major, minor, build, and hotfix\ndetails.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved API version",
                        "schema": {
                            "$ref": "#/definitions/GetApiVersionResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/device": {
            "post": {
                "summary": "Device agent version check",
                "description": "Device agent checks version compatibility before connecting to Sysdb. May\ndownload and install new image if requested by AOS Controller.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiVersionsDeviceRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully checked device agent version",
                        "schema": {
                            "$ref": "#/definitions/PostApiVersionsDeviceResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid version check request"
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/node": {
            "post": {
                "summary": "Node version check",
                "description": "Verifies node version and ensures no conflicts with existing node IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiVersionsNodeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Checked node version",
                        "schema": {
                            "$ref": "#/definitions/PostApiVersionsNodeResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/iba": {
            "post": {
                "summary": "IBA unit version check",
                "description": "Checks the version of the IBA unit for compatibility.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiVersionsIbaRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully checked IBA unit version",
                        "schema": {
                            "$ref": "#/definitions/PostApiVersionsDeviceResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/versions/controller-id": {
            "get": {
                "summary": "Return AOS Controller ID",
                "description": "The Controller ID can be overrided using `aos.conf`.\nIf Controller ID is not specified, the first 64 bits of sha-256\n/etc/machine-id will be used.\nFor detailed info see:\n    https://www.freedesktop.org/software/systemd/man/machine-id.html",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "versions"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Controller ID",
                        "schema": {
                            "$ref": "#/definitions/GetApiVersionsControllerIdResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/snapshots": {
            "options": {
                "summary": "Get list of all snapshot IDs",
                "description": "Retrieves a list of all available snapshot IDs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "snapshots"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiSnapshotsResponse"
                        }
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all AOS snapshots",
                "description": "Retrieves a list of all AOS snapshots, including detailed statistics for each.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "snapshots"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSnapshotsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/snapshots/{snapshot_id}": {
            "get": {
                "summary": "Get specified snapshot details",
                "description": "Retrieves detailed information for the snapshot specified by the given snapshot\nID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "snapshot_id",
                        "description": "ID of the snapshot",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "snapshots"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSnapshotsSnapshotIdResponse"
                        }
                    },
                    "404": {
                        "description": "Snapshot not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specified snapshot",
                "description": "Removes the snapshot specified by the given snapshot ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "snapshot_id",
                        "description": "ID of the snapshot",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "snapshots"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Snapshot not found"
                    },
                    "409": {
                        "description": "Unable to delete snapshot"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-os/platforms": {
            "get": {
                "summary": "Get all supported platforms and corresponding checksum formats",
                "description": "Retrieves a list of supported device OS platforms and their associated checksum\ntypes.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceOsPlatformsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/device-os/images-external": {
            "post": {
                "summary": "Register device OS image using external URL",
                "description": "Registers a device OS image using an external URL accessible by AOS and the\ndevice.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDeviceOsImagesExternalRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Empty payload"
                    },
                    "409": {
                        "description": "Several checksum types possible"
                    },
                    "422": {
                        "description": "Unsupported device OS platform; unsupported checksum type; only http or https protocols are supported; invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-os/validate-image": {
            "post": {
                "summary": "Validate device OS image details before upload",
                "description": "Validates the provided device OS image details before upload.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiDeviceOsValidateImageRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Empty payload"
                    },
                    "422": {
                        "description": "Unsupported device OS platform; invalid image name; unsupported checksum type; invalid checksum; insufficient disk space; invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-os/images/{image_id}": {
            "get": {
                "summary": "Get details of specified device OS image",
                "description": "Retrieves details of the device OS image specified by the given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "image_id",
                        "description": "ID of the device OS image",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceOsImagesImageIdResponse"
                        }
                    },
                    "404": {
                        "description": "Device OS image not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Partially update device OS image",
                "description": "Updates specific fields (platform, description, checksum, checksum_type) of the\ndevice OS image.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "image_id",
                        "description": "ID of the device OS image",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiDeviceOsImagesImageIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Device OS image not found"
                    },
                    "422": {
                        "description": "Unsupported device OS platform; unsupported checksum type; invalid checksum; invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specified device OS image",
                "description": "Removes the device OS image specified by the given ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "image_id",
                        "description": "ID of the device OS image",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Device OS image not found"
                    },
                    "422": {
                        "description": "Failed to delete image"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-os/images": {
            "get": {
                "summary": "Get all device OS images of all OS platforms",
                "description": "Retrieves a list of all device OS images with detailed information.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceOsImagesResponse"
                        }
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get IDs of all uploaded device OS images",
                "description": "Retrieves a list of IDs for all uploaded device OS images.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/device-os/stats": {
            "get": {
                "summary": "Get disk usage statistics for device OS images",
                "description": "Retrieves free and total disk space for the partition hosting device OS images.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "device-os"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiDeviceOsStatsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/systems": {
            "post": {
                "summary": "Create new device",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiStreamingConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Empty payload"
                    },
                    "409": {
                        "description": "Device with the specified key already exists"
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get all device IDs",
                "description": "Retrieves all systems' IDs present in AOS.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get all devices",
                "description": "A list of all devices in AOS is returned.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}": {
            "get": {
                "summary": "Get information about device",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Fully replace user config for device",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiSystemsSystemIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Empty payload"
                    },
                    "404": {
                        "description": "Device not found"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specified device",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "202": {
                        "description": "Device deletion is in progress"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/revert-to-pristine": {
            "post": {
                "summary": "Revert pristine config for device",
                "description": "This API is deprecated and will be removed in the future releases.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Device operating system is being upgraded, cannot push config"
                    }
                },
                "changelog": null,
                "deprecated": true
            }
        },
        "/api/systems/{system_id}/collect-pristine": {
            "post": {
                "summary": "Collect pristine config for device",
                "description": "This API is deprecated and will be removed in future releases.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "System agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Other errors"
                    }
                },
                "changelog": null,
                "deprecated": true
            }
        },
        "/api/systems/{system_id}/pristine-config": {
            "get": {
                "summary": "Get pristine config for device",
                "description": "This API is deprecated and will be removed in the future releases.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdPristineConfigResponse"
                        }
                    },
                    "404": {
                        "description": "No system agent found for the given system ID; device pristine info not found"
                    }
                },
                "changelog": null,
                "deprecated": true
            },
            "post": {
                "summary": "Update pristine-config of the device",
                "description": "Note: this will not be reflected on device unless a full-config push is\ntriggered.\n\nThis API is deprecated and will be removed in the future releases.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsSystemIdPristineConfigRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "No system agent found for given system ID"
                    },
                    "422": {
                        "description": "Device operating system is being upgraded, cannot update pristine"
                    }
                },
                "changelog": null,
                "deprecated": true
            }
        },
        "/api/systems/{system_id}/apply-full-config": {
            "post": {
                "summary": "Apply full config on device",
                "description": "Requests a full config (config replace) to be applied on the device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "409": {
                        "description": "Device is busy or waiting for previous request to be processed"
                    },
                    "422": {
                        "description": "Device operating system is being upgraded, cannot push config"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/accept-running-config-as-golden": {
            "post": {
                "summary": "Accept running config as golden for device",
                "description": "Requests the current running config of the system to be considered valid/golden.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "409": {
                        "description": "Device is busy; waiting for previous request to be processed"
                    },
                    "422": {
                        "description": "Device operating system is being upgraded"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems-batch-create": {
            "post": {
                "summary": "Create devices in batch operation",
                "description": "Creates a set of new systems in a batch according to the specified\nattributes. This operation is not atomic, so it creates only\npossible devices.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsBatchCreateRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems-batch-create"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsBatchCreateResponse"
                        }
                    },
                    "207": {
                        "description": "Some devices created with errors"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems-batch-update": {
            "post": {
                "summary": "Update devices in batch operation",
                "description": "Updates user configuration attributes, such as location, HCL-model\nand admin state, of a set of systems in a batch operation.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsBatchUpdateRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems-batch-update"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "207": {
                        "description": "Some devices updated with errors"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems-batch-delete": {
            "post": {
                "summary": "Delete devices in batch",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsBatchDeleteRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems-batch-delete"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "207": {
                        "description": "Some devices could not be deleted"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents": {
            "get": {
                "summary": "Get all system agents",
                "description": "Retrieves a list of all system agents in AOS. This includes both onbox and\noffbox agents.\nVirtual infrastructure agents can be optionally skipped using the\n'skip_virtual_infra' query parameter.\n\nChangelog:\n    - 6.0.0: [CHANGED] 'install_requirements' field has been deprecated.\n        Apstra resets the field to False if set.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "skip_virtual_infra",
                        "description": "If present, skips virtual infrastructure agents in the response",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentsResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "'install_requirements' field has been deprecated. Apstra resets the field to False if set."
                        ]
                    }
                }
            },
            "options": {
                "summary": "Get system agent ID list",
                "description": "Retrieves a list of IDs for all system agents present in AOS. This includes\nboth onbox and offbox agents.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/OptionsApiSystemAgentsResponse"
                        }
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create new system agent",
                "description": "Creates a new system agent using the provided user configuration. The effective\nconfig of the system agent is a combination of the user config and the\nsystem agent profile referenced by the user config, if any.\n\nChangelog:\n    - 6.0.0: [CHANGED] 'install_requirements' field has been deprecated.\n        Apstra resets the field to False if set.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemAgentsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemAgentsResponse"
                        }
                    },
                    "409": {
                        "description": "System agent ID already exists; virtual infra agents cannot be created with this API"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "'install_requirements' field has been deprecated. Apstra resets the field to False if set."
                        ]
                    }
                }
            }
        },
        "/api/system-agents/{agent_id}": {
            "get": {
                "summary": "Get specified system agent information",
                "description": "Retrieves detailed information about the system agent specified by the given\nagent ID.\nThis includes configuration, status, job information, and device details for\nboth onbox and offbox agents.\n\nChangelog:\n    - 6.0.0: [CHANGED] 'install_requirements' field has been deprecated.\n        Apstra resets the field to False if set.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentsAgentIdResponse"
                        }
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent found for both onbox and offbox"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "'install_requirements' field has been deprecated. Apstra resets the field to False if set."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Modify system agent configuration",
                "description": "Updates the configuration of the system agent specified by the given agent ID\nby replacing its entire configuration.\n\nThe provided payload is the user config, which is merged with the system agent\nprofile (if any) to produce an effective config of the system agent.\n\nChangelog:\n    - 6.0.0: [CHANGED] 'install_requirements' field has been deprecated.\n        Apstra resets the field to False if set.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiSystemAgentsAgentIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent found for both onbox and offbox"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "'install_requirements' field has been deprecated. Apstra resets the field to False if set."
                        ]
                    }
                }
            },
            "patch": {
                "summary": "Partially modify system agent configuration",
                "description": "Updates specific fields of the configuration for the system agent specified by\nthe given agent ID. The provided payload contains the fields to be updated.\n\nThe new user config is merged with the existing config and the system agent\nprofile to produce an effective config of the system agent.\n\nChangelog:\n    - 6.0.0: [CHANGED] 'install_requirements' field has been deprecated.\n        Apstra resets the field to False if set.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiSystemAgentsAgentIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent found for both onbox and offbox"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "'install_requirements' field has been deprecated. Apstra resets the field to False if set."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Delete specified system agent",
                "description": "Removes the system agent specified by the given agent ID.\n\nIf the `force` parameter is set to `true`, it allows bypassing the agent\nuninstall process and directly deletes the system agent (onbox or offbox).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "force",
                        "description": "Allows bypassing agent uninstall and directly deleting the system agent when set to true",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent found for both onbox and offbox; cannot delete agent due to current state (e.g., connected, running container); cannot delete agent created by Virtual Infra Manager"
                    },
                    "422": {
                        "description": "Invalid force parameter value provided; system agent associated with a blueprint"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agent/manager-config": {
            "get": {
                "summary": "Get system agent manager config",
                "description": "Retrieves System Agent Manager configuration parameters, including settings for\npristine validation, revert to pristine on uninstall, and interface shutdown on\nupgrade.\n\nChangelog:\n- 5.1.0: [CHANGED] New 'device_os_image_download_timeout' field\n                   has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "system-agent"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentManagerConfigResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New 'device_os_image_download_timeout' field has been added."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Modify system agent manager configuration",
                "description": "Updates System Agent Manager configuration parameters, including settings for\npristine validation, revert to pristine on uninstall, and interface shutdown on\nupgrade.\n\nChangelog:\n- 5.1.0: [CHANGED] New 'device_os_image_download_timeout' field\n                   has been added.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentManagerConfigResponse"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "New 'device_os_image_download_timeout' field has been added."
                        ]
                    }
                }
            }
        },
        "/api/system-agents/{agent_id}/job-history": {
            "get": {
                "summary": "Get specified agent's job history in reverse chronological order",
                "description": "Retrieves the job history for the specified agent, including details such as\njob ID, type, state, and timestamps.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentsAgentIdJobHistoryResponse"
                        }
                    },
                    "404": {
                        "description": "Agent not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/last-job-log": {
            "get": {
                "summary": "Get job logs for current active job or last run job",
                "description": "Retrieves job logs for the current active job, or if no job is active, for the\nlast run job.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Agent not found; job not found; job log not found; job log file does not exist"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/job-logs/{job_id}": {
            "get": {
                "summary": "Get logs of specified job for given agent",
                "description": "Retrieves the logs of a job. Logs are available only for job IDs in the agent's\njob history.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "job_id",
                        "description": "ID of the job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Agent not found; job not found; job log not found; job log file does not exist"
                    },
                    "422": {
                        "description": "Invalid job ID"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agent-jobs/pending-jobs": {
            "get": {
                "summary": "Get list of agents with pending jobs",
                "description": "Retrieves a list of system agents that have jobs in a pending state. This\nincludes both onbox and offbox agents.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "system-agent-jobs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentJobsPendingJobsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agent-jobs/active-jobs": {
            "get": {
                "summary": "Get list of agents with currently running jobs",
                "description": "Retrieves a list of system agents that have jobs currently in progress. This\nincludes both onbox and offbox agents.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "system-agent-jobs"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentJobsActiveJobsResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/install-agent": {
            "post": {
                "summary": "Install AOS agent on device",
                "description": "Triggers a job to install the AOS agent for the given system agent.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the onbox system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job; offbox container is already running"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/uninstall-agent": {
            "post": {
                "summary": "Uninstall aos agent on device",
                "description": "Triggers a job to uninstall the AOS agent on for the given system agent.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the onbox system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job; device associated with agent is in blueprint"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/cancel": {
            "post": {
                "summary": "Cancel running job for specified agent",
                "description": "Attempts to cancel the currently running job for the given system agent.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the onbox system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "No job in progress to cancel"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/show-tech": {
            "post": {
                "summary": "Collect AOS show tech from device",
                "description": "Triggers a job to collect AOS show tech information for the given system agent.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the onbox system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job; job not supported for offbox-agent"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/check": {
            "post": {
                "summary": "Check if system agent can authenticate to device",
                "description": "Verifies if the device with the specified onbox system agent ID can authenticate\nto the device.\nThe system agent requires either a username and password or profile set during\nPOST to `/api/system-agents` or PATCH/PUT to `/api/system-agents/{agent_id}`\nprior to this call.\n\nThis endpoint can be used to debug device authentication. To prevent changes\nwhile using this endpoint, users can set `managed` to `False` via PATCH\n`/api/system-agents/{agent_id}`.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the onbox system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/dos-upgrade": {
            "post": {
                "summary": "Upgrade Device OS of specified device",
                "description": "Initiates an upgrade job for the Device OS (platform) of the device associated\nwith the given agent ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent on this device",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemAgentsAgentIdDosUpgradeRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found; image not registered with AOS"
                    },
                    "409": {
                        "description": "Agent is already running a job"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/revert-to-pristine": {
            "post": {
                "summary": "Revert pristine config for device",
                "description": "Triggers a job to revert the device to its pristine configuration.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job; device associated with agent is in blueprint; job not supported for offbox-agent"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/collect-pristine": {
            "post": {
                "summary": "Collect pristine config for device associated with given agent",
                "description": "Triggers a job to collect the pristine configuration for the device associated\nwith the specified agent ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found"
                    },
                    "409": {
                        "description": "Agent is already running a job; device associated with agent is in blueprint"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agents/{agent_id}/pristine-config": {
            "post": {
                "summary": "Update pristine config for device associated with given agent",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsSystemIdPristineConfigRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Agent is missing credentials"
                    },
                    "404": {
                        "description": "System agent not found; no system associated with given agent; device not found"
                    },
                    "409": {
                        "description": "Agent is already running a job; device associated with agent is in blueprint; invalid encrypted gRPC TLS certificate provided"
                    },
                    "422": {
                        "description": "Invalid request data provided; invalid platform value; pristine configuration is empty"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get pristine config for device associated with given agent",
                "description": "Retrieves the pristine configuration for the device associated with the\nspecified agent.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "description": "ID of the system agent",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agents"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemsSystemIdPristineConfigResponse"
                        }
                    },
                    "404": {
                        "description": "Agent not found; no system associated with given agent; device pristine info not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agent-profiles": {
            "post": {
                "summary": "Create new system agent profile",
                "description": "Creates a new profile with the provided configuration, including packages.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemAgentProfilesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "409": {
                        "description": "Profile ID already exists; label already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "options": {
                "summary": "Get list of system agent profile IDs",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of all system agent profiles",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentProfilesResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agent-profiles/{profile_id}/assign": {
            "post": {
                "summary": "Assign system agent profile to list of system agents",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_id",
                        "description": "ID of the system agent profile",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemAgentProfilesProfileIdAssignRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Profile not found; system agent not found"
                    },
                    "409": {
                        "description": "Conflict in package or open options configuration"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/system-agent-profiles/{profile_id}": {
            "put": {
                "summary": "Modify system agent profile by replacing its entire configuration",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_id",
                        "description": "ID of the system agent profile",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiSystemAgentProfilesProfileIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "409": {
                        "description": "Label already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Partially modify system agent profile",
                "description": "Updates specific fields of the profile specified by the given profile ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_id",
                        "description": "ID of the system agent profile",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiSystemAgentProfilesProfileIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "409": {
                        "description": "Label already exists"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get details of specified system agent profile",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_id",
                        "description": "ID of the system agent profile",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiSystemAgentProfilesProfileIdResponse"
                        }
                    },
                    "404": {
                        "description": "Profile not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specified system agent profile",
                "description": "Deletes the system agent profile specified by the given profile ID.\nCannot delete a profile that is in use by any system agent.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_id",
                        "description": "ID of the system agent profile",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "system-agent-profiles"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "422": {
                        "description": "Profile is in use"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/services/{service_name}/refresh": {
            "post": {
                "summary": "Trigger one time telemetry service collection",
                "description": "Immediately triggers one time telemetry service collection.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "service_name",
                        "description": "Name of the service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "System id not found; telemetry service not found for the system"
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/device": {
            "post": {
                "summary": "Post ZTP status of a device",
                "description": "Posts the ZTP (Zero Touch Provisioning) status for a given device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiZtpDeviceRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created the ZTP status",
                        "schema": {
                            "$ref": "#/definitions/PostApiZtpDeviceResponse"
                        }
                    },
                    "400": {
                        "description": "Empty payload"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "List ZTP statuses of all devices",
                "description": "Retrieves ZTP statuses for all devices.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved ZTP statuses",
                        "schema": {
                            "$ref": "#/definitions/GetApiZtpDeviceResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/device/{ip_address}/status": {
            "get": {
                "summary": "Get ZTP status of a device",
                "description": "Retrieves the ZTP status for a given device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ip_address",
                        "description": "IP address of the device",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the ZTP status",
                        "schema": {
                            "$ref": "#/definitions/GetApiZtpDeviceIpAddressStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/device/{ip_address}": {
            "delete": {
                "summary": "Delete ZTP status of a device",
                "description": "Deletes the ZTP status for a given device.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ip_address",
                        "description": "IP address of the device",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the ZTP status"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/service": {
            "post": {
                "summary": "Post ZTP service status",
                "description": "Posts the server status of a ZTP service.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiZtpServiceRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created the ZTP service status",
                        "schema": {
                            "$ref": "#/definitions/PostApiZtpServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Empty payload"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "List all the available ZTP services status",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the list of ZTP service statuses",
                        "schema": {
                            "$ref": "#/definitions/GetApiZtpServiceResponse"
                        }
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/service/{service_name}/status": {
            "get": {
                "summary": "Get the server status of the ZTP service",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "service_name",
                        "description": "Name of the ZTP service",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the ZTP service status",
                        "schema": {
                            "$ref": "#/definitions/GetApiZtpServiceServiceNameStatusResponse"
                        }
                    },
                    "404": {
                        "description": "ZTP Service not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/{ip_address}/logs": {
            "get": {
                "summary": "Get the ZTP logs of a device",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ip_address",
                        "description": "IP address of the device",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the ZTP logs"
                    }
                },
                "changelog": null
            }
        },
        "/api/ztp/create_agent": {
            "post": {
                "summary": "Create a system agent in disabled state",
                "description": "API signature is the same as system-agent POST. This is a separate API to\nconstrain device-ZTP user.\n\nChangelog:\n    - 6.0.0: [CHANGED] 'install_requirements' field has been deprecated.\n        Apstra resets the field to False if set.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiZtpCreateAgentRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "ztp"
                ],
                "responses": {
                    "202": {
                        "description": "Successfully created the system agent"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "'install_requirements' field has been deprecated. Apstra resets the field to False if set."
                        ]
                    }
                }
            }
        },
        "/api/metricdb/metric": {
            "get": {
                "summary": "Get all available metrics in AOS",
                "description": "Retrieves information on all available metrics present in the AOS cluster.\n\nChangelog:\n    - 5.1.0: [CHANGED] Renamed one of the metric applications\n                       'memory_troubleshooting' to 'memory_troubleshooter'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiMetricdbMetricResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Renamed one of the metric applications 'memory_troubleshooting' to 'memory_troubleshooter'."
                        ]
                    }
                }
            }
        },
        "/api/metricdb/metric/{metric_path}": {
            "get": {
                "summary": "Get all metrics for specific metric/namespace/application in AOS",
                "description": "Retrieves all metrics for the specified metric path, namespace, or application.\n\nChangelog:\n    - 5.1.0: [CHANGED] Renamed one of the metric applications\n                       'memory_troubleshooting' to 'memory_troubleshooter'.\n    - 6.0.0: [CHANGED] The endpoint has been added to API documentation.\n                       The actual behavior of the endpoint has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metric_path",
                        "description": "Metric path, namespace, or application",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiMetricdbMetricResponse"
                        }
                    },
                    "404": {
                        "description": "No metric found with the specified path"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Renamed one of the metric applications 'memory_troubleshooting' to 'memory_troubleshooter'."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "The endpoint has been added to API documentation. The actual behavior of the endpoint has not changed."
                        ]
                    }
                }
            }
        },
        "/api/metricdb/metric/{metric_path}/schema": {
            "get": {
                "summary": "Get schema for specific metric/namespace/application in AOS",
                "description": "Retrieves schema for the specified metric path, namespace, or application.\n\nChangelog:\n    - 5.1.0: [CHANGED] Renamed one of the metric applications\n                       'memory_troubleshooting' to 'memory_troubleshooter'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metric_path",
                        "description": "Metric path, namespace, or application",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiMetricdbMetricMetricPathSchemaResponse"
                        }
                    },
                    "404": {
                        "description": "No metric found with the specified path"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Renamed one of the metric applications 'memory_troubleshooting' to 'memory_troubleshooter'."
                        ]
                    }
                }
            }
        },
        "/api/metricdb/metric/schema": {
            "get": {
                "summary": "Get schema for all metrics in AOS",
                "description": "Retrieves schema for all available metrics.\n\nChangelog:\n    - 6.0.0: [CHANGED] Added a separate, non-parametrized version of\n                       /metricdb/metric/<metric_path>/schema endpoint\n                       to match openAPI format. The actual endpoint behavior\n                       has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiMetricdbMetricMetricPathSchemaResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added a separate, non-parametrized version of /metricdb/metric/<metric_path>/schema endpoint to match openAPI format. The actual endpoint behavior has not changed."
                        ]
                    }
                }
            }
        },
        "/api/metricdb/metric/{metric_path}/stats": {
            "get": {
                "summary": "Get status for specified metric/namespace/application in AOS",
                "description": "Retrieves status information for the specified metric path, namespace, or\napplication.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metric_path",
                        "description": "Metric path, namespace, or application",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiMetricdbMetricMetricPathStatsResponse"
                        }
                    },
                    "404": {
                        "description": "No metric found with the specified path"
                    }
                },
                "changelog": null
            }
        },
        "/api/metricdb/metric/stats": {
            "get": {
                "summary": "Get status for all metrics in AOS",
                "description": "Retrieves status information for all available metrics.\n\nChangelog:\n    - 6.0.0: [CHANGED] Added a separate, non-parametrized version of\n                       /metricdb/metric/<metric_path>/stats endpoint\n                       to match openAPI format. The actual endpoint behavior\n                       has not changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiMetricdbMetricMetricPathStatsResponse"
                        }
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "Added a separate, non-parametrized version of /metricdb/metric/<metric_path>/stats endpoint to match openAPI format. The actual endpoint behavior has not changed."
                        ]
                    }
                }
            }
        },
        "/api/metricdb/query": {
            "post": {
                "summary": "Get metric logs for specified metric",
                "description": "Retrieves metric logs for the specified metric based on provided metric name,\nnamespace, and application.\n\nChangelog:\n    - 5.1.0: [CHANGED] Renamed one of the metric applications\n                       'memory_troubleshooting' to 'memory_troubleshooter'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "description": "Page number for pagination, default is 1",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "description": "Number of items per page, default is 180000",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "description": "Offset for pagination, must be 0 as non-zero offsets are not yet supported",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiMetricdbQueryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "metricdb"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiMetricdbQueryResponse"
                        }
                    },
                    "400": {
                        "description": "Pagination not supported for large page size"
                    },
                    "404": {
                        "description": "No metric found with the specified locator"
                    },
                    "422": {
                        "description": "Invalid pagination parameters; invalid request data provided"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "Renamed one of the metric applications 'memory_troubleshooting' to 'memory_troubleshooter'."
                        ]
                    }
                }
            }
        },
        "/api/qba/query": {
            "post": {
                "summary": "Execute Query Based Analytics query",
                "description": "Processes the provided QBA query and returns the results. The query is executed\nagainst the data in AOS. If the query is successful, it returns the matching\nrecords. If no records match, an empty result set is returned. In case of query\nexecution failure, an error is returned.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiQbaQueryRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "qba"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiQbaQueryResponse"
                        }
                    },
                    "422": {
                        "description": "Query execution failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/experience/web/{path}": {
            "get": {
                "summary": "Bridge to reference design specific cache APIs",
                "description": "Each reference design defines cached Blueprint API extensions which are\nbridged by this method. Such cached APIs in most cases duplicate ordinary\nAPIs, but provide better performance because calculations are not done on\nevery request.\nSee your reference design documentation for specific APIs.\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] \"path\" parameter has been added to the endpoint\n                       documentation. Actual endpoint behaviour has not\n                       changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or cache for blueprint with given ID not found; or invalid URL;"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "\"path\" parameter has been added to the endpoint documentation. Actual endpoint behaviour has not changed."
                        ]
                    }
                }
            },
            "post": {
                "summary": "Bridge to reference design specific cache APIs",
                "description": "Each reference design defines cached Blueprint API extensions which are\nbridged by this method. Such cached APIs in most cases duplicate ordinary\nAPIs, but provide better performance because calculations are not done on\nevery request.\nSee your reference design documentation for specific APIs.\n\nResponse codes might differ and depend on the underlying API responses.\nHere we describe responses specific to this endpoint.\n\nChangelog:\n    - 6.0.0: [CHANGED] \"path\" parameter has been added to the endpoint\n                       documentation. Actual endpoint behaviour has not\n                       changed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "path",
                        "description": "URL path to the API endpoint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Blueprint with given ID not found; or cache for blueprint with given ID not found; or invalid URL;"
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "CHANGED": [
                            "\"path\" parameter has been added to the endpoint documentation. Actual endpoint behaviour has not changed."
                        ]
                    }
                }
            }
        },
        "/api/telemetry-query": {
            "get": {
                "summary": "Check if the telemetry plugin is ready",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "telemetry-query"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of services"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/query/mac": {
            "post": {
                "summary": "Get list of devices with MAC entries",
                "description": "Retrieves a list of devices with MAC entries based on the provided query filter.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "page",
                        "description": "Page number for pagination. Default is 1",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "description": "Number of items per page. Default is 100, maximum is 500",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQueryMacRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQueryMacResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/query/arp": {
            "post": {
                "summary": "Get list of devices with IP and/or MAC entries",
                "description": "Retrieves a list of devices with IP entries and/or MAC entries based on the\nprovided query filter.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "page",
                        "description": "Page number for pagination. Default is 1",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "description": "Number of items per page. Default is 100, maximum is 500",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQueryArpRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdQueryArpResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/search/metadata": {
            "get": {
                "summary": "Get the document types used for search",
                "description": "Returns document types used for search in the selected blueprint. Note that\ndocument types are not identical to the node types. Documents might accumulate\ndata from different nodes to simplify the search.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdSearchMetadataResponse"
                        }
                    },
                    "404": {
                        "description": "Search index not found"
                    },
                    "422": {
                        "description": "Document types are malformed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/search": {
            "post": {
                "summary": "Perform search against the blueprint",
                "description": "Returns the result of executing the search query against the selected blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdSearchRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdSearchResponse"
                        }
                    },
                    "404": {
                        "description": "Search index not found"
                    },
                    "422": {
                        "description": "Invalid request data provided. Namely, there is an issue with the search query"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users": {
            "post": {
                "summary": "Create a user",
                "description": "Creates a new user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaUsersRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaUsersResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permission"
                    },
                    "409": {
                        "description": "Username already exists"
                    },
                    "412": {
                        "description": "Username is reserved"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get user list",
                "description": "Returns a list of all registered users.\nNote that users from the RBAC server are not included in this list.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaUsersResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permission"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/favorites": {
            "post": {
                "summary": "Create a favorite page",
                "description": "Creates a new favorite page at user level.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaUsersTargetUserIdFavoritesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "The page is added to favorites"
                    },
                    "401": {
                        "description": "Must have right permission"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "409": {
                        "description": "Page is already marked as favorite; or favorite list is full"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/favorites/{favorite_id}": {
            "delete": {
                "summary": "Delete a favorite page",
                "description": "Deletes a favorite page from user's favorite pages.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "favorite_id",
                        "description": "Favorite page ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "204": {
                        "description": "The page is removed from favorites"
                    },
                    "401": {
                        "description": "Must have right permission"
                    },
                    "404": {
                        "description": "User not found; or favorite page not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update the favorite page",
                "description": "Updates the label for the favorite page.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "favorite_id",
                        "description": "Favorite page ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAaaUsersTargetUserIdFavoritesFavoriteIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "204": {
                        "description": "The label is updated"
                    },
                    "401": {
                        "description": "Must have right permission"
                    },
                    "404": {
                        "description": "User not found; or favorite page not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/preferences": {
            "post": {
                "summary": "Set UI preference",
                "description": "Creates or updates a UI preference for user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaUsersTargetUserIdPreferencesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaUsersTargetUserIdPreferencesResponse"
                        }
                    },
                    "401": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/preferences/{preference_id}": {
            "delete": {
                "summary": "Delete UI preference",
                "description": "Removes the UI preference.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "preference_id",
                        "description": "Preference ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "204": {
                        "description": "Preference deleted"
                    },
                    "401": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found; or preference not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}": {
            "get": {
                "summary": "Get user",
                "description": "Returns information about user. Includes personal data, favorites,\npreferences, roles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaUsersTargetUserIdResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Set user",
                "description": "Updates user profile completely replacing old content.\nAll parameters are required.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaUsersTargetUserIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update user",
                "description": "Partially updates user profile. Only the parameters to be updated are\nrequired.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAaaUsersTargetUserIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete user",
                "description": "Deletes the user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/change-password": {
            "put": {
                "summary": "Update user password",
                "description": "Updates user password. Password must conform to the password requirements.\nCall \"GET /aaa/password_complexity\" to view current password requirements.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaUsersTargetUserIdChangePasswordRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Current password is incorrect"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/permissions": {
            "get": {
                "summary": "Get user permissions",
                "description": "Returns all routes and methods permitted for the user in all possible reference\ndesigns.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "blueprint_id",
                        "description": "Blueprint ID - if specified, returns only permissions applicable for the reference design given blueprint belongs to",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaUsersTargetUserIdPermissionsResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found; or blueprint not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/permissions": {
            "get": {
                "summary": "Get list of AOS permissions",
                "description": "Returns a list of all supported AOS permissions that can be used in roles.\nRoles are used as a part of Role-Based Access Control (RBAC).",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaPermissionsResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/roles": {
            "get": {
                "summary": "Get roles",
                "description": "Returns a list of roles. Role is a set of permissions that can be associated with\nmultiple users. Roles are used as a part of Role-Based Access Control (RBAC).",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaRolesResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Create role",
                "description": "Creates a role. Role is a set of permissions that can be associated with\nmultiple users. Roles are used as a part of Role-Based Access Control (RBAC).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRolesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRolesResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "409": {
                        "description": "Role label already exists"
                    },
                    "422": {
                        "description": "Unexpected permissions given"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/roles/{role_id}": {
            "get": {
                "summary": "Get role",
                "description": "Returns a role. Role is a set of permissions that can be associated with\nmultiple users. Roles are used as a part of Role-Based Access Control (RBAC).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "description": "Role ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaRolesRoleIdResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update role",
                "description": "Updates the role. Role is a set of permissions that can be associated with\nmultiple users. Roles are used as a part of Role-Based Access Control (RBAC).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "description": "Role ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaRolesRoleIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Can not change predefined roles"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "422": {
                        "description": "Unexpected permissions given"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete role",
                "description": "Deletes the role. Role is a set of permissions that can be associated with\nmultiple users. Roles are used as a part of Role-Based Access Control (RBAC).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "role_id",
                        "description": "Role ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted"
                    },
                    "400": {
                        "description": "Bad request: Can not delete predefined roles; or role is assigned to user; or role is used in role mapping"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/roles": {
            "get": {
                "summary": "Get user roles",
                "description": "Returns a list of user roles along with user permissions a superset of\npermissions given by user roles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaUsersTargetUserIdRolesResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update user roles",
                "description": "Updates user roles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaUsersTargetUserIdRolesRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "User \"admin\" must have \"administrator\" role"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/login-saml": {
            "post": {
                "summary": "Process SAML response",
                "description": "Accepts and verifies SAMLResponse. Forms a special URL with AuthToken and\nUserId for UI use.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "303": {
                        "description": "On success location header contains AuthToken used by UI. On failure location header contains an error message."
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/aaa/saml-providers": {
            "post": {
                "summary": "Create SSO provider",
                "description": "Adds an SSO provider, which is used to authenticate users.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Metadata can now be loaded using remote url.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaSamlProvidersRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "SSO provider is created",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaSamlProvidersResponse"
                        }
                    },
                    "400": {
                        "description": "Data validation error. Cannot download metadata"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "409": {
                        "description": "Provider with this name already exists"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Metadata can now be loaded using remote url."
                        ]
                    }
                }
            },
            "get": {
                "summary": "List SSO providers",
                "description": "Lists all configured SSO (Single sign-on) providers.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Returns used configuration method in 'idp_settings'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaSamlProvidersResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Returns used configuration method in 'idp_settings'."
                        ]
                    }
                }
            }
        },
        "/api/aaa/saml-providers/{provider_id}": {
            "patch": {
                "summary": "Update SSO provider",
                "description": "Updates settings of an SSO (Single sign-on) provider by ID.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Metadata can now be loaded using remote url.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "description": "SSO provider's ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAaaSamlProvidersProviderIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAaaSamlProvidersProviderIdResponse"
                        }
                    },
                    "400": {
                        "description": "Data validation error. Cannot download metadata"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "SSO provider not found"
                    },
                    "409": {
                        "description": "Provider with this name already exists"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Metadata can now be loaded using remote url."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Remove SSO provider",
                "description": "Removes previously configured SSO (Single sign-on) provider.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "description": "SSO provider ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "SSO provider is successfully removed"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "SSO provider not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "get": {
                "summary": "Get SSO provider",
                "description": "Returns details about configured SSO (Single sign-on) provider.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.\n    - 6.0.0: [CHANGED] Returns 'metadata_url' in 'idp_settings'\n      if metadata was loaded using remote url.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "description": "SSO provider ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaSamlProvidersProviderIdResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "RBAC server not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    },
                    "6.0.0": {
                        "CHANGED": [
                            "Returns 'metadata_url' in 'idp_settings' if metadata was loaded using remote url."
                        ]
                    }
                }
            }
        },
        "/api/aaa/saml-providers/batch-metadata-download": {
            "post": {
                "summary": "Download metadata for SAML providers",
                "description": "Downloads metadata for given SAML providers.\n\nChangelog:\n    - 6.0.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaSamlProvidersBatchMetadataDownloadRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "202": {
                        "description": "All metadata successfully downloaded"
                    },
                    "207": {
                        "description": "Some metadata could not be downloaded"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "422": {
                        "description": "None of the metadata could be downloaded"
                    }
                },
                "changelog": {
                    "6.0.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/aaa/saml-settings": {
            "get": {
                "summary": "SSO settings",
                "description": "Returns if SAML configured or not.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/aaa/saml-sso-url": {
            "get": {
                "summary": "Get SSO url",
                "description": "Generates SAML request and returns a redirect to an appropriate URL.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "303": {
                        "description": "On success redirect to Identity Provider login page. On failure redirect to the UI page with an error message."
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "summary": "Authenticate given user",
                "description": "After posting a user's valid credentials to this endpoint, a token is returned\nthat can be used for future API requests by putting it in the header 'AuthToken'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiUserLoginRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully authenticated user",
                        "schema": {
                            "$ref": "#/definitions/PostApiUserLoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unmapped group-role for remote user; invalid credentials"
                    },
                    "408": {
                        "description": "Connection timeout"
                    }
                },
                "changelog": null,
                "deprecated": true
            }
        },
        "/api/aaa/login": {
            "post": {
                "summary": "Authenticate given user",
                "description": "After posting a user's valid credentials to this endpoint, a token is returned\nthat can be used for future API requests by putting it in the header 'AuthToken'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiUserLoginRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully authenticated user",
                        "schema": {
                            "$ref": "#/definitions/PostApiUserLoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unmapped group-role for remote user; invalid credentials"
                    },
                    "408": {
                        "description": "Connection timeout"
                    }
                },
                "changelog": null
            }
        },
        "/api/user/logout": {
            "post": {
                "summary": "Log out",
                "description": "This method logs out the authenticated user by invalidating their session.\nThe AuthToken used becomes invalid and cannot be reused.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null,
                "deprecated": true
            }
        },
        "/api/aaa/logout": {
            "post": {
                "summary": "Log out",
                "description": "This method logs out the authenticated user by invalidating their session.\nThe AuthToken used becomes invalid and cannot be reused.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/providers": {
            "post": {
                "summary": "Create RBAC server",
                "description": "Adds a Role-Based Access Control (RBAC) server for specifying access permissions.\nRBAC servers are remote network servers that authenticate and authorize network\naccess based on roles assigned to individual users within an enterprise.\n\nLDAP, Active Directory, TACACS+, and RADIUS protocols are supported.\n\nThis API does not validate the connection.\nPlease try /api/aaa/check-login and/or /api/aaa/check-query\nto make sure the provider settings are correct.\n\nChangelog:\n    - 5.1.0: [CHANGED] provider_name must be unique.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaProvidersRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "RBAC server is created"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "provider_name must be unique."
                        ]
                    }
                }
            },
            "get": {
                "summary": "List RBAC servers",
                "description": "Lists all configured RBAC (Role-Based Access Control) servers.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaProvidersResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/providers/{provider_id}": {
            "get": {
                "summary": "Get RBAC server",
                "description": "Returns details about an external RBAC (Role-Based Access Control)\nauthentication server using its ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "description": "RBAC server ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaProvidersProviderIdResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "RBAC server not found"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update RBAC server",
                "description": "Updates settings of an RBAC (Role-Based Access Control) server using the server\nID.\n\nThis will not validate the connection the server.\nPlease try /api/aaa/check-login and/or /api/aaa/check-query\nto make sure the settings are correct.\n\nChangelog:\n    - 5.1.0: [CHANGED] provider_name must be unique.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "description": "RBAC server's ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaProvidersProviderIdRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "RBAC server not found"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "CHANGED": [
                            "provider_name must be unique."
                        ]
                    }
                }
            },
            "delete": {
                "summary": "Remove RBAC server",
                "description": "Removes previously configured RBAC (Role-Based Access Control) server.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider_id",
                        "description": "RBAC server ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "RBAC server is successfully removed"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "RBAC server not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/group-role-mappings": {
            "put": {
                "summary": "Set role mapping",
                "description": "Configures match between roles available on remote RBAC server\nand local roles.\n\nAfter mapping is updated all users with credential_type=\"remote\" have to log in\nagain.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaGroupRoleMappingsRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "412": {
                        "description": "No such local role"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get role mapping",
                "description": "Returns match configured between roles available on remote RBAC server\nand local roles.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaGroupRoleMappingsRequest"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/check-query": {
            "post": {
                "summary": "Verify RBAC server settings by querying users and groups",
                "description": "Verifies RBAC server settings by querying users and groups\nusing the provided parameters.\n\nThis API tests the RBAC server settings using the same parameters\nrequired for RBAC server creation without saving the settings.\n\nNote for LDAP: This will return a list of all groups that can\nbe found with the provided RBAC server settings.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaProvidersRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaCheckQueryResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/check-login": {
            "post": {
                "summary": "Attempt to log in to the RBAC server",
                "description": "Tests RBAC server settings by attempting a login using the parameters\nnecessary for server configuration without permanently saving these settings.\n\nNote:\n- This API does not consider group-role-mapping.\n- Only the username and password are checked for provider settings.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaCheckLoginRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/currently-logged-in-users": {
            "get": {
                "summary": "List active users",
                "description": "Returns a list of currently logged-in users,\nindicating those who have a valid session.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaCurrentlyLoggedInUsersResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/users/{target_user_id}/session": {
            "delete": {
                "summary": "Terminate user session",
                "description": "Ends the session for the specified user, causing an immediate logoff.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "target_user_id",
                        "description": "User ID",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "The session was successfully terminated"
                    },
                    "400": {
                        "description": "Cannot terminate own session"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/ratelimit": {
            "get": {
                "summary": "Get rate limiter configuration",
                "description": "Returns the current parameters configured for the rate limiter.\nThe rate limiter is applied to requests that verify passwords\nto mitigate the speed of brute force attacks.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaRatelimitResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update rate limiter configuration",
                "description": "Configures the parameters used by the rate limiter.\nThe rate limiter is employed on requests that verify passwords\nto slow down brute force attacks.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAaaRatelimitRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/ratelimit/denylist": {
            "get": {
                "summary": "Get list of blocked subnets",
                "description": "Returns the list of rate limited IP-subnets.\nRatelimiter is applied on operations that imply password verification such as\nlogin and password change.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "description": "List filter expression.",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "orderby",
                        "description": "Control the field by which the collection is sorted e.g. \"(subnet:[ASC|DESC],comment:[ASC|DESC])\"",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "description": "Specify the number of records to return",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Specify the page of results to return",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "description": "Specify an arbitrary offset at which to start retrieving elements",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaRatelimitDenylistResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/ratelimit/denylist-batch-delete": {
            "post": {
                "summary": "Release rate limited subnets",
                "description": "Releases some subnets from being rate limited.\nRatelimiter is applied on operations that imply password verification such as\nlogin and password change.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRatelimitDenylistBatchDeleteRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "202": {
                        "description": "All subnets removed"
                    },
                    "207": {
                        "description": "Some subnets removed"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "422": {
                        "description": "None of the subnets could be removed"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/ratelimit/allowlist": {
            "get": {
                "summary": "Get list of permitted subnets",
                "description": "Returns a list of IP-subnets that should never be rate limited.\nRatelimiter is applied on operations that imply password verification such as\nlogin and password change.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "description": "List filter expression.",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "orderby",
                        "description": "Control the field by which the collection is sorted e.g. \"(subnet:[ASC|DESC],comment:[ASC|DESC])\"",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "per_page",
                        "description": "Specify the number of records to return",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "page",
                        "description": "Specify the page of results to return",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "offset",
                        "description": "Specify an arbitrary offset at which to start retrieving elements",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaRatelimitAllowlistResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            },
            "post": {
                "summary": "Add subnet to allowlist",
                "description": "Adds a subnet to the list of IP-subnets that should never be rate limited.\nRatelimiter is applied on operations that imply password verification such as\nlogin and password change.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRatelimitAllowlistRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRatelimitAllowlistResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            },
            "patch": {
                "summary": "Update subnet in allowlist",
                "description": "Updates description of a subnet in the list of IP-subnets\nthat should never be rate limited.\nRatelimiter is applied on operations that imply password verification such as\nlogin and password change.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRatelimitAllowlistRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PatchApiAaaRatelimitAllowlistResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/ratelimit/allowlist-batch-delete": {
            "post": {
                "summary": "Delete subnets from allowlist",
                "description": "Deletes some records from the list of IP-subnets\nthat should never be rate limited.\nRatelimiter is applied on operations that imply password verification such as\nlogin and password change.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiAaaRatelimitAllowlistBatchDeleteRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "202": {
                        "description": "All subnets removed"
                    },
                    "207": {
                        "description": "Some subnets removed"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    },
                    "422": {
                        "description": "None of the subnets could be removed"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/password_complexity": {
            "get": {
                "summary": "Get password requirements",
                "description": "Returns password requirements including the validators configured\nfor assessing password requirements, password history size, and password\nexpiration period.\n\nNote:\n- The validators are applied on password change and user creation.\n- Expired passwords are controlled on every login.\n- Password history size and password expiration period are only returned\n  if password_complexity:read permission is present.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaPasswordComplexityResponse"
                        }
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Update password requirements",
                "description": "Updates password requirements including the validators used\nfor assessing password requirements, password history size, and password\nexpiration period.\n\nNote:\n- The validators are applied on password change and user creation.\n- Expired passwords are controlled on every login.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PutApiAaaPasswordComplexityRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/acl": {
            "get": {
                "summary": "Get access control rules",
                "description": "Returns a list of access control rules,\nautomatically sorted by specificity of subnets.\nRules are evaluated in the order they are\nlisted when checking a request's IP address.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaAclResponse"
                        }
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            },
            "put": {
                "summary": "Set access control rules",
                "description": "Replaces existing access control rules with the provided ones.\nThe rules are automatically sorted from more specific\nsubnets to less specific subnets.\nThis same order is utilized when checking a request's IP address.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaAclResponse"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": null
            }
        },
        "/api/show_tech_download/{job_id}/{file_prefix}.tar.gz": {
            "post": {
                "summary": "Authorize download of show tech file",
                "description": "Checks user permission and sets up response for nginx to serve the show tech\nfile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the show tech job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "file_prefix",
                        "description": "Prefix of the show tech file",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "show_tech_download"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "User does not have required permission"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Authorize download of show tech file",
                "description": "Checks user permission and sets up response for nginx to serve the show tech\nfile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "job_id",
                        "description": "ID of the show tech job",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "file_prefix",
                        "description": "Prefix of the show tech file",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "show_tech_download"
                ],
                "responses": {
                    "204": {
                        "description": "Everything works as expected"
                    },
                    "403": {
                        "description": "User does not have required permission"
                    }
                },
                "changelog": null
            }
        },
        "/api/aaa/motd": {
            "get": {
                "summary": "Get the Message of the Day",
                "description": "Get the text of the configured Message of the Day.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaMotdResponse"
                        }
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            },
            "put": {
                "summary": "Create the Message of the Day",
                "description": "Specify the text of the desired Message of the Day.\n\nChangelog:\n    - 5.1.0: [NEW] An API endpoint was introduced.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetApiAaaMotdResponse"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "aaa"
                ],
                "responses": {
                    "204": {
                        "description": "Done"
                    },
                    "400": {
                        "description": "Invalid Message of the Day"
                    },
                    "403": {
                        "description": "Must have right permissions"
                    }
                },
                "changelog": {
                    "5.1.0": {
                        "NEW": [
                            "An API endpoint was introduced."
                        ]
                    }
                }
            }
        },
        "/api/blueprints/{blueprint_id}/diff": {
            "get": {
                "summary": "Get diff between staged and deployed blueprints",
                "description": "Retrieves diff between staged and deployed blueprints.\nThree different modes are supported with varying amount of details:\n  * 'digest' - only counts how many nodes or links changed\n  * 'lite' - includes digest and logical diff, but only ids and\n             labels of changed elements\n  * 'full' - digest and full logical diff",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "mode",
                        "description": "(optional) 'digest', 'lite' (default) or 'full'",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdDiffResponse"
                        }
                    },
                    "404": {
                        "description": "Diff storage not initialized; or diff directories for blueprint with given ID not found"
                    },
                    "422": {
                        "description": "Invalid request data provided. Namely, provided `mode` is not supported"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/nodes/{node_id}/config-rendering": {
            "get": {
                "summary": "Get config rendered for a specific node",
                "description": "Returns the config of a device from a blueprint. Device is identified by a\ngraph node from the specified blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdNodesNodeIdConfigRenderingResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or node with given ID not found in the bluprint"
                    },
                    "422": {
                        "description": "Node does not have system ID; or config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/systems/{system_id}/config-rendering": {
            "get": {
                "summary": "Get config rendered for a specific device",
                "description": "Returns the config of a device from a blueprint. Device is identified by\nsystem ID (device serial number).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "system_id",
                        "description": "device identifier (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdNodesNodeIdConfigRenderingResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or system with given `system_id` not found in the bluprint"
                    },
                    "422": {
                        "description": "Config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/nodes/{node_id}/config-context": {
            "get": {
                "summary": "Get device context rendered for a specific node",
                "description": "Returns the context of a device from a blueprint. Device is identified by a\ngraph node from the specified blueprint.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdNodesNodeIdConfigContextResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or node with given ID not found in the bluprint"
                    },
                    "422": {
                        "description": "Node does not have system ID; or config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/systems/{system_id}/config-context": {
            "get": {
                "summary": "Get device context rendered for a specific device",
                "description": "Returns the context of a device from a blueprint. Device is identified by\nsystem ID (device serial number).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "system_id",
                        "description": "device identifier (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdNodesNodeIdConfigContextResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or system with given `system_id` not found in the bluprint"
                    },
                    "422": {
                        "description": "Config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/preview-config-summary": {
            "get": {
                "summary": "Preview or summarize device configs",
                "description": "Used only during AOS upgrade to preview or summarize the device configs.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdPreviewConfigSummaryResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found"
                    },
                    "409": {
                        "description": "Deployment status not found; or update for systems failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/nodes/{node_id}/config-incremental": {
            "post": {
                "summary": "Get pending incremental config using node ID",
                "description": "Returns incremental config and context of a device specified by\n`blueprint_id` and `node_id`.\n\nUser can optionally specify context given `context` JSON key.\nIf context is not specified, it is derived from deployed blueprint ID to\ngenerate diff from old -> new.\n\nIf the device does not support incremental config, this API will display\nits full rendered config anyway.\n\nAccept both POST and GET JSON Requests (both seem to be valid per HTTP\nRFC, GET Request payload is 'undefined', it's safe to allow it anyway).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or node with given ID not found in the blueprint"
                    },
                    "422": {
                        "description": "Node does not have system ID; or invalid request data provided; or config generation failed"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get pending incremental config using node ID",
                "description": "Returns incremental config and context of a device specified by\n`blueprint_id` and `node_id`.\n\nUser can optionally specify context given `context` JSON key.\nIf context is not specified, it is derived from deployed blueprint ID to\ngenerate diff from old -> new.\n\nIf the device does not support incremental config, this API will display\nits full rendered config anyway.\n\nAccept both POST and GET JSON Requests (both seem to be valid per HTTP\nRFC, GET Request payload is 'undefined', it's safe to allow it anyway).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_id",
                        "description": "ID of the node",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or node with given ID not found in the blueprint"
                    },
                    "422": {
                        "description": "Node does not have system ID; or invalid request data provided; or config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/systems/{system_id}/config-incremental": {
            "post": {
                "summary": "Get pending incremental config using system ID",
                "description": "Returns the device context of device specified by `blueprint_id` and\n`system_id`.\n\nUser can optionally specify context given 'context' JSON key.\nIf context is not specified, it is derived from deployed blueprint ID to\ngenerate diff from old -> new.\n\nIf the device does not support incremental config, this API will display\nits full rendered config anyway.\n\nAccept both POST and GET JSON Requests (both seem to be valid per HTTP\nRFC, GET Request payload is 'undefined', it's safe to allow it anyway).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or system with given `system_id` not found in the bluprint"
                    },
                    "422": {
                        "description": "Config generation failed"
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get pending incremental config using system ID",
                "description": "Returns the device context of device specified by `blueprint_id` and\n`system_id`.\n\nUser can optionally specify context given 'context' JSON key.\nIf context is not specified, it is derived from deployed blueprint ID to\ngenerate diff from old -> new.\n\nIf the device does not support incremental config, this API will display\nits full rendered config anyway.\n\nAccept both POST and GET JSON Requests (both seem to be valid per HTTP\nRFC, GET Request payload is 'undefined', it's safe to allow it anyway).",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "system_id",
                        "description": "ID of the system (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or system with given `system_id` not found in the bluprint"
                    },
                    "422": {
                        "description": "Config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/config-templates/{config_template_id}/preview": {
            "post": {
                "summary": "Get rendered device config using configuration template",
                "description": "This API permits validating configuration templates prior to committing\nthem to the graph by exercising them against specific systems within\nthe blueprint. This helps to avoid committing templates to the blueprint\nwhich may result in blueprint rendering errors later.\n\nThis endpoint is only valid for the 'freeform' reference design.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "config_template_id",
                        "description": "Node ID of config template to preview",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdConfigTemplatesConfigTemplateIdPreviewRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/PostApiBlueprintsBlueprintIdConfigTemplatesConfigTemplateIdPreviewResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration generator for blueprint with given ID not found; or system with given `system_id` not found in the bluprint; or configuration template with given ID not found"
                    },
                    "422": {
                        "description": "Config generation failed"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/commit-check": {
            "post": {
                "summary": "Commit check operation against device",
                "description": "Can optionally accept a configuration_string, otherwise the staging graph\nis used to render it.\n\nThe device must be deployed as part of a blueprint in order to ascertain\nwhich blueprint to use to render its configuration.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "System ID of the device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsSystemIdCommitCheckRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Commit check failed"
                    },
                    "404": {
                        "description": "System not found; device deployment status not found; commit check status or config not found; device management status not found"
                    },
                    "409": {
                        "description": "Another commit check is already active; device is not in a valid deployment state for commit check; device has incorrect deploy mode; device is locked for upgrade"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/systems/{system_id}/commit-check": {
            "post": {
                "summary": "Perform commit check operation against a single device",
                "description": "Performs commit check against a single device of `blueprint_id`, specified\nby `system_id`. Can optionally accept a `config_string`,\notherwise the staging graph is used to render it. This api endpoint\ncan be used even if system with given `system_id` hasn't yet been deployed\nas part of `blueprint_id`, as the former contains the requested\n`blueprint_id` explicitly.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "system_id",
                        "description": "System ID of the device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/PostApiSystemsSystemIdCommitCheckRequest"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Commit check failed"
                    },
                    "404": {
                        "description": "System with given `system_id` not found"
                    },
                    "409": {
                        "description": "Another commit check is already active; or operation is blocked due to device's deployment state; or operation is blocked due to device's deploy mode; or device is locked for upgrade"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/commit-check": {
            "post": {
                "summary": "Perform commit check for all renderable devices in a blueprint",
                "description": "Initiates a commit check operation against all devices in the\nblueprint for which configuration can be rendered.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "202": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Systems expected for commit check but not found"
                    },
                    "409": {
                        "description": "Pending operations in queue"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/systems/{system_id}/commit-check-result": {
            "get": {
                "summary": "Get commit check result for a specific device",
                "description": "Returns commit check result against a device specified\nby `system_id` that refers to `blueprint_id`. If the result\nfor staging_graph type is not referring to the blueprint\nof the request, an error will be returned. This api endpoint\ndoes the same thing as the /systems/{system_id}/commit-check-result,\nwith the difference that here the result's blueprint_id is compared\nwith the requested `blueprint_id` and an error will be returned if\nthey are found to be different.\n\nThe result source is an optional GET argument that defaults to\n\"staging_graph\". The other possible value can be \"user_supplied\", in\nwhich case the commit check result for a user_supplied configuration\nstring is retrieved. Note, internally AOS maintains the last\nresult for each source independently, and one does not affect the other.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "System ID of the device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdSystemsSystemIdCommitCheckResultResponse"
                        }
                    },
                    "400": {
                        "description": "Commit check failed"
                    },
                    "404": {
                        "description": "System with given `system_id` not found"
                    },
                    "409": {
                        "description": "Operation is blocked; or result for another blueprint found"
                    }
                },
                "changelog": null
            }
        },
        "/api/systems/{system_id}/commit-check-result": {
            "get": {
                "summary": "Get commit check result for device",
                "description": "The result source is an optional GET argument that defaults to\n\"staging_graph\".\n\nThe other possible value can be \"user_supplied\", in\nwhich case the commit check result for a user_supplied configuration\nstring is retrieved.\n\nNote, internally AOS maintains the last\nresult for each source independently, and one does not affect the other.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "system_id",
                        "description": "System ID of the device (usually serial number)",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "source",
                        "description": "Source of the commit check result (\"staging_graph\" or \"user_supplied\")",
                        "in": "query",
                        "type": "string",
                        "required": false
                    }
                ],
                "tags": [
                    "systems"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdSystemsSystemIdCommitCheckResultResponse"
                        }
                    },
                    "404": {
                        "description": "System not found; commit check config or status not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/commit-check-result": {
            "get": {
                "summary": "Get commit check result for the blueprint",
                "description": "Returns the result of a commit check operation against all devices in the\nblueprint for which configuration can be rendered. It is assumed that\na commit-check operation has been previously initiated via the\n/blueprints/<blueprint_id>/commit-check api endpoint.\n\nThe results for each individual device will not include the rendered\nconfig that was used and the diff reported by the device, in order for\nthe payload size of this endpoint to be more manageable. If indeed it's\ndesired that the config_string tested and the diff reported to be\nincluded, the optional GET argument mode should be explicitly set to\n\"full\".",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdCommitCheckResultResponse"
                        }
                    },
                    "400": {
                        "description": "Commit check failed"
                    },
                    "404": {
                        "description": "System with given `system_id` not found"
                    },
                    "409": {
                        "description": "Result refers to another blueprint; or operation is blocked due to device's deploy mode"
                    }
                },
                "changelog": null
            }
        },
        "/api/blueprints/{blueprint_id}/diff-status": {
            "get": {
                "summary": "Get diff computation status",
                "description": "Returns computation status of the diff between staged and deployed/operation\nblueprints.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blueprint_id",
                        "description": "ID of the blueprint",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "blueprints"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiBlueprintsBlueprintIdDiffStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Diff status for blueprint with given ID not found"
                    }
                },
                "changelog": null
            }
        },
        "/api/packages/upload": {
            "post": {
                "summary": "Upload new package to AOS Package Manager",
                "description": "Uploads a new package to the AOS Package Manager via RFC 1867 - Form-based File\nUpload via HTML.\n\nThe API currently only supports a single file per invocation.\n\nThe request must contain a single form field with name `package`. The field's\nfilename attribute must be set to the name of the package without any leading\ndirectories.\n\nThe package name must follow the Python package naming convention, and must\nhave one of the following extensions:\n\n.egg\n\n.whl\n\n.gz\n\n.tgz",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "packages"
                ],
                "responses": {
                    "201": {
                        "description": "Everything works as expected"
                    },
                    "400": {
                        "description": "Empty payload"
                    },
                    "409": {
                        "description": "Failed to upload package to devpi"
                    },
                    "422": {
                        "description": "Invalid package metadata; invalid request data provided"
                    }
                },
                "changelog": null
            }
        },
        "/api/packages": {
            "post": {
                "summary": "WARNING: This API is obsolete and will always return 410 - Gone. Please use POST /api/packages/upload",
                "description": null,
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "packages"
                ],
                "responses": {
                    "200": {
                        "description": null
                    }
                },
                "changelog": null
            },
            "get": {
                "summary": "Get list of all packages",
                "description": "Retrieves a list of all packages in the devpi index.",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "tags": [
                    "packages"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiPackagesResponse"
                        }
                    },
                    "409": {
                        "description": "Cannot get devpi packages"
                    }
                },
                "changelog": null
            }
        },
        "/api/packages/{packagename}": {
            "get": {
                "summary": "Get list of all versions for specified package",
                "description": "Retrieves a list of all versions of the package identified by the given package\nname.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "packagename",
                        "description": "Python package name",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "packages"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected",
                        "schema": {
                            "$ref": "#/definitions/GetApiPackagesPackagenameResponse"
                        }
                    },
                    "409": {
                        "description": "Cannot get python package list"
                    }
                },
                "changelog": null
            },
            "delete": {
                "summary": "Delete specified package or version",
                "description": "Removes the package(s) specified by package name.\n\nUse `packagename==someversion` to delete a specific version or just\n`packagename` to delete all versions.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "packagename",
                        "description": "Python package name, optionally with version",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "tags": [
                    "packages"
                ],
                "responses": {
                    "200": {
                        "description": "Everything works as expected"
                    },
                    "404": {
                        "description": "Package not found"
                    }
                },
                "changelog": null
            }
        }
    },
    "definitions": {
        "AsnAllocationPolicyLoad": {
            "title": "AsnAllocationPolicy",
            "type": "object",
            "properties": {
                "spine_asn_scheme": {
                    "description": "Use same ASN number or distinct ones on spines in a pod",
                    "enum": [
                        "distinct",
                        "single"
                    ],
                    "type": "string",
                    "default": "distinct"
                }
            },
            "default": {
                "spine_asn_scheme": null
            }
        },
        "DHCPServiceIntentDump": {
            "title": "DHCPServiceIntent",
            "type": "object",
            "properties": {
                "active": {
                    "description": "True if enabled, false otherwise",
                    "type": "boolean"
                }
            },
            "required": [
                "active"
            ]
        },
        "DHCPServiceIntentLoad": {
            "title": "DHCPServiceIntent",
            "type": "object",
            "properties": {
                "active": {
                    "description": "True if enabled, false otherwise",
                    "type": "boolean"
                }
            },
            "required": [
                "active"
            ]
        },
        "DeleteApiBlueprintsBlueprintIdIbaDashboardsDashboardIdResponse": {
            "type": "object",
            "properties": {
                "probes": {
                    "description": "List of deleted probes.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Probe ID.",
                                "type": "string"
                            },
                            "label": {
                                "description": "Probe label.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label"
                        ]
                    },
                    "default": null
                },
                "id": {
                    "description": "Dashboard ID.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "DeleteApiBlueprintsBlueprintIdProbesProbeIdResponse": {
            "type": "object",
            "properties": {
                "dashboards": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Dashboard ID.",
                                "type": "string"
                            },
                            "label": {
                                "description": "Dashboard label.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label"
                        ]
                    },
                    "default": null
                }
            }
        },
        "DeleteApiTelemetryServiceRegistryServiceNameResponse": {
            "type": "object",
            "properties": {
                "systems": {
                    "type": "array",
                    "items": {
                        "description": "System ID",
                        "type": "string"
                    },
                    "default": null
                },
                "probes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "blueprint_id": {
                                "description": "Blueprint ID",
                                "type": "string"
                            },
                            "probe_id": {
                                "description": "Probe ID",
                                "type": "string"
                            },
                            "label": {
                                "description": "Probe label",
                                "type": "string"
                            }
                        },
                        "required": [
                            "blueprint_id",
                            "label",
                            "probe_id"
                        ]
                    },
                    "default": null
                }
            }
        },
        "DeviceDeploymentConfigStatusDataDump": {
            "title": "DeviceDeploymentConfigStatusData",
            "type": "object",
            "properties": {
                "config": {
                    "description": "Device configuration string",
                    "type": "string"
                }
            },
            "required": [
                "config"
            ]
        },
        "GetApiAaaAclResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of rules defining ACL behavior. The rules are automatically sorted by subnet from the most specific (/32) to the least specific (/0). 0.0.0.0/0 must be provided to define the default behavior - allow or deny requests",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "subnet": {
                                "type": "string"
                            },
                            "action": {
                                "enum": [
                                    "allow",
                                    "deny"
                                ],
                                "type": "string"
                            },
                            "comment": {
                                "type": "string",
                                "default": ""
                            }
                        },
                        "required": [
                            "action",
                            "subnet"
                        ]
                    },
                    "minItems": 1
                },
                "enabled": {
                    "description": "When enabled=True AOS checks each API query against provided ACL items. When enabled=False AOS only keeps ACL items and does not do any checks",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled",
                "items"
            ]
        },
        "GetApiAaaCurrentlyLoggedInUsersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "username": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "roles": {
                                "description": "A list of role names defining a set of user permissions.",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "default": null
                            },
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "credential_type": {
                                "description": "Whether the user logged in via remote RBAC server, via SAML SSO or via local authentication.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "credential_type",
                            "email",
                            "first_name",
                            "id",
                            "last_name",
                            "username"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaMotdResponse": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "minLength": 1,
                    "default": ""
                }
            },
            "additionalProperties": false
        },
        "GetApiAaaPasswordComplexityResponse": {
            "type": "object",
            "properties": {
                "validators": {
                    "type": "object",
                    "properties": {
                        "regex_list": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "regex": {
                                        "description": "Regular expression that will be used to validate password",
                                        "type": "string"
                                    },
                                    "error_message": {
                                        "description": "Error message that will be shown if password doesn't suit regex",
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "enabled",
                                    "error_message",
                                    "regex"
                                ]
                            }
                        },
                        "no_username": {
                            "description": "Check that password string is not the same as username.",
                            "type": "object",
                            "properties": {
                                "error_message": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "enabled",
                                "error_message"
                            ]
                        },
                        "no_repeat": {
                            "description": "Check that no character repetition occurs.",
                            "type": "object",
                            "properties": {
                                "allowed_length": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "error_message": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "allowed_length",
                                "enabled",
                                "error_message"
                            ]
                        },
                        "no_alphanumeric": {
                            "description": "Check that no password does not contain alphanumeric sequences. Such as abcd, 1234, opqr",
                            "type": "object",
                            "properties": {
                                "allowed_length": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "error_message": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "allowed_length",
                                "enabled",
                                "error_message"
                            ]
                        },
                        "no_adjacent": {
                            "description": "Check that no password does not contain sequences of adjacent keys of a typical keyboard layout. Such as qwer, ghjk, YUIO, 4567",
                            "type": "object",
                            "properties": {
                                "allowed_length": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "error_message": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "allowed_length",
                                "enabled",
                                "error_message"
                            ]
                        }
                    },
                    "required": [
                        "no_adjacent",
                        "no_alphanumeric",
                        "no_repeat",
                        "no_username",
                        "regex_list"
                    ]
                },
                "password_history_size": {
                    "type": "integer",
                    "default": null
                },
                "days_until_password_expires": {
                    "type": "integer",
                    "default": null
                }
            },
            "required": [
                "validators"
            ]
        },
        "GetApiAaaPermissionsResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Global permissions act all-over AOS and all blueprints.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label"
                        ]
                    }
                },
                "granular_permissions": {
                    "description": "Granular permissions act only inside a blueprint or a set of blueprints.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label"
                        ]
                    }
                }
            },
            "required": [
                "granular_permissions",
                "permissions"
            ]
        },
        "GetApiAaaProvidersProviderIdResponse": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "active": {
                    "type": "boolean"
                },
                "hostname_fqdn_ip": {
                    "description": "The fully qualified domain name (FQDN) or IP address of the LDAP server. If the first server cannot be reached, connections to succeeding ones are attempted in order.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "encryption": {
                    "description": "LDAP encryption mode. The permitted values are: None, SSL/TLS, or STARTTLS. Default: None",
                    "enum": [
                        "None",
                        "SSL/TLS",
                        "STARTTLS"
                    ],
                    "type": "string",
                    "default": null
                },
                "port": {
                    "title": "Port",
                    "description": "A single integer port number in range 1-65535",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "groups_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Groups Organizational Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "users_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Users Organization Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "bind_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the active server user that the Apstra server will connect",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "The LDAP server user password for Apstra server to connect ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "shared_key": {
                    "description": "Shared key. RADIUS or TACACS+ Only",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "auth_mode": {
                    "description": "Auth mode. The permitted values are: PAP, CHAP, or ASCII. TACACS+ Only. Default: ASCII",
                    "enum": [
                        "ASCII",
                        "CHAP",
                        "PAP"
                    ],
                    "type": "string",
                    "default": null
                },
                "ca_cert": {
                    "description": "CA cert to use with STARTTLS or SSL/TLS encryption. LDAP only",
                    "type": "string",
                    "pattern": "(-----BEGIN CERTIFICATE-----[a-zA-Z0-9/+\\n\\r#,+\"<>=;]+-----END CERTIFICATE-----)",
                    "default": null
                },
                "is_verify_cert": {
                    "description": "Validate peer cert chain and host name. LDAP Only. Default: False",
                    "type": "boolean",
                    "default": null
                },
                "timeout": {
                    "description": "This will be used for both network timeout and operation timeout. Default: 30 secs",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 120,
                    "default": 30
                },
                "query_scope": {
                    "description": "This will be used to control the scope level of data presented (search only the first level or search an entire sub-tree). LDAP Only. Default: sub_tree",
                    "enum": [
                        "one_level",
                        "sub_tree"
                    ],
                    "type": "string",
                    "default": null
                },
                "user_object_class_attribute_name": {
                    "description": "User Object class. LDAP Only. Default: inetOrgPerson",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_firstname_attribute_name": {
                    "description": "User Firstname. LDAP Only. Default: givenName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_lastname_attribute_name": {
                    "description": "User Lastname. LDAP Only. Default: sn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_email_attribute_name": {
                    "description": "User Email. LDAP Only. Default: mail",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_search_attribute_name": {
                    "description": "User Search Field. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_member_attribute_name": {
                    "description": "User Member Attribute. LDAP Only. Default: memberOf",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "username_attribute_name": {
                    "description": "User Name Attribute. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_object_class_attribute_name": {
                    "description": "Group Object class. LDAP Only. Default: posixGroup",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_name_attribute_name": {
                    "description": "Group Name Field. LDAP and RADIUS Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_search_attribute_name": {
                    "description": "Group Search Field. LDAP Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_attribute_name": {
                    "description": "Group Member User Attribute. LDAP Only. Default: entryDn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_mapping_attribute_name": {
                    "description": "Group Member Mapping Attribute. LDAP Only. Default: memberUid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_dn_attribute_name": {
                    "description": "Group DN Field. LDAP Only. Default: entryDN",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "vendor": {
                    "description": "Vendor type. The permitted values are: LDAP, AD, RADIUS or TACACS+Default: LDAP",
                    "enum": [
                        "AD",
                        "LDAP",
                        "RADIUS",
                        "TACACS+"
                    ],
                    "type": "string",
                    "default": null
                },
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "active",
                "created_at",
                "hostname_fqdn_ip",
                "id",
                "last_modified_at",
                "port"
            ]
        },
        "GetApiAaaProvidersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "provider_name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "active": {
                                "type": "boolean"
                            },
                            "hostname_fqdn_ip": {
                                "description": "The fully qualified domain name (FQDN) or IP address of the LDAP server. If the first server cannot be reached, connections to succeeding ones are attempted in order.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "encryption": {
                                "description": "LDAP encryption mode. The permitted values are: None, SSL/TLS, or STARTTLS. Default: None",
                                "enum": [
                                    "None",
                                    "SSL/TLS",
                                    "STARTTLS"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "port": {
                                "title": "Port",
                                "description": "A single integer port number in range 1-65535",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 65535
                            },
                            "groups_search_dn": {
                                "description": "The LDAP Distinguished Name (DN) path for the RBAC Groups Organizational Unit (OU)",
                                "type": "string",
                                "default": null
                            },
                            "users_search_dn": {
                                "description": "The LDAP Distinguished Name (DN) path for the RBAC Users Organization Unit (OU)",
                                "type": "string",
                                "default": null
                            },
                            "bind_dn": {
                                "description": "The LDAP Distinguished Name (DN) path for the active server user that the Apstra server will connect",
                                "type": "string",
                                "default": null
                            },
                            "password": {
                                "description": "The LDAP server user password for Apstra server to connect ",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64,
                                "default": null
                            },
                            "shared_key": {
                                "description": "Shared key. RADIUS or TACACS+ Only",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64,
                                "default": null
                            },
                            "auth_mode": {
                                "description": "Auth mode. The permitted values are: PAP, CHAP, or ASCII. TACACS+ Only. Default: ASCII",
                                "enum": [
                                    "ASCII",
                                    "CHAP",
                                    "PAP"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "ca_cert": {
                                "description": "CA cert to use with STARTTLS or SSL/TLS encryption. LDAP only",
                                "type": "string",
                                "pattern": "(-----BEGIN CERTIFICATE-----[a-zA-Z0-9/+\\n\\r#,+\"<>=;]+-----END CERTIFICATE-----)",
                                "default": null
                            },
                            "is_verify_cert": {
                                "description": "Validate peer cert chain and host name. LDAP Only. Default: False",
                                "type": "boolean",
                                "default": null
                            },
                            "timeout": {
                                "description": "This will be used for both network timeout and operation timeout. Default: 30 secs",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 120,
                                "default": 30
                            },
                            "query_scope": {
                                "description": "This will be used to control the scope level of data presented (search only the first level or search an entire sub-tree). LDAP Only. Default: sub_tree",
                                "enum": [
                                    "one_level",
                                    "sub_tree"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "user_object_class_attribute_name": {
                                "description": "User Object class. LDAP Only. Default: inetOrgPerson",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "user_firstname_attribute_name": {
                                "description": "User Firstname. LDAP Only. Default: givenName",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "user_lastname_attribute_name": {
                                "description": "User Lastname. LDAP Only. Default: sn",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "user_email_attribute_name": {
                                "description": "User Email. LDAP Only. Default: mail",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "user_search_attribute_name": {
                                "description": "User Search Field. LDAP Only. Default: uid",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "user_member_attribute_name": {
                                "description": "User Member Attribute. LDAP Only. Default: memberOf",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "username_attribute_name": {
                                "description": "User Name Attribute. LDAP Only. Default: uid",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "group_object_class_attribute_name": {
                                "description": "Group Object class. LDAP Only. Default: posixGroup",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "group_name_attribute_name": {
                                "description": "Group Name Field. LDAP and RADIUS Only. Default: cn",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "group_search_attribute_name": {
                                "description": "Group Search Field. LDAP Only. Default: cn",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "group_member_attribute_name": {
                                "description": "Group Member User Attribute. LDAP Only. Default: entryDn",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "group_member_mapping_attribute_name": {
                                "description": "Group Member Mapping Attribute. LDAP Only. Default: memberUid",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "group_dn_attribute_name": {
                                "description": "Group DN Field. LDAP Only. Default: entryDN",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "default": null
                            },
                            "vendor": {
                                "description": "Vendor type. The permitted values are: LDAP, AD, RADIUS or TACACS+Default: LDAP",
                                "enum": [
                                    "AD",
                                    "LDAP",
                                    "RADIUS",
                                    "TACACS+"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "id": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "active",
                            "created_at",
                            "hostname_fqdn_ip",
                            "id",
                            "last_modified_at",
                            "port"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaRatelimitAllowlistResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "subnet": {
                                "description": "A subnet that should never be rate limited",
                                "type": "string"
                            },
                            "comment": {
                                "description": "An optional description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "comment",
                            "subnet"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaRatelimitDenylistResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "subnet": {
                                "description": "A rate limited subnet",
                                "type": "string"
                            }
                        },
                        "required": [
                            "subnet"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaRatelimitResponse": {
            "type": "object",
            "properties": {
                "lockout_period": {
                    "description": "The amount of seconds to use for blocking an IP address or IP subnet",
                    "type": "integer"
                },
                "observation_window": {
                    "description": "The amount of seconds used to observe invalid password attempts",
                    "type": "integer"
                },
                "number_of_observations": {
                    "description": "Amount of allowed invalid password attempts before IP address or IP subnet is locked",
                    "type": "integer"
                }
            },
            "required": [
                "lockout_period",
                "number_of_observations",
                "observation_window"
            ]
        },
        "GetApiAaaRolesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "permissions": {
                                "description": "Global permissions act all-over AOS and all blueprints.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "default": null
                            },
                            "granular_permissions": {
                                "description": "Granular permissions act only inside a blueprint or a set of blueprints.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "scope": {
                                            "description": "Defines for which blueprints and tenants these permissions take effect. Examples are \"blueprint_id in [any]\", \"blueprint_id in ['bp_id'], \"blueprint_id in ['bp_id'] and tenant in ['tenant_label']\"",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "permissions",
                                        "scope"
                                    ]
                                },
                                "default": null
                            },
                            "id": {
                                "description": "Role ID",
                                "type": "string"
                            },
                            "label": {
                                "description": "Role name",
                                "type": "string"
                            },
                            "role": {
                                "description": "Role name",
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "type": {
                                "description": "Type of the role. \"global\" has only global permissions, that spreads all-over AOS and all blueprints. \"granular\" has only granular permissions, that act only inside a blueprint or a set of blueprints.",
                                "type": "string"
                            },
                            "is_role_deletable": {
                                "description": "Predefined roles can not be deleted",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "description",
                            "id",
                            "is_role_deletable",
                            "label",
                            "role",
                            "type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaRolesRoleIdResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Global permissions act all-over AOS and all blueprints.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": null
                },
                "granular_permissions": {
                    "description": "Granular permissions act only inside a blueprint or a set of blueprints.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "description": "Defines for which blueprints and tenants these permissions take effect. Examples are \"blueprint_id in [any]\", \"blueprint_id in ['bp_id'], \"blueprint_id in ['bp_id'] and tenant in ['tenant_label']\"",
                                "type": "string",
                                "minLength": 1
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "permissions",
                            "scope"
                        ]
                    },
                    "default": null
                },
                "id": {
                    "description": "Role ID",
                    "type": "string"
                },
                "label": {
                    "description": "Role name",
                    "type": "string"
                },
                "role": {
                    "description": "Role name",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "description": "Type of the role. \"global\" has only global permissions, that spreads all-over AOS and all blueprints. \"granular\" has only granular permissions, that act only inside a blueprint or a set of blueprints.",
                    "type": "string"
                },
                "is_role_deletable": {
                    "description": "Predefined roles can not be deleted",
                    "type": "boolean"
                }
            },
            "required": [
                "description",
                "id",
                "is_role_deletable",
                "label",
                "role",
                "type"
            ]
        },
        "GetApiAaaSamlProvidersProviderIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32
                },
                "idp_settings": {
                    "oneOf": [
                        {
                            "type": "object",
                            "properties": {
                                "metadata": {
                                    "description": "Use metadata field if your Identity Provider provides its settings in XML format.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "metadata"
                            ]
                        },
                        {
                            "type": "object",
                            "properties": {
                                "metadata_url": {
                                    "description": "Metadata will be downloaded and stored using this link.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "metadata_url"
                            ]
                        },
                        {
                            "type": "object",
                            "properties": {
                                "manual": {
                                    "type": "object",
                                    "properties": {
                                        "issuer": {
                                            "description": "Identity Provider Issuer",
                                            "type": "string"
                                        },
                                        "certificate": {
                                            "description": "X.509 Certificate",
                                            "type": "string"
                                        },
                                        "sso_url": {
                                            "description": "Identity Provider Single Sign-On URL",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "certificate",
                                        "issuer",
                                        "sso_url"
                                    ]
                                }
                            },
                            "required": [
                                "manual"
                            ]
                        }
                    ]
                },
                "base_url": {
                    "description": "The domain name or IP-address of your Apstra server. It is used to form settings needed by Identity Provider.",
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "sp_metadata": {
                    "description": "Service Provider settings in XML format",
                    "type": "string"
                },
                "sp_entityid": {
                    "description": "Audience URI (SP Entity ID) setting of Service Provider",
                    "type": "string"
                },
                "sp_sso_url": {
                    "description": "Single sign on URL of Service Provider",
                    "type": "string"
                }
            },
            "required": [
                "active",
                "base_url",
                "id",
                "idp_settings",
                "provider_name",
                "sp_entityid",
                "sp_metadata",
                "sp_sso_url"
            ]
        },
        "GetApiAaaSamlProvidersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "provider_name": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32
                            },
                            "active": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "active",
                            "id",
                            "provider_name"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaUsersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "username": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32,
                                "pattern": "^[a-zA-Z0-9@._-]*$"
                            },
                            "id": {
                                "type": "string"
                            },
                            "first_name": {
                                "type": "string",
                                "default": null
                            },
                            "last_name": {
                                "type": "string",
                                "default": null
                            },
                            "email": {
                                "type": "string",
                                "default": null
                            },
                            "roles": {
                                "description": "A list of role names defining a set of user permissions.",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "default": null
                            },
                            "favorites": {
                                "description": "A list of user bookmarks.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 64
                                        },
                                        "url": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "label",
                                        "url"
                                    ]
                                }
                            },
                            "preferences": {
                                "description": "A list of user UI settings.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "value": {},
                                        "id": {
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 64
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "key",
                                        "value"
                                    ]
                                }
                            },
                            "is_active": {
                                "description": "Whether the user is currently enabled.",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "favorites",
                            "id",
                            "is_active",
                            "preferences",
                            "username"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaUsersTargetUserIdPermissionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "route": {
                                "description": "API route",
                                "type": "string"
                            },
                            "methods": {
                                "description": "List of HTTP methods",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "methods",
                            "route"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAaaUsersTargetUserIdResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^[a-zA-Z0-9@._-]*$"
                },
                "id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "default": null
                },
                "last_name": {
                    "type": "string",
                    "default": null
                },
                "email": {
                    "type": "string",
                    "default": null
                },
                "roles": {
                    "description": "A list of role names defining a set of user permissions.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "default": null
                },
                "favorites": {
                    "description": "A list of user bookmarks.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "url": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label",
                            "url"
                        ]
                    }
                },
                "preferences": {
                    "description": "A list of user UI settings.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "string",
                                "minLength": 1
                            },
                            "value": {},
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            }
                        },
                        "required": [
                            "id",
                            "key",
                            "value"
                        ]
                    }
                },
                "is_active": {
                    "description": "Whether the user is currently enabled.",
                    "type": "boolean"
                }
            },
            "required": [
                "favorites",
                "id",
                "is_active",
                "preferences",
                "username"
            ]
        },
        "GetApiAaaUsersTargetUserIdRolesResponse": {
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Global permissions act all-over AOS and all blueprints.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "granular_permissions": {
                    "description": "Granular permissions act only inside a blueprint or a set of blueprints.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "description": "Defines for which blueprints and tenants these permissions take effect. Examples are \"blueprint_id in [any]\", \"blueprint_id in ['bp_id'], \"blueprint_id in ['bp_id'] and tenant in ['tenant_label']\"",
                                "type": "string",
                                "minLength": 1
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "permissions",
                            "scope"
                        ]
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    }
                }
            },
            "required": [
                "granular_permissions",
                "permissions",
                "roles"
            ]
        },
        "GetApiAlertEventsResponse": {
            "title": "Events",
            "type": "object",
            "properties": {
                "events": {
                    "title": "Event",
                    "description": "See protobuf description for event schemas",
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "events"
            ]
        },
        "GetApiAuditEventsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "blueprint_id": {
                                        "$ref": "#/definitions/TypeDump96"
                                    },
                                    "blueprint_label": {
                                        "$ref": "#/definitions/TypeDump97"
                                    },
                                    "commit_message": {
                                        "description": "Commit message of the blueprint commit event",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "blueprint_id",
                                    "blueprint_label",
                                    "commit_message",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "blueprint_id": {
                                        "$ref": "#/definitions/TypeDump96"
                                    },
                                    "blueprint_label": {
                                        "$ref": "#/definitions/TypeDump97"
                                    }
                                },
                                "required": [
                                    "blueprint_id",
                                    "blueprint_label",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "blueprint_id": {
                                        "$ref": "#/definitions/TypeDump96"
                                    },
                                    "blueprint_label": {
                                        "$ref": "#/definitions/TypeDump97"
                                    }
                                },
                                "required": [
                                    "blueprint_id",
                                    "blueprint_label",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "blueprint_id": {
                                        "$ref": "#/definitions/TypeDump96"
                                    },
                                    "blueprint_label": {
                                        "$ref": "#/definitions/TypeDump97"
                                    }
                                },
                                "required": [
                                    "blueprint_id",
                                    "blueprint_label",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "blueprint_id": {
                                        "$ref": "#/definitions/TypeDump96"
                                    },
                                    "blueprint_label": {
                                        "$ref": "#/definitions/TypeDump97"
                                    }
                                },
                                "required": [
                                    "blueprint_id",
                                    "blueprint_label",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "blueprint_id": {
                                        "$ref": "#/definitions/TypeDump96"
                                    },
                                    "blueprint_label": {
                                        "$ref": "#/definitions/TypeDump97"
                                    }
                                },
                                "required": [
                                    "blueprint_id",
                                    "blueprint_label",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "device_id": {
                                        "type": "string"
                                    },
                                    "device_config": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "device_config",
                                    "device_id",
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "subnet": {
                                        "$ref": "#/definitions/TypeDump98"
                                    }
                                },
                                "required": [
                                    "result",
                                    "subnet",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "subnet": {
                                        "$ref": "#/definitions/TypeDump98"
                                    }
                                },
                                "required": [
                                    "result",
                                    "subnet",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    },
                                    "subnet": {
                                        "$ref": "#/definitions/TypeDump98"
                                    }
                                },
                                "required": [
                                    "result",
                                    "subnet",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump91"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump92"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump93"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump94"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump95"
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "$ref": "#/definitions/TypeDump99"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump100"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump101"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump102"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump103"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump104"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "old_last_name": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_last_name": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_first_name": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_first_name": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_email": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_email": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": null
                                    },
                                    "new_roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "default": null
                                    }
                                },
                                "required": [
                                    "result",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip",
                                    "username"
                                ]
                            },
                            {
                                "$ref": "#/definitions/TypeDump99"
                            },
                            {
                                "$ref": "#/definitions/TypeDump105"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump100"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump101"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump102"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump103"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump104"
                                    },
                                    "syslog_id": {
                                        "type": "string"
                                    },
                                    "new_protocol": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_protocol": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_port": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_port": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_address": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_address": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_facility": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_facility": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_timezone": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_timezone": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "result",
                                    "syslog_id",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "$ref": "#/definitions/TypeDump105"
                            },
                            {
                                "$ref": "#/definitions/TypeDump106"
                            },
                            {
                                "$ref": "#/definitions/TypeDump106"
                            },
                            {
                                "$ref": "#/definitions/TypeDump107"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump100"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/TypeDump101"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump102"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump103"
                                    },
                                    "result": {
                                        "$ref": "#/definitions/TypeDump104"
                                    },
                                    "subnet": {
                                        "type": "string"
                                    },
                                    "new_action": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_action": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "new_comment": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "old_comment": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "result",
                                    "subnet",
                                    "timestamp",
                                    "type",
                                    "user",
                                    "user_ip"
                                ]
                            },
                            {
                                "$ref": "#/definitions/TypeDump107"
                            }
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiAuditEventsRetentionResponse": {
            "type": "object",
            "properties": {
                "size": {
                    "description": "Retention size of audit events in bytes",
                    "type": "integer",
                    "minimum": 1
                },
                "period": {
                    "description": "Retention period of audit events in seconds",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "required": [
                "period",
                "size"
            ]
        },
        "GetApiAuditEventsTypesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "Type of audit event",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdAnomaliesHistoryStatsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "size": {
                                "description": "Disk size in bytes used to store metric files",
                                "type": "integer"
                            },
                            "retention_size": {
                                "description": "Limitation in bytes of a disk space that can be used to store the metric files",
                                "type": "integer"
                            },
                            "retention_period": {
                                "description": "Limitation in seconds of a history duration",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "name",
                            "retention_period",
                            "retention_size",
                            "size"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdAnomaliesNodesCountResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "all": {
                                "description": "Total number of alerts",
                                "type": "integer"
                            },
                            "node": {
                                "description": "System's label in blueprint",
                                "type": "string"
                            },
                            "system_id": {
                                "description": "System ID (e.g. serial number)",
                                "type": "string"
                            },
                            "max": {
                                "type": "object",
                                "properties": {
                                    "lag": {
                                        "description": "Maximum number of lag alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "mac": {
                                        "description": "Maximum number of mac alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "mlag": {
                                        "description": "Maximum number of mlag alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "bgp": {
                                        "description": "Maximum number of bgp alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "interface": {
                                        "description": "Maximum number of interface alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "blueprint_rendering": {
                                        "description": "Maximum number of blueprint_rendering alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "route": {
                                        "description": "Maximum number of route alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "cabling": {
                                        "description": "Maximum number of cabling alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "config": {
                                        "description": "Maximum number of config alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "liveness": {
                                        "description": "Maximum number of liveness alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "hostname": {
                                        "description": "Maximum number of hostname alerts",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "deployment": {
                                        "description": "Maximum number of deployment alerts",
                                        "type": "integer",
                                        "default": null
                                    }
                                },
                                "additionalProperties": false
                            },
                            "bgp": {
                                "description": "Number of bgp alerts",
                                "type": "integer",
                                "default": null
                            },
                            "cabling": {
                                "description": "Number of cabling alerts",
                                "type": "integer",
                                "default": null
                            },
                            "interface": {
                                "description": "Number of interface alerts",
                                "type": "integer",
                                "default": null
                            },
                            "hostname": {
                                "description": "Number of hostname alerts",
                                "type": "integer",
                                "default": null
                            },
                            "liveness": {
                                "description": "Number of liveness alerts",
                                "type": "integer",
                                "default": null
                            },
                            "route": {
                                "description": "Number of route alerts",
                                "type": "integer",
                                "default": null
                            },
                            "config": {
                                "description": "Number of config alerts",
                                "type": "integer",
                                "default": null
                            },
                            "probe": {
                                "description": "Number of probe alerts",
                                "type": "integer",
                                "default": null
                            },
                            "deployment": {
                                "description": "Number of deployment alerts",
                                "type": "integer",
                                "default": null
                            },
                            "blueprint_rendering": {
                                "description": "Number of blueprint_rendering alerts",
                                "type": "integer",
                                "default": null
                            },
                            "lag": {
                                "description": "Number of lag alerts",
                                "type": "integer",
                                "default": null
                            },
                            "mlag": {
                                "description": "Number of mlag alerts",
                                "type": "integer",
                                "default": null
                            },
                            "mac": {
                                "description": "Number of mac alerts",
                                "type": "integer",
                                "default": null
                            },
                            "arp": {
                                "description": "Number of arp alerts",
                                "type": "integer",
                                "default": null
                            },
                            "counter": {
                                "description": "Number of counter alerts",
                                "type": "integer",
                                "default": null
                            },
                            "streaming": {
                                "description": "Number of streaming alerts",
                                "type": "integer",
                                "default": null
                            },
                            "series": {
                                "description": "Number of series alerts",
                                "type": "integer",
                                "default": null
                            }
                        },
                        "required": [
                            "all",
                            "max",
                            "node",
                            "system_id"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "items"
            ],
            "additionalProperties": false
        },
        "GetApiBlueprintsBlueprintIdAnomaliesServicesCountResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Type of alert",
                                "type": "string"
                            },
                            "role": {
                                "description": "Alert role or Device role",
                                "type": "string"
                            },
                            "count": {
                                "description": "Number of alerts",
                                "type": "integer"
                            },
                            "max": {
                                "description": "Maximum number of alerts",
                                "type": "integer",
                                "default": null
                            }
                        },
                        "required": [
                            "count",
                            "role",
                            "type"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "items"
            ],
            "additionalProperties": false
        },
        "GetApiBlueprintsBlueprintIdArcaArcaIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "model_name": {
                    "description": "Name of the ARCA model (reference design specific)",
                    "type": "string"
                },
                "trigger_period": {
                    "description": "Time between executions of this ARCA instance (seconds)",
                    "type": "number"
                },
                "state": {
                    "description": "State of the ARCA instance.",
                    "enum": [
                        "created",
                        "error",
                        "operational"
                    ],
                    "type": "string"
                },
                "root_cause_count": {
                    "description": "Number of all root causes detected in the last successful run of this ARCA instance.",
                    "type": "integer"
                },
                "top_level_root_cause_count": {
                    "description": "Number of top level root causes detected in the last successful run of this ARCA instance.",
                    "type": "integer"
                },
                "root_causes": {
                    "description": "All root causes identified and still exists as of status_updated_at",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the root cause in this ARCA instance",
                                "type": "string"
                            },
                            "context": {
                                "description": "Context used to relate root cause to blueprint (reference design specific)",
                                "type": "string"
                            },
                            "description": {
                                "description": "Textual form of the root cause",
                                "type": "string"
                            },
                            "symptoms": {
                                "description": "List of symptoms caused by this root cause",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier of the symptom in this ARCA instance",
                                            "type": "string"
                                        },
                                        "context": {
                                            "description": "Context used to relate symptom to blueprint (reference design specific)",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Textual form of the symptom",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "context",
                                        "description",
                                        "id"
                                    ]
                                }
                            },
                            "alternative_root_causes": {
                                "description": "List of member root cause ids. Alternative root cause is another, less likely root causes that can be explained by the same symptoms (usually by a subset of them)",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "anomaly_count": {
                                "description": "Number of anomalies caused by this root cause grouped by type",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            }
                        },
                        "required": [
                            "alternative_root_causes",
                            "anomaly_count",
                            "context",
                            "description",
                            "id",
                            "symptoms"
                        ]
                    },
                    "default": null
                },
                "run_count": {
                    "description": "Number of tacfsd runs.",
                    "type": "integer"
                },
                "error_count": {
                    "description": "Number of failed tacfsd runs.",
                    "type": "integer"
                },
                "reason": {
                    "description": "A reason why this ARCA instance is in its current state.",
                    "type": "string"
                }
            },
            "required": [
                "error_count",
                "id",
                "model_name",
                "reason",
                "root_cause_count",
                "run_count",
                "state",
                "top_level_root_cause_count",
                "trigger_period"
            ]
        },
        "GetApiBlueprintsBlueprintIdArcaResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "model_name": {
                                "description": "Name of the ARCA model (reference design specific)",
                                "type": "string"
                            },
                            "trigger_period": {
                                "description": "Time between executions of this ARCA instance (seconds)",
                                "type": "number"
                            },
                            "state": {
                                "description": "State of the ARCA instance.",
                                "enum": [
                                    "created",
                                    "error",
                                    "operational"
                                ],
                                "type": "string"
                            },
                            "root_cause_count": {
                                "description": "Number of all root causes detected in the last successful run of this ARCA instance.",
                                "type": "integer"
                            },
                            "top_level_root_cause_count": {
                                "description": "Number of top level root causes detected in the last successful run of this ARCA instance.",
                                "type": "integer"
                            },
                            "root_causes": {
                                "description": "All root causes identified and still exists as of status_updated_at",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier of the root cause in this ARCA instance",
                                            "type": "string"
                                        },
                                        "context": {
                                            "description": "Context used to relate root cause to blueprint (reference design specific)",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Textual form of the root cause",
                                            "type": "string"
                                        },
                                        "symptoms": {
                                            "description": "List of symptoms caused by this root cause",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier of the symptom in this ARCA instance",
                                                        "type": "string"
                                                    },
                                                    "context": {
                                                        "description": "Context used to relate symptom to blueprint (reference design specific)",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Textual form of the symptom",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "context",
                                                    "description",
                                                    "id"
                                                ]
                                            }
                                        },
                                        "alternative_root_causes": {
                                            "description": "List of member root cause ids. Alternative root cause is another, less likely root causes that can be explained by the same symptoms (usually by a subset of them)",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "anomaly_count": {
                                            "description": "Number of anomalies caused by this root cause grouped by type",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer",
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "required": [
                                        "alternative_root_causes",
                                        "anomaly_count",
                                        "context",
                                        "description",
                                        "id",
                                        "symptoms"
                                    ]
                                },
                                "default": null
                            },
                            "run_count": {
                                "description": "Number of tacfsd runs.",
                                "type": "integer"
                            },
                            "error_count": {
                                "description": "Number of failed tacfsd runs.",
                                "type": "integer"
                            },
                            "reason": {
                                "description": "A reason why this ARCA instance is in its current state.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "error_count",
                            "id",
                            "model_name",
                            "reason",
                            "root_cause_count",
                            "run_count",
                            "state",
                            "top_level_root_cause_count",
                            "trigger_period"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdCommitCheckResultResponse": {
            "type": "object",
            "properties": {
                "systems": {
                    "description": "Map between system_id and commit-check result for it",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "enum": [
                                    "failure",
                                    "pending",
                                    "rejected",
                                    "success",
                                    "timeout",
                                    "unavailable",
                                    "unknown",
                                    "unloadable",
                                    "unsupported"
                                ],
                                "type": "string"
                            },
                            "config_string": {
                                "description": "Configuration string that was tested against device",
                                "type": "string",
                                "default": null
                            },
                            "diff_string": {
                                "description": "Diff of configuration against existing device configuration.",
                                "type": "string",
                                "default": null
                            },
                            "error": {
                                "description": "(Optional) Errors emitted during commit-check against device",
                                "type": "string",
                                "default": null
                            },
                            "source": {
                                "enum": [
                                    "staging_graph",
                                    "user_supplied"
                                ],
                                "type": "string"
                            },
                            "blueprint_id": {
                                "description": "Blueprint ID of device",
                                "type": "string",
                                "default": null
                            },
                            "blueprint_version": {
                                "type": "integer",
                                "minimum": 0,
                                "default": null
                            },
                            "validity": {
                                "enum": [
                                    "fresh",
                                    "stale",
                                    "unknown"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "finished_at": {
                                "description": "Time at which this commit-check result was finished",
                                "type": "string",
                                "format": "date-time",
                                "default": null
                            }
                        },
                        "required": [
                            "source",
                            "state"
                        ]
                    }
                },
                "blueprint": {
                    "type": "object",
                    "properties": {
                        "state": {
                            "description": "Compound result for all commit-check operations",
                            "enum": [
                                "empty",
                                "failure",
                                "pending",
                                "rejected",
                                "success",
                                "timeout",
                                "unavailable",
                                "unknown",
                                "unloadable",
                                "unsupported"
                            ],
                            "type": "string"
                        },
                        "blueprint_version": {
                            "description": "Version of Blueprint used to render configuration strings.",
                            "type": "integer",
                            "minimum": 0,
                            "default": null
                        },
                        "validity": {
                            "enum": [
                                "fresh",
                                "stale",
                                "unknown"
                            ],
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "state"
                    ]
                }
            },
            "required": [
                "blueprint",
                "systems"
            ]
        },
        "GetApiBlueprintsBlueprintIdConfigurationResponse": {
            "title": "BlueprintDeploymentStatus",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "total_devices": {
                    "description": "Total number of active devices",
                    "type": "integer"
                },
                "config_mismatch": {
                    "description": "List of devices with config mismatch",
                    "type": "array",
                    "items": {
                        "title": "DeviceConfigMismatch",
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Identifier of the system (serial number)",
                                "type": "string"
                            },
                            "system_id": {
                                "description": "Same as `id`",
                                "type": "string"
                            },
                            "config_mismatched_since": {
                                "description": "Time when mismatch was found",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "config_mismatched_since",
                            "id",
                            "system_id"
                        ]
                    },
                    "default": []
                },
                "state": {
                    "description": "Deployment status",
                    "type": "string"
                },
                "device_status": {
                    "type": "array",
                    "items": {
                        "title": "DeviceDeploymentStatus",
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Identifier of the system (serial number)",
                                "type": "string"
                            },
                            "system_id": {
                                "description": "Same as `id`",
                                "type": "string"
                            },
                            "state": {
                                "description": "Deployment status",
                                "type": "string"
                            },
                            "config_type": {
                                "description": "Device configuration type",
                                "type": "string"
                            },
                            "deploy_stage": {
                                "description": "Deployment stage",
                                "type": "string"
                            },
                            "error_message": {
                                "description": "Error if any",
                                "type": "string"
                            },
                            "last_modified_at": {
                                "description": "Timestamp in ISO 8601 format",
                                "type": "string"
                            }
                        },
                        "required": [
                            "config_type",
                            "deploy_stage",
                            "error_message",
                            "id",
                            "last_modified_at",
                            "state",
                            "system_id"
                        ]
                    }
                },
                "deployment_status": {
                    "description": "Deployment status for each configuration type",
                    "type": "object",
                    "properties": {
                        "drain_config": {
                            "$ref": "#/definitions/TypeDump32",
                            "default": null
                        },
                        "service_config": {
                            "$ref": "#/definitions/TypeDump32",
                            "default": null
                        },
                        "discovery2_config": {
                            "$ref": "#/definitions/TypeDump32",
                            "default": null
                        }
                    },
                    "default": null
                },
                "last_modified_at": {
                    "description": "Timestamp in ISO 8601 format",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "device_status",
                "id",
                "state",
                "total_devices"
            ]
        },
        "GetApiBlueprintsBlueprintIdDeployResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer"
                },
                "state": {
                    "enum": [
                        "failure",
                        "success"
                    ],
                    "type": "string"
                },
                "error": {
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "state",
                "version"
            ]
        },
        "GetApiBlueprintsBlueprintIdDiffResponse": {
            "type": "object",
            "properties": {
                "digest": {
                    "type": "object",
                    "properties": {
                        "node": {
                            "type": "object",
                            "properties": {
                                "added": {
                                    "type": "integer"
                                },
                                "removed": {
                                    "type": "integer"
                                },
                                "changed": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "added",
                                "changed",
                                "removed"
                            ]
                        },
                        "relationship": {
                            "type": "object",
                            "properties": {
                                "added": {
                                    "type": "integer"
                                },
                                "removed": {
                                    "type": "integer"
                                },
                                "changed": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "added",
                                "changed",
                                "removed"
                            ]
                        }
                    },
                    "required": [
                        "node",
                        "relationship"
                    ]
                }
            },
            "required": [
                "digest"
            ],
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "added": {
                        "$ref": "#/definitions/TypeDump120"
                    },
                    "removed": {
                        "$ref": "#/definitions/TypeDump120"
                    },
                    "changed": {
                        "$ref": "#/definitions/TypeDump120"
                    }
                },
                "required": [
                    "added",
                    "changed",
                    "removed"
                ],
                "default": null
            }
        },
        "GetApiBlueprintsBlueprintIdDiffStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of blueprint diff computation. \"undeployed\" means blueprint is never deployed. \"deploying\" means commit is underway. \"in_progress\" means diff update is underway. This happens after a commit has copied staged changes to the active blueprint, or if a new staged change is being processed to update the diff against active blueprint. \"initializing\" is a special case of \"in_progress\" in which blueprint diff engine is beginning the diff process for the first time for this blueprint. This state is intended for debugging",
                    "enum": [
                        "completed",
                        "deploying",
                        "in_progress",
                        "initializing",
                        "undeployed"
                    ],
                    "type": "string"
                },
                "staging_version": {
                    "description": "Version of the staging blueprint",
                    "type": "integer"
                },
                "deployed_version": {
                    "description": "Version of the deployed blueprint",
                    "type": "integer"
                },
                "operation_version": {
                    "description": "Version of the operation blueprint",
                    "type": "integer"
                },
                "logical_diff_supported": {
                    "description": "If True, then blueprint's reference design supports logical diffs, such as virtual network diff in two_stage_l3clos. Otherwise only the raw diff is available",
                    "type": "boolean"
                },
                "cache_diff_supported": {
                    "description": "If True, then blueprint's reference design supports diffs for cached data, such as cabling map diff in two_stage_l3clos. Otherwise only the raw diff is available",
                    "type": "boolean"
                },
                "deploy_config_version": {
                    "description": "Latest-known version of staging blueprint requested to be committed. This field is for debugging purposes",
                    "type": "integer"
                },
                "deploy_status_version": {
                    "description": "Latest-known staging blueprint commit version processed. If this is different from deploy_config_version, it means the commit request is still being processed. This field is for debugging purposes",
                    "type": "integer"
                },
                "deploy_status": {
                    "description": "Result of latest blueprint commit request. A successful request means the deployed blueprint is updated with changes in staging blueprint, and blueprint diff is being updated. deploy_error field is None. A failed request means that no changes were made to the deployed blueprint. The error is given in deploy_error below. This field is used for debugging purposes",
                    "enum": [
                        "failure",
                        "success"
                    ],
                    "type": "string"
                },
                "deploy_error": {
                    "description": "Error message when processing latest commit request. It is None if the latest commit request succeeded. This field is used for debugging purposes",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "cache_diff_supported",
                "deploy_config_version",
                "deploy_status",
                "deploy_status_version",
                "deployed_version",
                "logical_diff_supported",
                "operation_version",
                "staging_version",
                "status"
            ]
        },
        "GetApiBlueprintsBlueprintIdErrorsResponse": {
            "type": "object",
            "properties": {
                "relationships": {
                    "$ref": "#/definitions/TypeDump"
                },
                "nodes": {
                    "$ref": "#/definitions/TypeDump"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "nodes",
                "relationships",
                "version"
            ]
        },
        "GetApiBlueprintsBlueprintIdIbaAnomalousStagesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "probe_id": {
                                "description": "Probe ID in which stage is located",
                                "type": "string"
                            },
                            "stage_name": {
                                "description": "Stage name",
                                "type": "string"
                            },
                            "items": {
                                "description": "Total numbers of series in stage",
                                "type": "integer"
                            },
                            "anomalies": {
                                "title": "Number of series in stage that have anomalies",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "anomalies",
                            "items",
                            "probe_id",
                            "stage_name"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdIbaDashboardsDashboardIdExportResponse": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Dashboard label.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Dashboard description.",
                    "type": "string",
                    "default": ""
                },
                "grid": {
                    "description": "Widgets grid as a 2D array.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Widget label.",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "description": {
                                            "description": "Widget description.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "type": {
                                            "description": "Widget type.",
                                            "type": "string"
                                        },
                                        "probe_id": {
                                            "description": "Source probe ID.",
                                            "type": "string"
                                        },
                                        "stage_name": {
                                            "description": "Stage name whose data to be displayed.",
                                            "type": "string"
                                        },
                                        "filter": {
                                            "description": "Set of words that should be present in stage item properties.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "visible_columns": {
                                            "description": "Columns in stage output to be displayed.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "orderby": {
                                            "description": "Query as a string \"{field}:{ASC/DESC}\"",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "max_items": {
                                            "description": "The number of items to be displayed",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 100,
                                            "default": 10
                                        },
                                        "anomalous_only": {
                                            "description": "Show only items with anomalies.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "show_context": {
                                            "description": "Show context information combined from multiple stages.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "spotlight_mode": {
                                            "description": "Show an extended view of a single stage item.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "data_source": {
                                            "description": "Indicates what data source should be used for the stage: real time or time-series. The latter one can be used only when metric logging is enabled for the stage.",
                                            "enum": [
                                                "real_time",
                                                "time_series"
                                            ],
                                            "type": "string",
                                            "default": "real_time"
                                        },
                                        "time_series_duration": {
                                            "description": "Show only last samples limited by duration in seconds.",
                                            "type": "integer",
                                            "minimum": 1,
                                            "default": 86400
                                        },
                                        "aggregation_period": {
                                            "description": "Accumulate samples within this period of time and show their average as a single item.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 300
                                        },
                                        "aggregation_type": {
                                            "description": "Aggregation method applied to samples for each period",
                                            "enum": [
                                                "all_of",
                                                "any_of",
                                                "average",
                                                "last",
                                                "max",
                                                "min",
                                                "none",
                                                "unset"
                                            ],
                                            "type": "string",
                                            "default": "unset"
                                        },
                                        "combine_graphs": {
                                            "description": "Mode of displaying multiple graphs",
                                            "enum": [
                                                "linear",
                                                "none",
                                                "stacked"
                                            ],
                                            "type": "string",
                                            "default": "none"
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "probe_id",
                                        "stage_name",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "minItems": 1
                },
                "predefined_dashboard": {
                    "description": "Name of the predefined dashboard or an empty string in case of manual modification or a custom dashboard.",
                    "type": "string"
                },
                "predefined_parameters": {
                    "description": "Set of parameters dependent on the dashboard type",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "probes": {
                    "description": "Probes used by dashboard",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Name provided by a user.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "description": {
                                "description": "Description provided by a user.",
                                "type": "string",
                                "default": ""
                            },
                            "processors": {
                                "description": "A set of processors.",
                                "type": "array",
                                "items": {
                                    "description": "Represents a single step of data processing in an analytics graph.",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Name of a processor",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "type": {
                                            "description": "Name of a processor type.",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "properties": {
                                            "description": "Represents a set of processor specific configuration.",
                                            "type": "object",
                                            "additionalProperties": {},
                                            "maxProperties": 0
                                        },
                                        "inputs": {
                                            "description": "A dictionary which allows to specify names of other stages as inputs for the given stage by associating input names with the stage names, where keys are names of inputs which are defined for a particular processor type, values are names of input stages and the column names from that stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "stage": {
                                                        "description": "The name of the input stage.",
                                                        "type": "string"
                                                    },
                                                    "column": {
                                                        "description": "The name of the input column.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "stage"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "outputs": {
                                            "description": "A dictionary which allows to specify names of other stages as outputs for the given stage by associating output names with the stage names, where keys are names of outputs which are defined for a particular processor type, values are names of output stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "inputs",
                                        "name",
                                        "outputs",
                                        "properties",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                }
                            },
                            "predefined_probe": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Predefined probe name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": true,
                                "default": null
                            },
                            "stages": {
                                "description": "A set of stages.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Name of stage",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of stage",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "units": {
                                            "description": "Mapping of ValueType.name to units",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        },
                                        "enable_metric_logging": {
                                            "description": "Save changes in this stage to MetricDB time series database",
                                            "type": "boolean"
                                        },
                                        "retention_duration": {
                                            "description": "Retain data in MetricDB for specified duration in seconds",
                                            "type": "integer"
                                        },
                                        "retention_size": {
                                            "description": "Maximum allowed size, in bytes, of data to store in MetricDB",
                                            "type": "integer"
                                        },
                                        "graph_annotation_properties": {
                                            "description": "Set of annotation properties associated with graph nodes which values are stored in probe stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "node_id": {
                                                        "description": "Name of a property that contains a graph node ID.",
                                                        "type": "string"
                                                    },
                                                    "column": {
                                                        "description": "Name of a value column.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "column",
                                                    "node_id"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "enable_metric_logging",
                                        "graph_annotation_properties",
                                        "name",
                                        "retention_duration",
                                        "retention_size",
                                        "units"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "label",
                            "processors",
                            "stages"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "grid",
                "label",
                "predefined_dashboard",
                "probes"
            ],
            "additionalProperties": false
        },
        "GetApiBlueprintsBlueprintIdIbaDashboardsDashboardIdResponse": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Dashboard label.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Dashboard description.",
                    "type": "string",
                    "default": ""
                },
                "grid": {
                    "description": "Widgets grid as a 2D array.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Widget label.",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "description": {
                                            "description": "Widget description.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "type": {
                                            "description": "Widget type.",
                                            "type": "string"
                                        },
                                        "probe_id": {
                                            "description": "Source probe ID.",
                                            "type": "string"
                                        },
                                        "stage_name": {
                                            "description": "Stage name whose data to be displayed.",
                                            "type": "string"
                                        },
                                        "filter": {
                                            "description": "Set of words that should be present in stage item properties.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "visible_columns": {
                                            "description": "Columns in stage output to be displayed.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "orderby": {
                                            "description": "Query as a string \"{field}:{ASC/DESC}\"",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "max_items": {
                                            "description": "The number of items to be displayed",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 100,
                                            "default": 10
                                        },
                                        "anomalous_only": {
                                            "description": "Show only items with anomalies.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "show_context": {
                                            "description": "Show context information combined from multiple stages.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "spotlight_mode": {
                                            "description": "Show an extended view of a single stage item.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "data_source": {
                                            "description": "Indicates what data source should be used for the stage: real time or time-series. The latter one can be used only when metric logging is enabled for the stage.",
                                            "enum": [
                                                "real_time",
                                                "time_series"
                                            ],
                                            "type": "string",
                                            "default": "real_time"
                                        },
                                        "time_series_duration": {
                                            "description": "Show only last samples limited by duration in seconds.",
                                            "type": "integer",
                                            "minimum": 1,
                                            "default": 86400
                                        },
                                        "aggregation_period": {
                                            "description": "Accumulate samples within this period of time and show their average as a single item.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 300
                                        },
                                        "aggregation_type": {
                                            "description": "Aggregation method applied to samples for each period",
                                            "enum": [
                                                "all_of",
                                                "any_of",
                                                "average",
                                                "last",
                                                "max",
                                                "min",
                                                "none",
                                                "unset"
                                            ],
                                            "type": "string",
                                            "default": "unset"
                                        },
                                        "combine_graphs": {
                                            "description": "Mode of displaying multiple graphs",
                                            "enum": [
                                                "linear",
                                                "none",
                                                "stacked"
                                            ],
                                            "type": "string",
                                            "default": "none"
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "probe_id",
                                        "stage_name",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "minItems": 1
                },
                "predefined_dashboard": {
                    "description": "Name of the predefined dashboard or an empty string in case of manual modification or a custom dashboard.",
                    "type": "string"
                },
                "predefined_parameters": {
                    "description": "Set of parameters dependent on the dashboard type",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "id": {
                    "description": "Unique dashboard identifier.",
                    "type": "string"
                },
                "created_by": {
                    "description": "Indicates who created the dashboard.",
                    "type": "string",
                    "default": null
                },
                "updated_by": {
                    "description": "Indicates who modified the dashboard.",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "grid",
                "id",
                "label",
                "predefined_dashboard"
            ],
            "additionalProperties": false
        },
        "GetApiBlueprintsBlueprintIdIbaDashboardsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of dashboards.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Dashboard label.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "description": {
                                "description": "Dashboard description.",
                                "type": "string",
                                "default": ""
                            },
                            "grid": {
                                "description": "Widgets grid as a 2D array.",
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "label": {
                                                        "description": "Widget label.",
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 120
                                                    },
                                                    "description": {
                                                        "description": "Widget description.",
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "type": {
                                                        "description": "Widget type.",
                                                        "type": "string"
                                                    },
                                                    "probe_id": {
                                                        "description": "Source probe ID.",
                                                        "type": "string"
                                                    },
                                                    "stage_name": {
                                                        "description": "Stage name whose data to be displayed.",
                                                        "type": "string"
                                                    },
                                                    "filter": {
                                                        "description": "Set of words that should be present in stage item properties.",
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "visible_columns": {
                                                        "description": "Columns in stage output to be displayed.",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "default": []
                                                    },
                                                    "orderby": {
                                                        "description": "Query as a string \"{field}:{ASC/DESC}\"",
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "max_items": {
                                                        "description": "The number of items to be displayed",
                                                        "type": "integer",
                                                        "minimum": 1,
                                                        "maximum": 100,
                                                        "default": 10
                                                    },
                                                    "anomalous_only": {
                                                        "description": "Show only items with anomalies.",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "show_context": {
                                                        "description": "Show context information combined from multiple stages.",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "spotlight_mode": {
                                                        "description": "Show an extended view of a single stage item.",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "data_source": {
                                                        "description": "Indicates what data source should be used for the stage: real time or time-series. The latter one can be used only when metric logging is enabled for the stage.",
                                                        "enum": [
                                                            "real_time",
                                                            "time_series"
                                                        ],
                                                        "type": "string",
                                                        "default": "real_time"
                                                    },
                                                    "time_series_duration": {
                                                        "description": "Show only last samples limited by duration in seconds.",
                                                        "type": "integer",
                                                        "minimum": 1,
                                                        "default": 86400
                                                    },
                                                    "aggregation_period": {
                                                        "description": "Accumulate samples within this period of time and show their average as a single item.",
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "default": 300
                                                    },
                                                    "aggregation_type": {
                                                        "description": "Aggregation method applied to samples for each period",
                                                        "enum": [
                                                            "all_of",
                                                            "any_of",
                                                            "average",
                                                            "last",
                                                            "max",
                                                            "min",
                                                            "none",
                                                            "unset"
                                                        ],
                                                        "type": "string",
                                                        "default": "unset"
                                                    },
                                                    "combine_graphs": {
                                                        "description": "Mode of displaying multiple graphs",
                                                        "enum": [
                                                            "linear",
                                                            "none",
                                                            "stacked"
                                                        ],
                                                        "type": "string",
                                                        "default": "none"
                                                    }
                                                },
                                                "required": [
                                                    "label",
                                                    "probe_id",
                                                    "stage_name",
                                                    "type"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                },
                                "minItems": 1
                            },
                            "predefined_dashboard": {
                                "description": "Name of the predefined dashboard or an empty string in case of manual modification or a custom dashboard.",
                                "type": "string"
                            },
                            "predefined_parameters": {
                                "description": "Set of parameters dependent on the dashboard type",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0,
                                "default": null
                            },
                            "id": {
                                "description": "Unique dashboard identifier.",
                                "type": "string"
                            },
                            "created_by": {
                                "description": "Indicates who created the dashboard.",
                                "type": "string",
                                "default": null
                            },
                            "updated_by": {
                                "description": "Indicates who modified the dashboard.",
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "grid",
                            "id",
                            "label",
                            "predefined_dashboard"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdIbaGraphAnnotationPropertiesRegistryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of Graph Annotation property",
                                "type": "string"
                            },
                            "probe_id": {
                                "description": "ID of probe where Graph Annotation property defined.",
                                "type": "string"
                            },
                            "stage_name": {
                                "description": "Name of probe stage where Graph Annotation property defined.",
                                "type": "string"
                            },
                            "node_id_field": {
                                "description": "Name of a property that contains a graph node ID.",
                                "type": "string"
                            },
                            "column_name": {
                                "description": "Name of a value column",
                                "type": "string"
                            },
                            "data_type": {
                                "description": "Data type of column.",
                                "type": "string"
                            },
                            "possible_values": {
                                "description": "A list of all possible discrete state values.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "column_name",
                            "data_type",
                            "name",
                            "node_id_field",
                            "probe_id",
                            "stage_name"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdIbaPredefinedDashboardsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Dashboard name.",
                                "type": "string"
                            },
                            "description": {
                                "type": "string",
                                "default": null
                            },
                            "dynamic": {
                                "description": "Indicates whether the dashboard is dynamically updating its grid",
                                "type": "boolean"
                            },
                            "autoscaling": {
                                "description": "Indicates whether the dashboard is automatically creates or removes its instances to reflect the blueprint state.",
                                "type": "boolean"
                            },
                            "probes": {
                                "description": "Predefined probes for dashboard.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {},
                                    "maxProperties": 0
                                }
                            },
                            "grid": {
                                "description": "Dashboard grid.",
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "label": {
                                                        "description": "Widget label.",
                                                        "type": "string",
                                                        "minLength": 1,
                                                        "maxLength": 120
                                                    },
                                                    "description": {
                                                        "description": "Widget description.",
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "type": {
                                                        "description": "Widget type.",
                                                        "type": "string"
                                                    },
                                                    "stage_name": {
                                                        "description": "Stage name whose data to be displayed.",
                                                        "type": "string"
                                                    },
                                                    "filter": {
                                                        "description": "Set of words that should be present in stage item properties.",
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "visible_columns": {
                                                        "description": "Columns in stage output to be displayed.",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "default": []
                                                    },
                                                    "orderby": {
                                                        "description": "Query as a string \"{field}:{ASC/DESC}\"",
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "max_items": {
                                                        "description": "The number of items to be displayed",
                                                        "type": "integer",
                                                        "minimum": 1,
                                                        "maximum": 100,
                                                        "default": 10
                                                    },
                                                    "anomalous_only": {
                                                        "description": "Show only items with anomalies.",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "show_context": {
                                                        "description": "Show context information combined from multiple stages.",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "spotlight_mode": {
                                                        "description": "Show an extended view of a single stage item.",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "data_source": {
                                                        "description": "Indicates what data source should be used for the stage: real time or time-series. The latter one can be used only when metric logging is enabled for the stage.",
                                                        "enum": [
                                                            "real_time",
                                                            "time_series"
                                                        ],
                                                        "type": "string",
                                                        "default": "real_time"
                                                    },
                                                    "time_series_duration": {
                                                        "description": "Show only last samples limited by duration in seconds.",
                                                        "type": "integer",
                                                        "minimum": 1,
                                                        "default": 86400
                                                    },
                                                    "aggregation_period": {
                                                        "description": "Accumulate samples within this period of time and show their average as a single item.",
                                                        "type": "integer",
                                                        "minimum": 0,
                                                        "default": 300
                                                    },
                                                    "aggregation_type": {
                                                        "description": "Aggregation method applied to samples for each period",
                                                        "enum": [
                                                            "all_of",
                                                            "any_of",
                                                            "average",
                                                            "last",
                                                            "max",
                                                            "min",
                                                            "none",
                                                            "unset"
                                                        ],
                                                        "type": "string",
                                                        "default": "unset"
                                                    },
                                                    "combine_graphs": {
                                                        "description": "Mode of displaying multiple graphs",
                                                        "enum": [
                                                            "linear",
                                                            "none",
                                                            "stacked"
                                                        ],
                                                        "type": "string",
                                                        "default": "none"
                                                    },
                                                    "probe_name": {
                                                        "description": "Source probe name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "label",
                                                    "probe_name",
                                                    "stage_name",
                                                    "type"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                }
                            },
                            "schema": {
                                "description": "The schema of the dashboard parameters."
                            },
                            "disabled": {
                                "description": "Dashboard is disabled.",
                                "type": "boolean"
                            },
                            "condition": {
                                "description": "Condition under which dashboard will be created.",
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "enum": [
                                            "always",
                                            "graph_function",
                                            "graph_query",
                                            "never"
                                        ],
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "properties": {
                                        "type": "object",
                                        "properties": {
                                            "remove": {
                                                "description": "Indicates whether the dashboard is automatically removed if the condition is not met anymore",
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "description",
                                    "type"
                                ]
                            }
                        },
                        "required": [
                            "autoscaling",
                            "condition",
                            "disabled",
                            "dynamic",
                            "grid",
                            "name",
                            "probes",
                            "schema"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdIbaPredefinedProbesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "title": "Predefined probe ID",
                                "type": "string"
                            },
                            "schema": {
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "description": {
                                "title": "Predefined probe description",
                                "type": "string"
                            },
                            "sections": {
                                "type": "object",
                                "additionalProperties": {
                                    "title": "Section elements",
                                    "type": "array",
                                    "items": {
                                        "title": "Section element",
                                        "type": "string"
                                    },
                                    "minItems": 1
                                }
                            },
                            "experimental": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "description",
                            "experimental",
                            "name",
                            "schema",
                            "sections"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdIbaProbesProbeIdTsWarningsStageNameResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "item_id": {
                                "description": "An identifier of the item whose request of enabling telemetry service wasn't successfully handled",
                                "type": "integer"
                            },
                            "properties": {
                                "description": "A set of item properties that identify it",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "warning": {
                                "description": "The warning alerting that the enabling of some service on some system wasn't successful",
                                "oneOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "invalid_service"
                                            },
                                            "message": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "message",
                                            "type"
                                        ],
                                        "additionalProperties": false
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "conflict"
                                            },
                                            "expected": {
                                                "$ref": "#/definitions/TypeDump35"
                                            },
                                            "actual": {
                                                "$ref": "#/definitions/TypeDump35"
                                            }
                                        },
                                        "required": [
                                            "actual",
                                            "expected",
                                            "type"
                                        ],
                                        "additionalProperties": false
                                    }
                                ]
                            }
                        },
                        "required": [
                            "item_id",
                            "properties",
                            "warning"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdLockStatusResponse": {
            "type": "object",
            "properties": {
                "lock_status": {
                    "enum": [
                        "locked",
                        "locked_by_deleted_user",
                        "unlocked"
                    ],
                    "type": "string"
                },
                "lock_type": {
                    "enum": [
                        "lock_by_changes",
                        "lock_by_user",
                        "unlocked"
                    ],
                    "type": "string",
                    "default": null
                },
                "user_id": {
                    "type": "string",
                    "default": null
                },
                "username": {
                    "type": "string",
                    "default": null
                },
                "first_name": {
                    "type": "string",
                    "default": null
                },
                "last_name": {
                    "type": "string",
                    "default": null
                },
                "possible_override": {
                    "type": "boolean",
                    "default": null
                }
            },
            "required": [
                "lock_status"
            ]
        },
        "GetApiBlueprintsBlueprintIdMetaErrorsResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "version"
            ]
        },
        "GetApiBlueprintsBlueprintIdNodesNodeIdConfigContextResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Device context for configuration rendering",
                    "type": "string"
                }
            },
            "required": [
                "context"
            ]
        },
        "GetApiBlueprintsBlueprintIdNodesNodeIdConfigRenderingResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "device configuration (arbitrary per-device format)",
                    "type": "string"
                }
            },
            "required": [
                "config"
            ]
        },
        "GetApiBlueprintsBlueprintIdNodesNodeIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "type"
            ]
        },
        "GetApiBlueprintsBlueprintIdNodesResponse": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "type"
                        ]
                    }
                }
            },
            "required": [
                "nodes"
            ]
        },
        "GetApiBlueprintsBlueprintIdPredefinedReportsReportNameResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Reference-design-specific report ID, e.g. \"device_health\"",
                    "type": "string"
                },
                "label": {
                    "description": "Short report description",
                    "type": "string"
                },
                "parameter_schema": {
                    "description": "Report parameters schema as JSON Schema",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "predefined_probe_schema": {
                    "description": "JSON Schema of data for predefined probes needed to generate a report.",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "predefined_probes": {
                    "description": "Predefined or other compatible probes available to generate the report represented as a mapping from predefined probe name to probe ID",
                    "type": "object",
                    "additionalProperties": {
                        "description": "A dictionary of available probes with timestamp for earliest data sample in MetricDB.",
                        "type": "object",
                        "maxProperties": 0
                    },
                    "default": null
                },
                "description": {
                    "description": "Report description",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "label",
                "name",
                "parameter_schema"
            ]
        },
        "GetApiBlueprintsBlueprintIdPredefinedReportsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Reference-design-specific report ID, e.g. \"device_health\"",
                                "type": "string"
                            },
                            "label": {
                                "description": "Short report description",
                                "type": "string"
                            },
                            "parameter_schema": {
                                "description": "Report parameters schema as JSON Schema",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "predefined_probe_schema": {
                                "description": "JSON Schema of data for predefined probes needed to generate a report.",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0,
                                "default": null
                            },
                            "predefined_probes": {
                                "description": "Predefined or other compatible probes available to generate the report represented as a mapping from predefined probe name to probe ID",
                                "type": "object",
                                "additionalProperties": {
                                    "description": "A dictionary of available probes with timestamp for earliest data sample in MetricDB.",
                                    "type": "object",
                                    "maxProperties": 0
                                },
                                "default": null
                            },
                            "description": {
                                "description": "Report description",
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "label",
                            "name",
                            "parameter_schema"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdPreviewConfigSummaryResponse": {
            "type": "object",
            "properties": {
                "system_section_map": {
                    "description": "Mapping between a list of system_id and config sections name",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Sections applicable for the system",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "section_snippet": {
                    "description": "A snippet-config for each section in system_section_map",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "role": {
                                "type": "object",
                                "additionalProperties": {
                                    "description": "Configuration snippet",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "required": [
                            "description",
                            "role"
                        ]
                    }
                },
                "system_roles": {
                    "description": "Mapping between system ids to its role",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rendering_errors": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "Error message",
                        "type": "string"
                    }
                }
            },
            "required": [
                "rendering_errors",
                "section_snippet",
                "system_roles",
                "system_section_map"
            ]
        },
        "GetApiBlueprintsBlueprintIdProbesProbeIdMessagesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "level": {
                                "enum": [
                                    "error",
                                    "info"
                                ],
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "processor": {
                                "type": "string"
                            },
                            "detailed_error": {
                                "$ref": "#/definitions/TypeDump34"
                            }
                        },
                        "required": [
                            "detailed_error",
                            "level",
                            "message",
                            "processor"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdProbesProbeIdResponse": {
            "description": "Represents an analytics graph which consists of a set of processors which are connected through stages. One processor can consume one or more outputs (stages) of other processor(s). Some processors, called source processors, initiate collection of telemetry data from devices. Other processors (typically perform processing) aggregate and calculation the output of input stages providing other stages.",
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name provided by a user.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Description provided by a user.",
                    "type": "string",
                    "default": ""
                },
                "disabled": {
                    "description": "When disabled, probe does not provide any data, and does not use resources.",
                    "type": "boolean",
                    "default": false
                },
                "processors": {
                    "description": "A set of processors.",
                    "type": "array",
                    "items": {
                        "description": "Represents a single step of data processing in an analytics graph.",
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of a processor",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "type": {
                                "description": "Name of a processor type.",
                                "type": "string",
                                "minLength": 1
                            },
                            "properties": {
                                "description": "Represents a set of processor specific configuration.",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "inputs": {
                                "description": "A dictionary which allows to specify names of other stages as inputs for the given stage by associating input names with the stage names, where keys are names of inputs which are defined for a particular processor type, values are names of input stages and the column names from that stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "stage": {
                                            "description": "The name of the input stage.",
                                            "type": "string"
                                        },
                                        "column": {
                                            "description": "The name of the input column.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stage"
                                    ],
                                    "additionalProperties": false
                                }
                            },
                            "outputs": {
                                "description": "A dictionary which allows to specify names of other stages as outputs for the given stage by associating output names with the stage names, where keys are names of outputs which are defined for a particular processor type, values are names of output stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "inputs",
                            "name",
                            "outputs",
                            "properties",
                            "type"
                        ],
                        "additionalProperties": false
                    }
                },
                "id": {
                    "description": "Unique probe identifier.",
                    "type": "string"
                },
                "stages": {
                    "description": "A set of stages.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of stage",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description of stage",
                                "type": "string",
                                "default": ""
                            },
                            "units": {
                                "description": "Mapping of ValueType.name to units",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "enable_metric_logging": {
                                "description": "Save changes in this stage to MetricDB time series database",
                                "type": "boolean"
                            },
                            "retention_duration": {
                                "description": "Retain data in MetricDB for specified duration in seconds",
                                "type": "integer"
                            },
                            "retention_size": {
                                "description": "Maximum allowed size, in bytes, of data to store in MetricDB",
                                "type": "integer"
                            },
                            "graph_annotation_properties": {
                                "description": "Set of annotation properties associated with graph nodes which values are stored in probe stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "node_id": {
                                            "description": "Name of a property that contains a graph node ID.",
                                            "type": "string"
                                        },
                                        "column": {
                                            "description": "Name of a value column.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "column",
                                        "node_id"
                                    ]
                                }
                            },
                            "type": {
                                "enum": [
                                    "table"
                                ],
                                "type": "string"
                            },
                            "dynamic": {
                                "description": "Indicates whether a number of series is dynamic and primarily defined by telemetry rathen than by blueprint graph",
                                "type": "boolean"
                            },
                            "keys": {
                                "description": "Set of names and types of properties.",
                                "type": "object",
                                "additionalProperties": {
                                    "enum": [
                                        "any",
                                        "bool",
                                        "float",
                                        "integer",
                                        "string"
                                    ],
                                    "type": "string"
                                }
                            },
                            "values": {
                                "description": "Set of value names and their types.",
                                "type": "object",
                                "additionalProperties": {
                                    "description": "A value column type.",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Name of a value.",
                                            "type": "string"
                                        },
                                        "title": {
                                            "description": "Displayable name of a value.",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of a value.",
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "Type of a value",
                                            "enum": [
                                                "bool",
                                                "f32",
                                                "f64",
                                                "s16",
                                                "s32",
                                                "s64",
                                                "s8",
                                                "string",
                                                "u16",
                                                "u32",
                                                "u64",
                                                "u8"
                                            ],
                                            "type": "string"
                                        },
                                        "possible_values": {
                                            "description": "A list of all possible discrete state values.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": null
                                        }
                                    },
                                    "required": [
                                        "description",
                                        "name",
                                        "title",
                                        "type"
                                    ]
                                }
                            },
                            "anomaly_count": {
                                "description": "Number of anomalies raised.",
                                "type": "integer"
                            },
                            "warnings": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "anomaly_count",
                            "dynamic",
                            "enable_metric_logging",
                            "graph_annotation_properties",
                            "keys",
                            "name",
                            "retention_duration",
                            "retention_size",
                            "type",
                            "units",
                            "values",
                            "warnings"
                        ]
                    }
                },
                "state": {
                    "description": "Actual state of a probe taking into account IBA unit task state.",
                    "enum": [
                        "configuring",
                        "error",
                        "maintenance",
                        "operational"
                    ],
                    "type": "string"
                },
                "probe_state": {
                    "type": "object",
                    "properties": {
                        "final": {
                            "$ref": "#/definitions/TypeDump33"
                        },
                        "processors_configuration": {
                            "$ref": "#/definitions/TypeDump33"
                        },
                        "pipeline": {
                            "$ref": "#/definitions/TypeDump33"
                        },
                        "telemetry_service": {
                            "$ref": "#/definitions/TypeDump33"
                        }
                    },
                    "required": [
                        "final",
                        "pipeline",
                        "processors_configuration",
                        "telemetry_service"
                    ],
                    "default": null
                },
                "last_error": {
                    "description": "Last error message of a probe, displayed only when the probe is in error state.",
                    "type": "object",
                    "properties": {
                        "level": {
                            "enum": [
                                "error",
                                "info"
                            ],
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "processor": {
                            "type": "string"
                        },
                        "detailed_error": {
                            "$ref": "#/definitions/TypeDump34"
                        }
                    },
                    "required": [
                        "detailed_error",
                        "level",
                        "message",
                        "processor"
                    ],
                    "default": null
                },
                "anomaly_count": {
                    "description": "Number of anomalies raised.",
                    "type": "integer"
                },
                "version": {
                    "description": "Configuration version.",
                    "type": "integer"
                },
                "iba_unit": {
                    "description": "IBA unit id of this probe.",
                    "type": "string"
                },
                "host_node": {
                    "description": "Cluster node id of this IBA unit.",
                    "type": "string"
                },
                "task_state": {
                    "description": "Task state of this IBA unit.",
                    "enum": [
                        "nonexistent",
                        "running",
                        "scheduled",
                        "stopped"
                    ],
                    "type": "string"
                },
                "task_error": {
                    "description": "Task error message of this IBA unit.",
                    "type": "string"
                },
                "predefined_probe": {
                    "description": "Name of the predefined probe or an empty string in case of manual modification.",
                    "type": "string"
                },
                "referencing_dashboards": {
                    "description": "A list of dashboards referencing the probe.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Dashboard ID.",
                                "type": "string"
                            },
                            "label": {
                                "description": "Dashboard label.",
                                "type": "string"
                            },
                            "predefined_dashboard": {
                                "description": "Name of the predefined dashboard or an empty string in case of manual modification or a custom dashboard.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label",
                            "predefined_dashboard"
                        ]
                    }
                },
                "created_by": {
                    "description": "Indicates who created the probe.",
                    "type": "string",
                    "default": null
                },
                "updated_by": {
                    "description": "Indicates who modified the probe.",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "anomaly_count",
                "host_node",
                "iba_unit",
                "id",
                "label",
                "predefined_probe",
                "processors",
                "referencing_dashboards",
                "stages",
                "state",
                "task_error",
                "task_state",
                "version"
            ],
            "additionalProperties": false
        },
        "GetApiBlueprintsBlueprintIdProbesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "Represents an analytics graph which consists of a set of processors which are connected through stages. One processor can consume one or more outputs (stages) of other processor(s). Some processors, called source processors, initiate collection of telemetry data from devices. Other processors (typically perform processing) aggregate and calculation the output of input stages providing other stages.",
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Name provided by a user.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "description": {
                                "description": "Description provided by a user.",
                                "type": "string",
                                "default": ""
                            },
                            "disabled": {
                                "description": "When disabled, probe does not provide any data, and does not use resources.",
                                "type": "boolean",
                                "default": false
                            },
                            "processors": {
                                "description": "A set of processors.",
                                "type": "array",
                                "items": {
                                    "description": "Represents a single step of data processing in an analytics graph.",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Name of a processor",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "type": {
                                            "description": "Name of a processor type.",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "properties": {
                                            "description": "Represents a set of processor specific configuration.",
                                            "type": "object",
                                            "additionalProperties": {},
                                            "maxProperties": 0
                                        },
                                        "inputs": {
                                            "description": "A dictionary which allows to specify names of other stages as inputs for the given stage by associating input names with the stage names, where keys are names of inputs which are defined for a particular processor type, values are names of input stages and the column names from that stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "stage": {
                                                        "description": "The name of the input stage.",
                                                        "type": "string"
                                                    },
                                                    "column": {
                                                        "description": "The name of the input column.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "stage"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "outputs": {
                                            "description": "A dictionary which allows to specify names of other stages as outputs for the given stage by associating output names with the stage names, where keys are names of outputs which are defined for a particular processor type, values are names of output stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": [
                                        "inputs",
                                        "name",
                                        "outputs",
                                        "properties",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                }
                            },
                            "id": {
                                "description": "Unique probe identifier.",
                                "type": "string"
                            },
                            "stages": {
                                "description": "A set of stages.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Name of stage",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Description of stage",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "units": {
                                            "description": "Mapping of ValueType.name to units",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        },
                                        "enable_metric_logging": {
                                            "description": "Save changes in this stage to MetricDB time series database",
                                            "type": "boolean"
                                        },
                                        "retention_duration": {
                                            "description": "Retain data in MetricDB for specified duration in seconds",
                                            "type": "integer"
                                        },
                                        "retention_size": {
                                            "description": "Maximum allowed size, in bytes, of data to store in MetricDB",
                                            "type": "integer"
                                        },
                                        "graph_annotation_properties": {
                                            "description": "Set of annotation properties associated with graph nodes which values are stored in probe stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "node_id": {
                                                        "description": "Name of a property that contains a graph node ID.",
                                                        "type": "string"
                                                    },
                                                    "column": {
                                                        "description": "Name of a value column.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "column",
                                                    "node_id"
                                                ]
                                            }
                                        },
                                        "type": {
                                            "enum": [
                                                "table"
                                            ],
                                            "type": "string"
                                        },
                                        "dynamic": {
                                            "description": "Indicates whether a number of series is dynamic and primarily defined by telemetry rathen than by blueprint graph",
                                            "type": "boolean"
                                        },
                                        "keys": {
                                            "description": "Set of names and types of properties.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "enum": [
                                                    "any",
                                                    "bool",
                                                    "float",
                                                    "integer",
                                                    "string"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "values": {
                                            "description": "Set of value names and their types.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "A value column type.",
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name of a value.",
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "description": "Displayable name of a value.",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Description of a value.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Type of a value",
                                                        "enum": [
                                                            "bool",
                                                            "f32",
                                                            "f64",
                                                            "s16",
                                                            "s32",
                                                            "s64",
                                                            "s8",
                                                            "string",
                                                            "u16",
                                                            "u32",
                                                            "u64",
                                                            "u8"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "possible_values": {
                                                        "description": "A list of all possible discrete state values.",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "default": null
                                                    }
                                                },
                                                "required": [
                                                    "description",
                                                    "name",
                                                    "title",
                                                    "type"
                                                ]
                                            }
                                        },
                                        "anomaly_count": {
                                            "description": "Number of anomalies raised.",
                                            "type": "integer"
                                        },
                                        "warnings": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "anomaly_count",
                                        "dynamic",
                                        "enable_metric_logging",
                                        "graph_annotation_properties",
                                        "keys",
                                        "name",
                                        "retention_duration",
                                        "retention_size",
                                        "type",
                                        "units",
                                        "values",
                                        "warnings"
                                    ]
                                }
                            },
                            "state": {
                                "description": "Actual state of a probe taking into account IBA unit task state.",
                                "enum": [
                                    "configuring",
                                    "error",
                                    "maintenance",
                                    "operational"
                                ],
                                "type": "string"
                            },
                            "probe_state": {
                                "type": "object",
                                "properties": {
                                    "final": {
                                        "$ref": "#/definitions/TypeDump33"
                                    },
                                    "processors_configuration": {
                                        "$ref": "#/definitions/TypeDump33"
                                    },
                                    "pipeline": {
                                        "$ref": "#/definitions/TypeDump33"
                                    },
                                    "telemetry_service": {
                                        "$ref": "#/definitions/TypeDump33"
                                    }
                                },
                                "required": [
                                    "final",
                                    "pipeline",
                                    "processors_configuration",
                                    "telemetry_service"
                                ],
                                "default": null
                            },
                            "last_error": {
                                "description": "Last error message of a probe, displayed only when the probe is in error state.",
                                "type": "object",
                                "properties": {
                                    "level": {
                                        "enum": [
                                            "error",
                                            "info"
                                        ],
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "processor": {
                                        "type": "string"
                                    },
                                    "detailed_error": {
                                        "$ref": "#/definitions/TypeDump34"
                                    }
                                },
                                "required": [
                                    "detailed_error",
                                    "level",
                                    "message",
                                    "processor"
                                ],
                                "default": null
                            },
                            "anomaly_count": {
                                "description": "Number of anomalies raised.",
                                "type": "integer"
                            },
                            "version": {
                                "description": "Configuration version.",
                                "type": "integer"
                            },
                            "iba_unit": {
                                "description": "IBA unit id of this probe.",
                                "type": "string"
                            },
                            "host_node": {
                                "description": "Cluster node id of this IBA unit.",
                                "type": "string"
                            },
                            "task_state": {
                                "description": "Task state of this IBA unit.",
                                "enum": [
                                    "nonexistent",
                                    "running",
                                    "scheduled",
                                    "stopped"
                                ],
                                "type": "string"
                            },
                            "task_error": {
                                "description": "Task error message of this IBA unit.",
                                "type": "string"
                            },
                            "predefined_probe": {
                                "description": "Name of the predefined probe or an empty string in case of manual modification.",
                                "type": "string"
                            },
                            "referencing_dashboards": {
                                "description": "A list of dashboards referencing the probe.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Dashboard ID.",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "Dashboard label.",
                                            "type": "string"
                                        },
                                        "predefined_dashboard": {
                                            "description": "Name of the predefined dashboard or an empty string in case of manual modification or a custom dashboard.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "label",
                                        "predefined_dashboard"
                                    ]
                                }
                            },
                            "created_by": {
                                "description": "Indicates who created the probe.",
                                "type": "string",
                                "default": null
                            },
                            "updated_by": {
                                "description": "Indicates who modified the probe.",
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "anomaly_count",
                            "host_node",
                            "iba_unit",
                            "id",
                            "label",
                            "predefined_probe",
                            "processors",
                            "referencing_dashboards",
                            "stages",
                            "state",
                            "task_error",
                            "task_state",
                            "version"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdRelationshipsRelationshipIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "target_id": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "source_id",
                "target_id",
                "type"
            ]
        },
        "GetApiBlueprintsBlueprintIdRelationshipsResponse": {
            "type": "object",
            "properties": {
                "relationships": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "source_id": {
                                "type": "string"
                            },
                            "target_id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "source_id",
                            "target_id",
                            "type"
                        ]
                    }
                }
            },
            "required": [
                "relationships"
            ]
        },
        "GetApiBlueprintsBlueprintIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string",
                    "default": null
                },
                "version": {
                    "type": "integer"
                },
                "source_versions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "default": null
                },
                "last_modified_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "design": {
                    "type": "string"
                },
                "nodes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "type"
                        ]
                    }
                },
                "relationships": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "source_id": {
                                "type": "string"
                            },
                            "target_id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "source_id",
                            "target_id",
                            "type"
                        ]
                    }
                }
            },
            "required": [
                "design",
                "id",
                "last_modified_at",
                "nodes",
                "relationships",
                "version"
            ]
        },
        "GetApiBlueprintsBlueprintIdRevisionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "revision_id": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "user": {
                                "description": "Username of the AOS user who first deploys this revision",
                                "type": "string"
                            },
                            "user_ip": {
                                "description": "IP of the AOS user who first deploys this revision",
                                "type": "string"
                            },
                            "description": {
                                "description": "Message entered by user when saving this revision         permanently",
                                "type": "string",
                                "maxLength": 4094
                            },
                            "user_saved": {
                                "description": "True if this revision is saved permanently by a user",
                                "type": "boolean"
                            },
                            "auto_saved": {
                                "description": "True if this revision is recent and should not be deleted",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "auto_saved",
                            "created_at",
                            "description",
                            "revision_id",
                            "user",
                            "user_ip",
                            "user_saved"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdRevisionsUserConfigResponse": {
            "type": "object",
            "properties": {
                "max_user_saved_revisions": {
                    "description": "Maximum number of user saved revisions",
                    "type": "integer"
                },
                "max_most_recent_revisions": {
                    "description": "Maximum number of revisions automatically saved by AOS",
                    "type": "integer"
                }
            },
            "required": [
                "max_most_recent_revisions",
                "max_user_saved_revisions"
            ]
        },
        "GetApiBlueprintsBlueprintIdSearchMetadataResponse": {
            "type": "object",
            "properties": {
                "document_types": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "schema": {
                                            "description": "JSON schema for the field type"
                                        },
                                        "weight": {
                                            "description": "Weight is a field metadata that influence that score when this field matches the query expression. The bigger the weight the bigger the score",
                                            "type": "number"
                                        },
                                        "reference": {
                                            "description": "Type of the document that this field refers to",
                                            "type": "string",
                                            "default": null
                                        }
                                    },
                                    "required": [
                                        "schema",
                                        "weight"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "fields"
                        ]
                    }
                }
            },
            "required": [
                "document_types"
            ]
        },
        "GetApiBlueprintsBlueprintIdSystemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "DeviceStatus",
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Id of system (as used in API)",
                                "type": "string",
                                "minLength": 4
                            },
                            "services": {
                                "description": "List of services available on this device",
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "arp",
                                        "bgp",
                                        "configuration",
                                        "hostname",
                                        "interface",
                                        "lag",
                                        "lldp",
                                        "mac",
                                        "mlag",
                                        "route",
                                        "xcvr"
                                    ],
                                    "type": "string"
                                }
                            },
                            "system_id": {
                                "description": "System name such as serial number",
                                "type": "string",
                                "minLength": 4
                            }
                        },
                        "required": [
                            "id",
                            "services",
                            "system_id"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdSystemsSystemIdCommitCheckResultResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "enum": [
                        "failure",
                        "pending",
                        "rejected",
                        "success",
                        "timeout",
                        "unavailable",
                        "unknown",
                        "unloadable",
                        "unsupported"
                    ],
                    "type": "string"
                },
                "config_string": {
                    "description": "Configuration string that was tested against device",
                    "type": "string",
                    "default": null
                },
                "diff_string": {
                    "description": "Diff of configuration against existing device configuration.",
                    "type": "string",
                    "default": null
                },
                "error": {
                    "description": "(Optional) Errors emitted during commit-check against device",
                    "type": "string",
                    "default": null
                },
                "source": {
                    "enum": [
                        "staging_graph",
                        "user_supplied"
                    ],
                    "type": "string"
                },
                "blueprint_id": {
                    "description": "Blueprint ID of device",
                    "type": "string",
                    "default": null
                },
                "blueprint_version": {
                    "type": "integer",
                    "minimum": 0,
                    "default": null
                },
                "validity": {
                    "enum": [
                        "fresh",
                        "stale",
                        "unknown"
                    ],
                    "type": "string",
                    "default": null
                },
                "finished_at": {
                    "description": "Time at which this commit-check result was finished",
                    "type": "string",
                    "format": "date-time",
                    "default": null
                }
            },
            "required": [
                "source",
                "state"
            ]
        },
        "GetApiBlueprintsBlueprintIdTasksResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "By default response schema contains only url and method information. With parameter \"mode\" set to \"full\" request_data will be extended by \"data\" field",
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump1"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump2"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump3"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump4"
                                    },
                                    "config_last_updated_at": {
                                        "$ref": "#/definitions/TypeDump5"
                                    },
                                    "last_updated_at": {
                                        "$ref": "#/definitions/TypeDump6"
                                    },
                                    "user_name": {
                                        "$ref": "#/definitions/TypeDump7"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump8"
                                    },
                                    "user_id": {
                                        "$ref": "#/definitions/TypeDump9"
                                    },
                                    "begin_at": {
                                        "$ref": "#/definitions/TypeDump10"
                                    },
                                    "request_data": {
                                        "description": "The original request details.",
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "$ref": "#/definitions/TypeDump11"
                                            },
                                            "method": {
                                                "$ref": "#/definitions/TypeDump12"
                                            }
                                        },
                                        "required": [
                                            "method",
                                            "url"
                                        ]
                                    }
                                },
                                "required": [
                                    "config_last_updated_at",
                                    "created_at",
                                    "id",
                                    "request_data",
                                    "status",
                                    "type"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump1"
                                    },
                                    "type": {
                                        "$ref": "#/definitions/TypeDump2"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump3"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump4"
                                    },
                                    "config_last_updated_at": {
                                        "$ref": "#/definitions/TypeDump5"
                                    },
                                    "last_updated_at": {
                                        "$ref": "#/definitions/TypeDump6"
                                    },
                                    "user_name": {
                                        "$ref": "#/definitions/TypeDump7"
                                    },
                                    "user_ip": {
                                        "$ref": "#/definitions/TypeDump8"
                                    },
                                    "user_id": {
                                        "$ref": "#/definitions/TypeDump9"
                                    },
                                    "begin_at": {
                                        "$ref": "#/definitions/TypeDump10"
                                    },
                                    "request_data": {
                                        "type": "object",
                                        "properties": {
                                            "url": {
                                                "$ref": "#/definitions/TypeDump11"
                                            },
                                            "method": {
                                                "$ref": "#/definitions/TypeDump12"
                                            },
                                            "data": {
                                                "default": null
                                            }
                                        },
                                        "required": [
                                            "method",
                                            "url"
                                        ]
                                    }
                                },
                                "required": [
                                    "config_last_updated_at",
                                    "created_at",
                                    "id",
                                    "request_data",
                                    "status",
                                    "type"
                                ]
                            }
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiBlueprintsBlueprintIdTasksTaskIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/TypeDump1"
                },
                "type": {
                    "$ref": "#/definitions/TypeDump2"
                },
                "status": {
                    "$ref": "#/definitions/TypeDump3"
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump4"
                },
                "config_last_updated_at": {
                    "$ref": "#/definitions/TypeDump5"
                },
                "last_updated_at": {
                    "$ref": "#/definitions/TypeDump6"
                },
                "user_name": {
                    "$ref": "#/definitions/TypeDump7"
                },
                "user_ip": {
                    "$ref": "#/definitions/TypeDump8"
                },
                "user_id": {
                    "$ref": "#/definitions/TypeDump9"
                },
                "begin_at": {
                    "$ref": "#/definitions/TypeDump10"
                },
                "request_data": {
                    "type": "object",
                    "properties": {
                        "url": {
                            "$ref": "#/definitions/TypeDump11"
                        },
                        "method": {
                            "$ref": "#/definitions/TypeDump12"
                        },
                        "data": {
                            "default": null
                        },
                        "headers": {
                            "type": "object",
                            "additionalProperties": {},
                            "maxProperties": 0,
                            "default": null
                        },
                        "args": {
                            "description": "The parsed URL parameters.",
                            "type": "object",
                            "additionalProperties": {},
                            "maxProperties": 0,
                            "default": null
                        }
                    },
                    "required": [
                        "method",
                        "url"
                    ]
                },
                "detailed_status": {
                    "description": "Details on API response and errors for the given task.",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                }
            },
            "required": [
                "config_last_updated_at",
                "created_at",
                "id",
                "request_data",
                "status",
                "type"
            ]
        },
        "GetApiBlueprintsBlueprintIdTelemetryProcessorsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of a processor type.",
                                "type": "string"
                            },
                            "description": {
                                "title": "Processor description",
                                "type": "string"
                            },
                            "label": {
                                "title": "Processor label",
                                "type": "string"
                            },
                            "inputs": {
                                "description": "Mapping from possible input names to a list of their acceptable input types.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "types": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TypeDump36"
                                            }
                                        },
                                        "required": {
                                            "type": "boolean"
                                        },
                                        "allow_column_wildcard": {
                                            "description": "Indicates whether a processor can be configured to consume all value columns from an input stage on the input by specifying `column=\"*\"` instead of consuming just one specific value column.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "description": {
                                            "type": "string",
                                            "default": null
                                        }
                                    },
                                    "required": [
                                        "required",
                                        "types"
                                    ]
                                }
                            },
                            "outputs": {
                                "description": "Mapping from possible output names to a list of their possible output types. Processors can calculate output types, their keys and possible values based on configuration parameters or inputs types, so the actual output types will be determined during creation of a probe.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "types": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TypeDump36"
                                            }
                                        },
                                        "required": {
                                            "type": "boolean"
                                        },
                                        "description": {
                                            "type": "string",
                                            "default": null
                                        }
                                    },
                                    "required": [
                                        "required",
                                        "types"
                                    ]
                                }
                            },
                            "schema": {
                                "description": "Description of properties in the JSON Schema format."
                            },
                            "property_categories": {
                                "description": "Categories of properties described in the schema.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "category": {
                                "description": "Categorizes processor by its purpose",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "examples": {
                                "description": "Simplified examples of the processor use cases provided only for illustration purposes for better understanding of how it functions.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "inputs": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "$ref": "#/definitions/TypeDump37"
                                            }
                                        },
                                        "outputs": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "$ref": "#/definitions/TypeDump37"
                                            }
                                        },
                                        "properties": {
                                            "type": "object",
                                            "additionalProperties": {},
                                            "maxProperties": 0
                                        }
                                    },
                                    "required": [
                                        "inputs",
                                        "name",
                                        "outputs",
                                        "properties"
                                    ],
                                    "additionalProperties": false
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "category",
                            "description",
                            "inputs",
                            "label",
                            "name",
                            "outputs",
                            "property_categories",
                            "schema"
                        ]
                    }
                },
                "categories": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "subcategories": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "description",
                                        "label",
                                        "name"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "description",
                            "label",
                            "name",
                            "subcategories"
                        ]
                    }
                }
            },
            "required": [
                "categories",
                "items"
            ]
        },
        "GetApiBlueprintsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string",
                                "default": null
                            },
                            "design": {
                                "type": "string"
                            },
                            "last_modified_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "version": {
                                "type": "integer"
                            },
                            "anomaly_counts": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer"
                                },
                                "default": null
                            },
                            "deployment_status": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "num_succeeded": {
                                            "type": "integer"
                                        },
                                        "num_failed": {
                                            "type": "integer"
                                        },
                                        "num_pending": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "num_failed",
                                        "num_pending",
                                        "num_succeeded"
                                    ]
                                },
                                "default": null
                            },
                            "deploy_modes_summary": {
                                "type": "object",
                                "properties": {
                                    "deploy": {
                                        "type": "integer"
                                    },
                                    "ready": {
                                        "type": "integer"
                                    },
                                    "drain": {
                                        "type": "integer"
                                    },
                                    "undeploy": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "deploy",
                                    "drain",
                                    "ready",
                                    "undeploy"
                                ],
                                "default": null
                            },
                            "status": {
                                "description": "\"created\" - blueprint has been successfully created.\"scaffolding\" - blueprint is currently being created.\"failed\" - blueprint creation has failed.\"",
                                "enum": [
                                    "created",
                                    "failed",
                                    "scaffolding"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "errors": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": {},
                                        "maxProperties": 0
                                    }
                                ],
                                "default": null
                            },
                            "build_errors_count": {
                                "type": "integer",
                                "default": null
                            },
                            "build_warnings_count": {
                                "type": "integer",
                                "default": null
                            },
                            "has_uncommitted_changes": {
                                "type": "boolean",
                                "default": null
                            },
                            "deployed_config_line_count": {
                                "description": "Total number of golden config lines across all devices in blueprint",
                                "type": "integer",
                                "default": null
                            }
                        },
                        "required": [
                            "design",
                            "id",
                            "last_modified_at",
                            "version"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiChassisProfilesIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Chassis Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the chassis profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "dual_routing_engine": {
                    "$ref": "#/definitions/TypeDump64"
                },
                "physical_device": {
                    "$ref": "#/definitions/TypeDump65"
                },
                "selector": {
                    "$ref": "#/definitions/TypeDump66"
                },
                "hardware_capabilities": {
                    "$ref": "#/definitions/TypeDump68"
                },
                "software_capabilities": {
                    "$ref": "#/definitions/TypeDump69"
                },
                "reference_design_capabilities": {
                    "$ref": "#/definitions/TypeDump67",
                    "default": {
                        "datacenter": "full_support",
                        "freeform": "full_support"
                    }
                },
                "linecard_slot_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "minItems": 1,
                    "uniqueItems": true
                }
            },
            "required": [
                "created_at",
                "hardware_capabilities",
                "label",
                "last_modified_at",
                "linecard_slot_ids",
                "selector",
                "software_capabilities"
            ]
        },
        "GetApiChassisProfilesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Human friendly name for the Chassis Profile as read on UI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "predefined": {
                                "description": "Indicates whether the chassis profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                                "type": "boolean",
                                "default": false
                            },
                            "dual_routing_engine": {
                                "$ref": "#/definitions/TypeDump64"
                            },
                            "physical_device": {
                                "$ref": "#/definitions/TypeDump65"
                            },
                            "selector": {
                                "$ref": "#/definitions/TypeDump66"
                            },
                            "hardware_capabilities": {
                                "$ref": "#/definitions/TypeDump68"
                            },
                            "software_capabilities": {
                                "$ref": "#/definitions/TypeDump69"
                            },
                            "reference_design_capabilities": {
                                "$ref": "#/definitions/TypeDump67",
                                "default": {
                                    "datacenter": "full_support",
                                    "freeform": "full_support"
                                }
                            },
                            "linecard_slot_ids": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "minItems": 1,
                                "uniqueItems": true
                            }
                        },
                        "required": [
                            "created_at",
                            "hardware_capabilities",
                            "label",
                            "last_modified_at",
                            "linecard_slot_ids",
                            "selector",
                            "software_capabilities"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiClusterApstraEdgeResponse": {
            "type": "object",
            "properties": {
                "registration_key": {
                    "type": "string",
                    "default": null
                },
                "cloud_term": {
                    "type": "string",
                    "default": null
                },
                "image_name": {
                    "type": "string",
                    "default": null
                },
                "cpus": {
                    "description": "Specify how much of the available CPU resources a container can use.",
                    "type": "number",
                    "minimum": 0.0,
                    "default": 0.5
                },
                "cpu_shares": {
                    "description": "Set this to a value greater or less than the default of 1024 to increase or reduce the container's weight, and give it access to a greater or lesser proportion of the host machine's CPU cycles.",
                    "type": "integer",
                    "minimum": 2,
                    "default": 1024
                },
                "memory_limit": {
                    "type": "string",
                    "default": null
                },
                "environment_variables": {
                    "description": "Environment variables for the Apstra Edge container.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": {}
                },
                "state": {
                    "description": "State of the container launched",
                    "enum": [
                        "failed",
                        "launched",
                        "queued"
                    ],
                    "type": "string",
                    "default": null
                },
                "start_count": {
                    "description": "Number of times the container was started",
                    "type": "integer",
                    "default": null
                },
                "status": {
                    "description": "More detailed container state, e.g. restarting or paused.",
                    "type": "string",
                    "default": null
                },
                "error_message": {
                    "description": "Error message if present.",
                    "type": "string",
                    "default": null
                }
            },
            "additionalProperties": false
        },
        "GetApiClusterLicensesLicenseIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "License Identifier",
                    "type": "string",
                    "minLength": 1
                },
                "license_key": {
                    "description": "Juniper Apstra license key",
                    "type": "string",
                    "minLength": 1
                },
                "feature_name": {
                    "description": "Type of license installed",
                    "enum": [
                        "Apstra_Advanced",
                        "Apstra_Premium",
                        "Apstra_Standard",
                        "Apstra_VMware"
                    ],
                    "type": "string"
                },
                "feature_id": {
                    "description": "Unique license type Identifier",
                    "type": "integer",
                    "minimum": 8001,
                    "maximum": 8004
                },
                "feature_description": {
                    "description": "Information on installed license type",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "feature_description",
                "feature_id",
                "feature_name",
                "id",
                "license_key"
            ]
        },
        "GetApiClusterLicensesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "License Identifier",
                                "type": "string",
                                "minLength": 1
                            },
                            "license_key": {
                                "description": "Juniper Apstra license key",
                                "type": "string",
                                "minLength": 1
                            },
                            "feature_name": {
                                "description": "Type of license installed",
                                "enum": [
                                    "Apstra_Advanced",
                                    "Apstra_Premium",
                                    "Apstra_Standard",
                                    "Apstra_VMware"
                                ],
                                "type": "string"
                            },
                            "feature_id": {
                                "description": "Unique license type Identifier",
                                "type": "integer",
                                "minimum": 8001,
                                "maximum": 8004
                            },
                            "feature_description": {
                                "description": "Information on installed license type",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "feature_description",
                            "feature_id",
                            "feature_name",
                            "id",
                            "license_key"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiClusterNodesNodeIdContainersContainerNameResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the container",
                    "type": "string"
                },
                "task_id": {
                    "description": "ID of the task containing the container",
                    "type": "string"
                },
                "state": {
                    "description": "State of the container launched",
                    "enum": [
                        "failed",
                        "launched",
                        "queued"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Application hosted by the container",
                    "enum": [
                        "AOS_BASE",
                        "apstra_edge",
                        "iba",
                        "offbox"
                    ],
                    "type": "string"
                },
                "cpu_usage": {
                    "description": "CPU usage of the container",
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "number"
                        },
                        "system": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "system",
                        "user"
                    ]
                },
                "memory_usage": {
                    "description": "Memory usage of the container in MB",
                    "type": "integer"
                },
                "debug_mode": {
                    "description": "Show container troubleshooting mode status",
                    "enum": [
                        "disabled",
                        "enabled"
                    ],
                    "type": "string",
                    "default": null
                },
                "cumulative_file_size": {
                    "description": "Cumulative size of all log files in the container in MB",
                    "type": "number"
                },
                "files": {
                    "description": "Information of files in the container in bytes",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "size": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "name",
                            "size"
                        ]
                    }
                },
                "agents": {
                    "description": "Information on the agents running is the container",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "start_time": {
                                "type": "string"
                            },
                            "cpu_usage": {
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "number"
                                    },
                                    "system": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "system",
                                    "user"
                                ]
                            },
                            "memory_usage": {
                                "description": "Memory usage of the agent in MB",
                                "type": "number"
                            },
                            "is_rebooted": {
                                "type": "boolean"
                            },
                            "is_alive": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "cpu_usage",
                            "is_alive",
                            "is_rebooted",
                            "memory_usage",
                            "name",
                            "start_time"
                        ]
                    }
                },
                "start_count": {
                    "description": "Number of times the container was started",
                    "type": "integer"
                }
            },
            "required": [
                "agents",
                "cpu_usage",
                "cumulative_file_size",
                "files",
                "memory_usage",
                "name",
                "start_count",
                "state",
                "task_id",
                "type"
            ]
        },
        "GetApiClusterNodesNodeIdErrorsResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "State of the AOS cluster node",
                    "enum": [
                        "active",
                        "failed",
                        "init",
                        "maintenance",
                        "missing"
                    ],
                    "type": "string"
                },
                "errors": {
                    "description": "Node errors based on system utilization",
                    "type": "array",
                    "items": {
                        "enum": [
                            "agent_missing",
                            "agent_reboot",
                            "disk_in_read_only_mode",
                            "disk_usage_threshold"
                        ],
                        "type": "string"
                    }
                }
            },
            "required": [
                "errors",
                "state"
            ]
        },
        "GetApiClusterNodesNodeIdResponse": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of the container",
                                "type": "string"
                            },
                            "task_id": {
                                "description": "ID of the task containing the container",
                                "type": "string"
                            },
                            "state": {
                                "description": "State of the container launched",
                                "enum": [
                                    "failed",
                                    "launched",
                                    "queued"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "Application hosted by the container",
                                "enum": [
                                    "AOS_BASE",
                                    "apstra_edge",
                                    "iba",
                                    "offbox"
                                ],
                                "type": "string"
                            },
                            "cpu_usage": {
                                "description": "CPU usage of the container",
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "number"
                                    },
                                    "system": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "system",
                                    "user"
                                ]
                            },
                            "memory_usage": {
                                "description": "Memory usage of the container in MB",
                                "type": "integer"
                            },
                            "debug_mode": {
                                "description": "Show container troubleshooting mode status",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "cumulative_file_size": {
                                "description": "Cumulative size of all log files in the container in MB",
                                "type": "number"
                            },
                            "files": {
                                "description": "Information of files in the container in bytes",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "size"
                                    ]
                                }
                            },
                            "agents": {
                                "description": "Information on the agents running is the container",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "start_time": {
                                            "type": "string"
                                        },
                                        "cpu_usage": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "number"
                                                },
                                                "system": {
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "system",
                                                "user"
                                            ]
                                        },
                                        "memory_usage": {
                                            "description": "Memory usage of the agent in MB",
                                            "type": "number"
                                        },
                                        "is_rebooted": {
                                            "type": "boolean"
                                        },
                                        "is_alive": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "cpu_usage",
                                        "is_alive",
                                        "is_rebooted",
                                        "memory_usage",
                                        "name",
                                        "start_time"
                                    ]
                                }
                            },
                            "start_count": {
                                "description": "Number of times the container was started",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "agents",
                            "cpu_usage",
                            "cumulative_file_size",
                            "files",
                            "memory_usage",
                            "name",
                            "start_count",
                            "state",
                            "task_id",
                            "type"
                        ]
                    }
                },
                "id": {
                    "description": "ID of the AOS cluster node",
                    "type": "string"
                },
                "numeric_id": {
                    "description": "Numeric ID of the AOS cluster node",
                    "type": "integer"
                },
                "label": {
                    "description": "Name of the AOS cluster node",
                    "type": "string"
                },
                "address": {
                    "description": "IP address or FQDN of the cluster node",
                    "type": "string",
                    "minLength": 1
                },
                "state": {
                    "description": "State of the AOS cluster node",
                    "enum": [
                        "active",
                        "failed",
                        "init",
                        "maintenance",
                        "missing"
                    ],
                    "type": "string"
                },
                "cpu": {
                    "description": "Number of cores in AOS cluster node",
                    "type": "integer"
                },
                "roles": {
                    "description": "Roles of the cluster node",
                    "type": "array",
                    "items": {
                        "enum": [
                            "controller",
                            "worker"
                        ],
                        "type": "string"
                    }
                },
                "tags": {
                    "description": "Tags applicable for the cluster node",
                    "type": "array",
                    "items": {
                        "enum": [
                            "iba",
                            "offbox"
                        ],
                        "type": "string"
                    }
                },
                "capacity_score": {
                    "description": "Score of the cluster node based on capacity",
                    "type": "integer"
                },
                "num_containers": {
                    "description": "Number of containers running in AOS cluster node",
                    "type": "integer"
                },
                "utilization": {
                    "description": "Percentage of total capacity used by task containers",
                    "type": "number"
                },
                "cpu_usage": {
                    "description": "CPU usage percentage of the node",
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "number"
                        },
                        "system": {
                            "type": "number"
                        },
                        "idle": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "idle",
                        "system",
                        "user"
                    ]
                },
                "memory_usage": {
                    "description": "Memory usage of the node in GB",
                    "type": "object",
                    "properties": {
                        "used": {
                            "type": "number"
                        },
                        "total": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "total",
                        "used"
                    ]
                },
                "disk_usage": {
                    "description": "Disk usage of the node in GB",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "used": {
                                "type": "number"
                            },
                            "total": {
                                "type": "number"
                            },
                            "mode": {
                                "enum": [
                                    "read_only",
                                    "read_write"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "mode",
                            "name",
                            "total",
                            "used"
                        ]
                    }
                },
                "file_registry_usage": {
                    "description": "File registry utilization information",
                    "type": "object",
                    "properties": {
                        "metricdb": {
                            "type": "object",
                            "properties": {
                                "directory": {
                                    "type": "array",
                                    "items": {
                                        "description": "File registry directory usage in bytes",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "size"
                                        ]
                                    }
                                },
                                "file": {
                                    "type": "array",
                                    "items": {
                                        "description": "File registry file usage in bytes",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "size"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "directory",
                                "file"
                            ]
                        },
                        "device_configs": {
                            "type": "object",
                            "properties": {
                                "directory": {
                                    "type": "array",
                                    "items": {
                                        "description": "File registry directory usage in bytes",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "size"
                                        ]
                                    }
                                },
                                "file": {
                                    "type": "array",
                                    "items": {
                                        "description": "File registry file usage in bytes",
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "size"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "directory",
                                "file"
                            ]
                        }
                    },
                    "required": [
                        "device_configs",
                        "metricdb"
                    ]
                },
                "errors": {
                    "description": "Node errors based on system utilization",
                    "type": "array",
                    "items": {
                        "enum": [
                            "agent_missing",
                            "agent_reboot",
                            "disk_in_read_only_mode",
                            "disk_usage_threshold"
                        ],
                        "type": "string"
                    }
                },
                "configuration_error": {
                    "description": "Configuration errors for the AOS Cluster node",
                    "type": "string"
                },
                "application_summary": {
                    "type": "object",
                    "properties": {
                        "offbox": {
                            "$ref": "#/definitions/TypeDump31"
                        },
                        "iba": {
                            "$ref": "#/definitions/TypeDump31"
                        },
                        "apstra_edge": {
                            "$ref": "#/definitions/TypeDump31"
                        }
                    },
                    "required": [
                        "apstra_edge",
                        "iba",
                        "offbox"
                    ]
                }
            },
            "required": [
                "address",
                "application_summary",
                "capacity_score",
                "configuration_error",
                "containers",
                "cpu",
                "cpu_usage",
                "disk_usage",
                "errors",
                "file_registry_usage",
                "id",
                "label",
                "memory_usage",
                "num_containers",
                "numeric_id",
                "roles",
                "state",
                "tags",
                "utilization"
            ]
        },
        "GetApiClusterNodesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of the AOS cluster node",
                                "type": "string"
                            },
                            "numeric_id": {
                                "description": "Numeric ID of the AOS cluster node",
                                "type": "integer"
                            },
                            "label": {
                                "description": "Name of the AOS cluster node",
                                "type": "string"
                            },
                            "address": {
                                "description": "IP address or FQDN of the cluster node",
                                "type": "string",
                                "minLength": 1
                            },
                            "state": {
                                "description": "State of the AOS cluster node",
                                "enum": [
                                    "active",
                                    "failed",
                                    "init",
                                    "maintenance",
                                    "missing"
                                ],
                                "type": "string"
                            },
                            "cpu": {
                                "description": "Number of cores in AOS cluster node",
                                "type": "integer"
                            },
                            "roles": {
                                "description": "Roles of the cluster node",
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "controller",
                                        "worker"
                                    ],
                                    "type": "string"
                                }
                            },
                            "tags": {
                                "description": "Tags applicable for the cluster node",
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "iba",
                                        "offbox"
                                    ],
                                    "type": "string"
                                }
                            },
                            "capacity_score": {
                                "description": "Score of the cluster node based on capacity",
                                "type": "integer"
                            },
                            "num_containers": {
                                "description": "Number of containers running in AOS cluster node",
                                "type": "integer"
                            },
                            "utilization": {
                                "description": "Percentage of total capacity used by task containers",
                                "type": "number"
                            },
                            "cpu_usage": {
                                "description": "CPU usage percentage of the node",
                                "type": "object",
                                "properties": {
                                    "user": {
                                        "type": "number"
                                    },
                                    "system": {
                                        "type": "number"
                                    },
                                    "idle": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "idle",
                                    "system",
                                    "user"
                                ]
                            },
                            "memory_usage": {
                                "description": "Memory usage of the node in GB",
                                "type": "object",
                                "properties": {
                                    "used": {
                                        "type": "number"
                                    },
                                    "total": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "total",
                                    "used"
                                ]
                            },
                            "disk_usage": {
                                "description": "Disk usage of the node in GB",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "used": {
                                            "type": "number"
                                        },
                                        "total": {
                                            "type": "number"
                                        },
                                        "mode": {
                                            "enum": [
                                                "read_only",
                                                "read_write"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "mode",
                                        "name",
                                        "total",
                                        "used"
                                    ]
                                }
                            },
                            "file_registry_usage": {
                                "description": "File registry utilization information",
                                "type": "object",
                                "properties": {
                                    "metricdb": {
                                        "type": "object",
                                        "properties": {
                                            "directory": {
                                                "type": "array",
                                                "items": {
                                                    "description": "File registry directory usage in bytes",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "size"
                                                    ]
                                                }
                                            },
                                            "file": {
                                                "type": "array",
                                                "items": {
                                                    "description": "File registry file usage in bytes",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "size"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "directory",
                                            "file"
                                        ]
                                    },
                                    "device_configs": {
                                        "type": "object",
                                        "properties": {
                                            "directory": {
                                                "type": "array",
                                                "items": {
                                                    "description": "File registry directory usage in bytes",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "size"
                                                    ]
                                                }
                                            },
                                            "file": {
                                                "type": "array",
                                                "items": {
                                                    "description": "File registry file usage in bytes",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "size"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "directory",
                                            "file"
                                        ]
                                    }
                                },
                                "required": [
                                    "device_configs",
                                    "metricdb"
                                ]
                            },
                            "errors": {
                                "description": "Node errors based on system utilization",
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "agent_missing",
                                        "agent_reboot",
                                        "disk_in_read_only_mode",
                                        "disk_usage_threshold"
                                    ],
                                    "type": "string"
                                }
                            },
                            "configuration_error": {
                                "description": "Configuration errors for the AOS Cluster node",
                                "type": "string"
                            },
                            "application_summary": {
                                "type": "object",
                                "properties": {
                                    "offbox": {
                                        "$ref": "#/definitions/TypeDump31"
                                    },
                                    "iba": {
                                        "$ref": "#/definitions/TypeDump31"
                                    },
                                    "apstra_edge": {
                                        "$ref": "#/definitions/TypeDump31"
                                    }
                                },
                                "required": [
                                    "apstra_edge",
                                    "iba",
                                    "offbox"
                                ]
                            }
                        },
                        "required": [
                            "address",
                            "application_summary",
                            "capacity_score",
                            "configuration_error",
                            "cpu",
                            "cpu_usage",
                            "disk_usage",
                            "errors",
                            "file_registry_usage",
                            "id",
                            "label",
                            "memory_usage",
                            "num_containers",
                            "numeric_id",
                            "roles",
                            "state",
                            "tags",
                            "utilization"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiClusterOperationModeResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "OperationalProfile user config",
                    "type": "object",
                    "properties": {
                        "operation_mode": {
                            "$ref": "#/definitions/TypeDump28"
                        },
                        "profile": {
                            "$ref": "#/definitions/TypeDump28"
                        }
                    },
                    "required": [
                        "operation_mode",
                        "profile"
                    ]
                },
                "system_config": {
                    "description": "Module operation configs requested by the system",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "operation_mode": {
                                "$ref": "#/definitions/TypeDump29"
                            },
                            "reason": {
                                "description": "Explains why the system requested the operation mode",
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "operation_mode",
                            "reason",
                            "updated_at"
                        ],
                        "additionalProperties": false
                    }
                },
                "status": {
                    "description": "Operation status of modules",
                    "type": "object",
                    "properties": {
                        "anomaly": {
                            "$ref": "#/definitions/TypeDump30"
                        },
                        "cluster": {
                            "$ref": "#/definitions/TypeDump30"
                        },
                        "device": {
                            "$ref": "#/definitions/TypeDump30"
                        },
                        "web_agents": {
                            "$ref": "#/definitions/TypeDump30"
                        }
                    },
                    "required": [
                        "anomaly",
                        "cluster",
                        "device",
                        "web_agents"
                    ],
                    "additionalProperties": false
                },
                "anomalies": {
                    "description": "Operation anomalies detected in the Apstra cluster",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "description": "Operation anomaly type, e.g. filesystem space shortage, memory shortage",
                                "enum": [
                                    "filesystem_in_read_only_mode",
                                    "filesystem_space_shortage",
                                    "memory_shortage"
                                ],
                                "type": "string"
                            },
                            "severity": {
                                "description": "Operation anomaly severity: warning, critical",
                                "enum": [
                                    "critical",
                                    "warning"
                                ],
                                "type": "string"
                            },
                            "node": {
                                "description": "Name of controller/worker node",
                                "type": "string"
                            },
                            "description": {
                                "description": "Details of the anomaly; e.g. for filesystem space shortage this includes the filesystem(s) with the shortage, and its utilization level and anomaly-triggering threshold",
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "description",
                            "node",
                            "severity",
                            "type",
                            "updated_at"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "anomalies",
                "config",
                "status",
                "system_config"
            ]
        },
        "GetApiConfigAuditResponse": {
            "type": "object",
            "properties": {
                "syslogs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "syslogs"
            ]
        },
        "GetApiConfigSyslogsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "Configuration of the syslog receiver, including its address, port, used protocol, etc",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "protocol": {
                                "description": "Protocol used for syslog forwarding",
                                "enum": [
                                    "tcp",
                                    "udp"
                                ],
                                "type": "string"
                            },
                            "address": {
                                "description": "IP address of the server receiving forwarded syslog messages",
                                "type": "string"
                            },
                            "port": {
                                "title": "Port",
                                "description": "A single integer port number in range 1-65535",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 65535
                            },
                            "timezone": {
                                "enum": [
                                    "Africa/Abidjan",
                                    "Africa/Accra",
                                    "Africa/Addis_Ababa",
                                    "Africa/Algiers",
                                    "Africa/Asmara",
                                    "Africa/Asmera",
                                    "Africa/Bamako",
                                    "Africa/Bangui",
                                    "Africa/Banjul",
                                    "Africa/Bissau",
                                    "Africa/Blantyre",
                                    "Africa/Brazzaville",
                                    "Africa/Bujumbura",
                                    "Africa/Cairo",
                                    "Africa/Casablanca",
                                    "Africa/Ceuta",
                                    "Africa/Conakry",
                                    "Africa/Dakar",
                                    "Africa/Dar_es_Salaam",
                                    "Africa/Djibouti",
                                    "Africa/Douala",
                                    "Africa/El_Aaiun",
                                    "Africa/Freetown",
                                    "Africa/Gaborone",
                                    "Africa/Harare",
                                    "Africa/Johannesburg",
                                    "Africa/Juba",
                                    "Africa/Kampala",
                                    "Africa/Khartoum",
                                    "Africa/Kigali",
                                    "Africa/Kinshasa",
                                    "Africa/Lagos",
                                    "Africa/Libreville",
                                    "Africa/Lome",
                                    "Africa/Luanda",
                                    "Africa/Lubumbashi",
                                    "Africa/Lusaka",
                                    "Africa/Malabo",
                                    "Africa/Maputo",
                                    "Africa/Maseru",
                                    "Africa/Mbabane",
                                    "Africa/Mogadishu",
                                    "Africa/Monrovia",
                                    "Africa/Nairobi",
                                    "Africa/Ndjamena",
                                    "Africa/Niamey",
                                    "Africa/Nouakchott",
                                    "Africa/Ouagadougou",
                                    "Africa/Porto-Novo",
                                    "Africa/Sao_Tome",
                                    "Africa/Timbuktu",
                                    "Africa/Tripoli",
                                    "Africa/Tunis",
                                    "Africa/Windhoek",
                                    "America/Adak",
                                    "America/Anchorage",
                                    "America/Anguilla",
                                    "America/Antigua",
                                    "America/Araguaina",
                                    "America/Argentina/Buenos_Aires",
                                    "America/Argentina/Catamarca",
                                    "America/Argentina/ComodRivadavia",
                                    "America/Argentina/Cordoba",
                                    "America/Argentina/Jujuy",
                                    "America/Argentina/La_Rioja",
                                    "America/Argentina/Mendoza",
                                    "America/Argentina/Rio_Gallegos",
                                    "America/Argentina/Salta",
                                    "America/Argentina/San_Juan",
                                    "America/Argentina/San_Luis",
                                    "America/Argentina/Tucuman",
                                    "America/Argentina/Ushuaia",
                                    "America/Aruba",
                                    "America/Asuncion",
                                    "America/Atikokan",
                                    "America/Atka",
                                    "America/Bahia",
                                    "America/Bahia_Banderas",
                                    "America/Barbados",
                                    "America/Belem",
                                    "America/Belize",
                                    "America/Blanc-Sablon",
                                    "America/Boa_Vista",
                                    "America/Bogota",
                                    "America/Boise",
                                    "America/Buenos_Aires",
                                    "America/Cambridge_Bay",
                                    "America/Campo_Grande",
                                    "America/Cancun",
                                    "America/Caracas",
                                    "America/Catamarca",
                                    "America/Cayenne",
                                    "America/Cayman",
                                    "America/Chicago",
                                    "America/Chihuahua",
                                    "America/Ciudad_Juarez",
                                    "America/Coral_Harbour",
                                    "America/Cordoba",
                                    "America/Costa_Rica",
                                    "America/Creston",
                                    "America/Cuiaba",
                                    "America/Curacao",
                                    "America/Danmarkshavn",
                                    "America/Dawson",
                                    "America/Dawson_Creek",
                                    "America/Denver",
                                    "America/Detroit",
                                    "America/Dominica",
                                    "America/Edmonton",
                                    "America/Eirunepe",
                                    "America/El_Salvador",
                                    "America/Ensenada",
                                    "America/Fort_Nelson",
                                    "America/Fort_Wayne",
                                    "America/Fortaleza",
                                    "America/Glace_Bay",
                                    "America/Godthab",
                                    "America/Goose_Bay",
                                    "America/Grand_Turk",
                                    "America/Grenada",
                                    "America/Guadeloupe",
                                    "America/Guatemala",
                                    "America/Guayaquil",
                                    "America/Guyana",
                                    "America/Halifax",
                                    "America/Havana",
                                    "America/Hermosillo",
                                    "America/Indiana/Indianapolis",
                                    "America/Indiana/Knox",
                                    "America/Indiana/Marengo",
                                    "America/Indiana/Petersburg",
                                    "America/Indiana/Tell_City",
                                    "America/Indiana/Vevay",
                                    "America/Indiana/Vincennes",
                                    "America/Indiana/Winamac",
                                    "America/Indianapolis",
                                    "America/Inuvik",
                                    "America/Iqaluit",
                                    "America/Jamaica",
                                    "America/Jujuy",
                                    "America/Juneau",
                                    "America/Kentucky/Louisville",
                                    "America/Kentucky/Monticello",
                                    "America/Knox_IN",
                                    "America/Kralendijk",
                                    "America/La_Paz",
                                    "America/Lima",
                                    "America/Los_Angeles",
                                    "America/Louisville",
                                    "America/Lower_Princes",
                                    "America/Maceio",
                                    "America/Managua",
                                    "America/Manaus",
                                    "America/Marigot",
                                    "America/Martinique",
                                    "America/Matamoros",
                                    "America/Mazatlan",
                                    "America/Mendoza",
                                    "America/Menominee",
                                    "America/Merida",
                                    "America/Metlakatla",
                                    "America/Mexico_City",
                                    "America/Miquelon",
                                    "America/Moncton",
                                    "America/Monterrey",
                                    "America/Montevideo",
                                    "America/Montreal",
                                    "America/Montserrat",
                                    "America/Nassau",
                                    "America/New_York",
                                    "America/Nipigon",
                                    "America/Nome",
                                    "America/Noronha",
                                    "America/North_Dakota/Beulah",
                                    "America/North_Dakota/Center",
                                    "America/North_Dakota/New_Salem",
                                    "America/Nuuk",
                                    "America/Ojinaga",
                                    "America/Panama",
                                    "America/Pangnirtung",
                                    "America/Paramaribo",
                                    "America/Phoenix",
                                    "America/Port-au-Prince",
                                    "America/Port_of_Spain",
                                    "America/Porto_Acre",
                                    "America/Porto_Velho",
                                    "America/Puerto_Rico",
                                    "America/Punta_Arenas",
                                    "America/Rainy_River",
                                    "America/Rankin_Inlet",
                                    "America/Recife",
                                    "America/Regina",
                                    "America/Resolute",
                                    "America/Rio_Branco",
                                    "America/Rosario",
                                    "America/Santa_Isabel",
                                    "America/Santarem",
                                    "America/Santiago",
                                    "America/Santo_Domingo",
                                    "America/Sao_Paulo",
                                    "America/Scoresbysund",
                                    "America/Shiprock",
                                    "America/Sitka",
                                    "America/St_Barthelemy",
                                    "America/St_Johns",
                                    "America/St_Kitts",
                                    "America/St_Lucia",
                                    "America/St_Thomas",
                                    "America/St_Vincent",
                                    "America/Swift_Current",
                                    "America/Tegucigalpa",
                                    "America/Thule",
                                    "America/Thunder_Bay",
                                    "America/Tijuana",
                                    "America/Toronto",
                                    "America/Tortola",
                                    "America/Vancouver",
                                    "America/Virgin",
                                    "America/Whitehorse",
                                    "America/Winnipeg",
                                    "America/Yakutat",
                                    "America/Yellowknife",
                                    "Antarctica/Casey",
                                    "Antarctica/Davis",
                                    "Antarctica/DumontDUrville",
                                    "Antarctica/Macquarie",
                                    "Antarctica/Mawson",
                                    "Antarctica/McMurdo",
                                    "Antarctica/Palmer",
                                    "Antarctica/Rothera",
                                    "Antarctica/South_Pole",
                                    "Antarctica/Syowa",
                                    "Antarctica/Troll",
                                    "Antarctica/Vostok",
                                    "Arctic/Longyearbyen",
                                    "Asia/Aden",
                                    "Asia/Almaty",
                                    "Asia/Amman",
                                    "Asia/Anadyr",
                                    "Asia/Aqtau",
                                    "Asia/Aqtobe",
                                    "Asia/Ashgabat",
                                    "Asia/Ashkhabad",
                                    "Asia/Atyrau",
                                    "Asia/Baghdad",
                                    "Asia/Bahrain",
                                    "Asia/Baku",
                                    "Asia/Bangkok",
                                    "Asia/Barnaul",
                                    "Asia/Beirut",
                                    "Asia/Bishkek",
                                    "Asia/Brunei",
                                    "Asia/Calcutta",
                                    "Asia/Chita",
                                    "Asia/Choibalsan",
                                    "Asia/Chongqing",
                                    "Asia/Chungking",
                                    "Asia/Colombo",
                                    "Asia/Dacca",
                                    "Asia/Damascus",
                                    "Asia/Dhaka",
                                    "Asia/Dili",
                                    "Asia/Dubai",
                                    "Asia/Dushanbe",
                                    "Asia/Famagusta",
                                    "Asia/Gaza",
                                    "Asia/Harbin",
                                    "Asia/Hebron",
                                    "Asia/Ho_Chi_Minh",
                                    "Asia/Hong_Kong",
                                    "Asia/Hovd",
                                    "Asia/Irkutsk",
                                    "Asia/Istanbul",
                                    "Asia/Jakarta",
                                    "Asia/Jayapura",
                                    "Asia/Jerusalem",
                                    "Asia/Kabul",
                                    "Asia/Kamchatka",
                                    "Asia/Karachi",
                                    "Asia/Kashgar",
                                    "Asia/Kathmandu",
                                    "Asia/Katmandu",
                                    "Asia/Khandyga",
                                    "Asia/Kolkata",
                                    "Asia/Krasnoyarsk",
                                    "Asia/Kuala_Lumpur",
                                    "Asia/Kuching",
                                    "Asia/Kuwait",
                                    "Asia/Macao",
                                    "Asia/Macau",
                                    "Asia/Magadan",
                                    "Asia/Makassar",
                                    "Asia/Manila",
                                    "Asia/Muscat",
                                    "Asia/Nicosia",
                                    "Asia/Novokuznetsk",
                                    "Asia/Novosibirsk",
                                    "Asia/Omsk",
                                    "Asia/Oral",
                                    "Asia/Phnom_Penh",
                                    "Asia/Pontianak",
                                    "Asia/Pyongyang",
                                    "Asia/Qatar",
                                    "Asia/Qostanay",
                                    "Asia/Qyzylorda",
                                    "Asia/Rangoon",
                                    "Asia/Riyadh",
                                    "Asia/Saigon",
                                    "Asia/Sakhalin",
                                    "Asia/Samarkand",
                                    "Asia/Seoul",
                                    "Asia/Shanghai",
                                    "Asia/Singapore",
                                    "Asia/Srednekolymsk",
                                    "Asia/Taipei",
                                    "Asia/Tashkent",
                                    "Asia/Tbilisi",
                                    "Asia/Tehran",
                                    "Asia/Tel_Aviv",
                                    "Asia/Thimbu",
                                    "Asia/Thimphu",
                                    "Asia/Tokyo",
                                    "Asia/Tomsk",
                                    "Asia/Ujung_Pandang",
                                    "Asia/Ulaanbaatar",
                                    "Asia/Ulan_Bator",
                                    "Asia/Urumqi",
                                    "Asia/Ust-Nera",
                                    "Asia/Vientiane",
                                    "Asia/Vladivostok",
                                    "Asia/Yakutsk",
                                    "Asia/Yangon",
                                    "Asia/Yekaterinburg",
                                    "Asia/Yerevan",
                                    "Atlantic/Azores",
                                    "Atlantic/Bermuda",
                                    "Atlantic/Canary",
                                    "Atlantic/Cape_Verde",
                                    "Atlantic/Faeroe",
                                    "Atlantic/Faroe",
                                    "Atlantic/Jan_Mayen",
                                    "Atlantic/Madeira",
                                    "Atlantic/Reykjavik",
                                    "Atlantic/South_Georgia",
                                    "Atlantic/St_Helena",
                                    "Atlantic/Stanley",
                                    "Australia/ACT",
                                    "Australia/Adelaide",
                                    "Australia/Brisbane",
                                    "Australia/Broken_Hill",
                                    "Australia/Canberra",
                                    "Australia/Currie",
                                    "Australia/Darwin",
                                    "Australia/Eucla",
                                    "Australia/Hobart",
                                    "Australia/LHI",
                                    "Australia/Lindeman",
                                    "Australia/Lord_Howe",
                                    "Australia/Melbourne",
                                    "Australia/NSW",
                                    "Australia/North",
                                    "Australia/Perth",
                                    "Australia/Queensland",
                                    "Australia/South",
                                    "Australia/Sydney",
                                    "Australia/Tasmania",
                                    "Australia/Victoria",
                                    "Australia/West",
                                    "Australia/Yancowinna",
                                    "Brazil/Acre",
                                    "Brazil/DeNoronha",
                                    "Brazil/East",
                                    "Brazil/West",
                                    "CET",
                                    "CST6CDT",
                                    "Canada/Atlantic",
                                    "Canada/Central",
                                    "Canada/Eastern",
                                    "Canada/Mountain",
                                    "Canada/Newfoundland",
                                    "Canada/Pacific",
                                    "Canada/Saskatchewan",
                                    "Canada/Yukon",
                                    "Chile/Continental",
                                    "Chile/EasterIsland",
                                    "Cuba",
                                    "EET",
                                    "EST",
                                    "EST5EDT",
                                    "Egypt",
                                    "Eire",
                                    "Etc/GMT",
                                    "Etc/GMT+0",
                                    "Etc/GMT+1",
                                    "Etc/GMT+10",
                                    "Etc/GMT+11",
                                    "Etc/GMT+12",
                                    "Etc/GMT+2",
                                    "Etc/GMT+3",
                                    "Etc/GMT+4",
                                    "Etc/GMT+5",
                                    "Etc/GMT+6",
                                    "Etc/GMT+7",
                                    "Etc/GMT+8",
                                    "Etc/GMT+9",
                                    "Etc/GMT-0",
                                    "Etc/GMT-1",
                                    "Etc/GMT-10",
                                    "Etc/GMT-11",
                                    "Etc/GMT-12",
                                    "Etc/GMT-13",
                                    "Etc/GMT-14",
                                    "Etc/GMT-2",
                                    "Etc/GMT-3",
                                    "Etc/GMT-4",
                                    "Etc/GMT-5",
                                    "Etc/GMT-6",
                                    "Etc/GMT-7",
                                    "Etc/GMT-8",
                                    "Etc/GMT-9",
                                    "Etc/GMT0",
                                    "Etc/Greenwich",
                                    "Etc/UCT",
                                    "Etc/UTC",
                                    "Etc/Universal",
                                    "Etc/Zulu",
                                    "Europe/Amsterdam",
                                    "Europe/Andorra",
                                    "Europe/Astrakhan",
                                    "Europe/Athens",
                                    "Europe/Belfast",
                                    "Europe/Belgrade",
                                    "Europe/Berlin",
                                    "Europe/Bratislava",
                                    "Europe/Brussels",
                                    "Europe/Bucharest",
                                    "Europe/Budapest",
                                    "Europe/Busingen",
                                    "Europe/Chisinau",
                                    "Europe/Copenhagen",
                                    "Europe/Dublin",
                                    "Europe/Gibraltar",
                                    "Europe/Guernsey",
                                    "Europe/Helsinki",
                                    "Europe/Isle_of_Man",
                                    "Europe/Istanbul",
                                    "Europe/Jersey",
                                    "Europe/Kaliningrad",
                                    "Europe/Kiev",
                                    "Europe/Kirov",
                                    "Europe/Kyiv",
                                    "Europe/Lisbon",
                                    "Europe/Ljubljana",
                                    "Europe/London",
                                    "Europe/Luxembourg",
                                    "Europe/Madrid",
                                    "Europe/Malta",
                                    "Europe/Mariehamn",
                                    "Europe/Minsk",
                                    "Europe/Monaco",
                                    "Europe/Moscow",
                                    "Europe/Nicosia",
                                    "Europe/Oslo",
                                    "Europe/Paris",
                                    "Europe/Podgorica",
                                    "Europe/Prague",
                                    "Europe/Riga",
                                    "Europe/Rome",
                                    "Europe/Samara",
                                    "Europe/San_Marino",
                                    "Europe/Sarajevo",
                                    "Europe/Saratov",
                                    "Europe/Simferopol",
                                    "Europe/Skopje",
                                    "Europe/Sofia",
                                    "Europe/Stockholm",
                                    "Europe/Tallinn",
                                    "Europe/Tirane",
                                    "Europe/Tiraspol",
                                    "Europe/Ulyanovsk",
                                    "Europe/Uzhgorod",
                                    "Europe/Vaduz",
                                    "Europe/Vatican",
                                    "Europe/Vienna",
                                    "Europe/Vilnius",
                                    "Europe/Volgograd",
                                    "Europe/Warsaw",
                                    "Europe/Zagreb",
                                    "Europe/Zaporozhye",
                                    "Europe/Zurich",
                                    "GB",
                                    "GB-Eire",
                                    "GMT",
                                    "GMT+0",
                                    "GMT-0",
                                    "GMT0",
                                    "Greenwich",
                                    "HST",
                                    "Hongkong",
                                    "Iceland",
                                    "Indian/Antananarivo",
                                    "Indian/Chagos",
                                    "Indian/Christmas",
                                    "Indian/Cocos",
                                    "Indian/Comoro",
                                    "Indian/Kerguelen",
                                    "Indian/Mahe",
                                    "Indian/Maldives",
                                    "Indian/Mauritius",
                                    "Indian/Mayotte",
                                    "Indian/Reunion",
                                    "Iran",
                                    "Israel",
                                    "Jamaica",
                                    "Japan",
                                    "Kwajalein",
                                    "Libya",
                                    "MET",
                                    "MST",
                                    "MST7MDT",
                                    "Mexico/BajaNorte",
                                    "Mexico/BajaSur",
                                    "Mexico/General",
                                    "NZ",
                                    "NZ-CHAT",
                                    "Navajo",
                                    "PRC",
                                    "PST8PDT",
                                    "Pacific/Apia",
                                    "Pacific/Auckland",
                                    "Pacific/Bougainville",
                                    "Pacific/Chatham",
                                    "Pacific/Chuuk",
                                    "Pacific/Easter",
                                    "Pacific/Efate",
                                    "Pacific/Enderbury",
                                    "Pacific/Fakaofo",
                                    "Pacific/Fiji",
                                    "Pacific/Funafuti",
                                    "Pacific/Galapagos",
                                    "Pacific/Gambier",
                                    "Pacific/Guadalcanal",
                                    "Pacific/Guam",
                                    "Pacific/Honolulu",
                                    "Pacific/Johnston",
                                    "Pacific/Kanton",
                                    "Pacific/Kiritimati",
                                    "Pacific/Kosrae",
                                    "Pacific/Kwajalein",
                                    "Pacific/Majuro",
                                    "Pacific/Marquesas",
                                    "Pacific/Midway",
                                    "Pacific/Nauru",
                                    "Pacific/Niue",
                                    "Pacific/Norfolk",
                                    "Pacific/Noumea",
                                    "Pacific/Pago_Pago",
                                    "Pacific/Palau",
                                    "Pacific/Pitcairn",
                                    "Pacific/Pohnpei",
                                    "Pacific/Ponape",
                                    "Pacific/Port_Moresby",
                                    "Pacific/Rarotonga",
                                    "Pacific/Saipan",
                                    "Pacific/Samoa",
                                    "Pacific/Tahiti",
                                    "Pacific/Tarawa",
                                    "Pacific/Tongatapu",
                                    "Pacific/Truk",
                                    "Pacific/Wake",
                                    "Pacific/Wallis",
                                    "Pacific/Yap",
                                    "Poland",
                                    "Portugal",
                                    "ROC",
                                    "ROK",
                                    "Singapore",
                                    "Turkey",
                                    "UCT",
                                    "US/Alaska",
                                    "US/Aleutian",
                                    "US/Arizona",
                                    "US/Central",
                                    "US/East-Indiana",
                                    "US/Eastern",
                                    "US/Hawaii",
                                    "US/Indiana-Starke",
                                    "US/Michigan",
                                    "US/Mountain",
                                    "US/Pacific",
                                    "US/Samoa",
                                    "UTC",
                                    "Universal",
                                    "W-SU",
                                    "WET",
                                    "Zulu"
                                ],
                                "type": "string",
                                "default": "UTC"
                            },
                            "facility": {
                                "description": "Facility (e.g. operating system daemon or process) of the syslog messages",
                                "enum": [
                                    "auth",
                                    "authpriv",
                                    "cron",
                                    "daemon",
                                    "ftp",
                                    "kern",
                                    "local0",
                                    "local1",
                                    "local2",
                                    "local3",
                                    "local4",
                                    "local5",
                                    "local6",
                                    "local7",
                                    "lpr",
                                    "mail",
                                    "news",
                                    "syslog",
                                    "user",
                                    "uucp"
                                ],
                                "type": "string"
                            },
                            "anomaly_forwarding": {
                                "description": "Flag showing whether anomaly forwarding is enabled or not",
                                "type": "boolean",
                                "default": false
                            }
                        },
                        "required": [
                            "address",
                            "facility",
                            "id",
                            "port",
                            "protocol"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiConnectorTypesResponse": {
            "type": "array",
            "items": {
                "description": "Type of connector, in capital letters. E.g. RJ45",
                "type": "string",
                "minLength": 1
            }
        },
        "GetApiDesignAiMlTemplateCalculatorJuniperRecommendedResponse": {
            "type": "object",
            "properties": {
                "leaf_device_profile_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spine_device_profile_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "leaf_device_profile_ids",
                "spine_device_profile_ids"
            ]
        },
        "GetApiDesignConfigTemplatesIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of configuration template.",
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Label of configuration template.",
                    "type": "string"
                },
                "predefined": {
                    "type": "boolean"
                },
                "text": {
                    "description": "Configuration Jinja2 template",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "label",
                "predefined",
                "text"
            ]
        },
        "GetApiDesignConfigTemplatesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of configuration template.",
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Label of configuration template.",
                                "type": "string"
                            },
                            "predefined": {
                                "type": "boolean"
                            },
                            "text": {
                                "description": "Configuration Jinja2 template",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label",
                            "predefined",
                            "text"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignConfigletsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "This value is a configlet display name",
                                "type": "string",
                                "minLength": 1
                            },
                            "generators": {
                                "description": "List of configlet descriptions, one per style",
                                "type": "array",
                                "items": {
                                    "title": "Configlet Generator",
                                    "type": "object",
                                    "properties": {
                                        "config_style": {
                                            "description": "OS Style that this configlet renders for",
                                            "enum": [
                                                "cumulus",
                                                "eos",
                                                "junos",
                                                "nxos",
                                                "sonic"
                                            ],
                                            "type": "string"
                                        },
                                        "template_text": {
                                            "description": "Template text",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "negation_template_text": {
                                            "description": "Negation template text",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "filename": {
                                            "description": "Filename for linux-based configlets",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "section": {
                                            "description": "Section for which the configlet may be applied",
                                            "enum": [
                                                "delete_based_interface",
                                                "file",
                                                "frr",
                                                "interface",
                                                "ospf",
                                                "set_based_interface",
                                                "set_based_system",
                                                "system",
                                                "system_top"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "config_style",
                                        "section",
                                        "template_text"
                                    ]
                                },
                                "minItems": 1
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1,
                                "default": null
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "ref_archs": {
                                "description": "Reference architectures applicable to the configlet",
                                "type": "array",
                                "items": {
                                    "enum": [
                                        "two_stage_l3clos"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "generators",
                            "last_modified_at",
                            "ref_archs"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignEndpointPoliciesEndpointPolicyIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the endpoint policy",
                    "type": "string",
                    "default": null
                },
                "label": {
                    "description": "Label of the endpoint policy",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "body_json": {
                    "description": "Not used",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "GetApiDesignEndpointPoliciesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of the endpoint policy",
                                "type": "string",
                                "default": null
                            },
                            "label": {
                                "description": "Label of the endpoint policy",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "body_json": {
                                "description": "Not used",
                                "type": "string",
                                "minLength": 1,
                                "default": null
                            },
                            "payload": {
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0,
                                "default": null
                            }
                        },
                        "required": [
                            "label"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignGraphQueriesIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Label of the query",
                    "type": "string"
                },
                "predefined": {
                    "description": "Indicates whether the query is predefined and therefore intended to be immutable. If True, the query must not be updated by user.",
                    "type": "boolean"
                },
                "query": {
                    "description": "QE-syntax expression",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "label",
                "predefined",
                "query"
            ]
        },
        "GetApiDesignGraphQueriesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Label of the query",
                                "type": "string"
                            },
                            "predefined": {
                                "description": "Indicates whether the query is predefined and therefore intended to be immutable. If True, the query must not be updated by user.",
                                "type": "boolean"
                            },
                            "query": {
                                "description": "QE-syntax expression",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label",
                            "predefined",
                            "query"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignInterfaceMapDigestsIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "device_profile": {
                    "type": "object",
                    "properties": {
                        "label": {
                            "description": "Label of device profile.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 64
                        },
                        "id": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": [
                        "id",
                        "label"
                    ]
                },
                "logical_device": {
                    "type": "object",
                    "properties": {
                        "label": {
                            "description": "Label of logical device.",
                            "type": "string",
                            "minLength": 1
                        },
                        "id": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": [
                        "id",
                        "label"
                    ]
                },
                "label": {
                    "description": "Label of interface map digest.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                }
            },
            "required": [
                "created_at",
                "device_profile",
                "label",
                "last_modified_at",
                "logical_device"
            ]
        },
        "GetApiDesignInterfaceMapDigestsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "device_profile": {
                                "type": "object",
                                "properties": {
                                    "label": {
                                        "description": "Label of device profile.",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 64
                                    },
                                    "id": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                },
                                "required": [
                                    "id",
                                    "label"
                                ]
                            },
                            "logical_device": {
                                "type": "object",
                                "properties": {
                                    "label": {
                                        "description": "Label of logical device.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "id": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                },
                                "required": [
                                    "id",
                                    "label"
                                ]
                            },
                            "label": {
                                "description": "Label of interface map digest.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            }
                        },
                        "required": [
                            "created_at",
                            "device_profile",
                            "label",
                            "last_modified_at",
                            "logical_device"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignInterfaceMapsIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "device_profile_id": {
                    "description": "The ID of the Device Profile which this interface map is built from",
                    "type": "string",
                    "minLength": 1
                },
                "logical_device_id": {
                    "description": "The ID of the logical device this interface map is built from",
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Interface Map as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "interfaces": {
                    "description": "List of interfaces available as part of this interface map",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Interface name",
                                "type": "string",
                                "minLength": 1
                            },
                            "roles": {
                                "description": "Roles the interface can participate in",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "position": {
                                "description": "1-based index that corresponds to an absolute position of a logical port irrespective of a panel it belongs to",
                                "type": "integer"
                            },
                            "state": {
                                "description": "Is the interface active or inactive",
                                "enum": [
                                    "active",
                                    "inactive"
                                ],
                                "type": "string"
                            },
                            "speed": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "description": "scalar multiplier for the speed of the interface",
                                        "type": "integer"
                                    },
                                    "unit": {
                                        "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                        "enum": [
                                            "",
                                            "G",
                                            "M"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "unit",
                                    "value"
                                ],
                                "default": null
                            },
                            "setting": {
                                "type": "object",
                                "properties": {
                                    "param": {
                                        "description": "Indicates interface interface setting parameters",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "param"
                                ]
                            },
                            "mapping": {
                                "description": "This list of 5 integers represent which (port ID, transformation ID and interface ID) in the device profile and which (panel ID, port ID) in the logical device is this interface coming from",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "default": null
                                },
                                "minItems": 5,
                                "maxItems": 5
                            }
                        },
                        "required": [
                            "mapping",
                            "name",
                            "position",
                            "roles",
                            "setting",
                            "state"
                        ]
                    },
                    "minItems": 1
                }
            },
            "required": [
                "created_at",
                "device_profile_id",
                "interfaces",
                "label",
                "last_modified_at",
                "logical_device_id"
            ]
        },
        "GetApiDesignInterfaceMapsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "device_profile_id": {
                                "description": "The ID of the Device Profile which this interface map is built from",
                                "type": "string",
                                "minLength": 1
                            },
                            "logical_device_id": {
                                "description": "The ID of the logical device this interface map is built from",
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Human friendly name for the Interface Map as read on UI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "interfaces": {
                                "description": "List of interfaces available as part of this interface map",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Interface name",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "roles": {
                                            "description": "Roles the interface can participate in",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 1
                                        },
                                        "position": {
                                            "description": "1-based index that corresponds to an absolute position of a logical port irrespective of a panel it belongs to",
                                            "type": "integer"
                                        },
                                        "state": {
                                            "description": "Is the interface active or inactive",
                                            "enum": [
                                                "active",
                                                "inactive"
                                            ],
                                            "type": "string"
                                        },
                                        "speed": {
                                            "type": "object",
                                            "properties": {
                                                "value": {
                                                    "description": "scalar multiplier for the speed of the interface",
                                                    "type": "integer"
                                                },
                                                "unit": {
                                                    "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                    "enum": [
                                                        "",
                                                        "G",
                                                        "M"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unit",
                                                "value"
                                            ],
                                            "default": null
                                        },
                                        "setting": {
                                            "type": "object",
                                            "properties": {
                                                "param": {
                                                    "description": "Indicates interface interface setting parameters",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "param"
                                            ]
                                        },
                                        "mapping": {
                                            "description": "This list of 5 integers represent which (port ID, transformation ID and interface ID) in the device profile and which (panel ID, port ID) in the logical device is this interface coming from",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "default": null
                                            },
                                            "minItems": 5,
                                            "maxItems": 5
                                        }
                                    },
                                    "required": [
                                        "mapping",
                                        "name",
                                        "position",
                                        "roles",
                                        "setting",
                                        "state"
                                    ]
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "device_profile_id",
                            "interfaces",
                            "label",
                            "last_modified_at",
                            "logical_device_id"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignLogicalDevicesIdResponse": {
            "title": "LogicalDeviceStatus",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "display_name": {
                    "description": "Display name of logical device",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "panels": {
                    "description": "Panels of this logical device",
                    "type": "array",
                    "items": {
                        "title": "LogicalPanel",
                        "type": "object",
                        "properties": {
                            "port_groups": {
                                "description": "Port groups in this panel",
                                "type": "array",
                                "items": {
                                    "title": "PortGroup",
                                    "type": "object",
                                    "properties": {
                                        "roles": {
                                            "description": "Possible roles for ports in this group",
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "access",
                                                    "generic",
                                                    "leaf",
                                                    "peer",
                                                    "spine",
                                                    "superspine",
                                                    "unused"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "count": {
                                            "description": "Number of ports in this group",
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "speed": {
                                            "description": "Speed of the ports in this group",
                                            "type": "object",
                                            "properties": {
                                                "value": {
                                                    "description": "Scalar multiplier for the speed of the port",
                                                    "enum": [
                                                        0,
                                                        1,
                                                        2,
                                                        5,
                                                        10,
                                                        25,
                                                        40,
                                                        50,
                                                        100,
                                                        150,
                                                        200,
                                                        400,
                                                        800
                                                    ],
                                                    "type": "integer"
                                                },
                                                "unit": {
                                                    "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                    "enum": [
                                                        "",
                                                        "G",
                                                        "M"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unit",
                                                "value"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "count",
                                        "roles",
                                        "speed"
                                    ]
                                }
                            },
                            "port_indexing": {
                                "description": "Indexing schema for port groups in this panel",
                                "type": "object",
                                "properties": {
                                    "schema": {
                                        "description": "Must always be 'absolute'",
                                        "enum": [
                                            "absolute"
                                        ],
                                        "type": "string"
                                    },
                                    "order": {
                                        "description": "Indicates how incrementing a port index changes port position across columns first or rows first",
                                        "enum": [
                                            "L-R, T-B",
                                            "T-B, L-R"
                                        ],
                                        "type": "string"
                                    },
                                    "start_index": {
                                        "description": "Starting index of this panel",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "order",
                                    "schema",
                                    "start_index"
                                ]
                            },
                            "panel_layout": {
                                "description": "Layout of this panel",
                                "type": "object",
                                "properties": {
                                    "row_count": {
                                        "description": "Number of rows in this panel",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "column_count": {
                                        "description": "Number of columns in this panel",
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                },
                                "required": [
                                    "column_count",
                                    "row_count"
                                ]
                            }
                        },
                        "required": [
                            "panel_layout",
                            "port_groups",
                            "port_indexing"
                        ]
                    }
                },
                "id": {
                    "description": "Unique id of this logical device",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "panels"
            ]
        },
        "GetApiDesignLogicalDevicesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "LogicalDeviceStatus",
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "display_name": {
                                "description": "Display name of logical device",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "panels": {
                                "description": "Panels of this logical device",
                                "type": "array",
                                "items": {
                                    "title": "LogicalPanel",
                                    "type": "object",
                                    "properties": {
                                        "port_groups": {
                                            "description": "Port groups in this panel",
                                            "type": "array",
                                            "items": {
                                                "title": "PortGroup",
                                                "type": "object",
                                                "properties": {
                                                    "roles": {
                                                        "description": "Possible roles for ports in this group",
                                                        "type": "array",
                                                        "items": {
                                                            "enum": [
                                                                "access",
                                                                "generic",
                                                                "leaf",
                                                                "peer",
                                                                "spine",
                                                                "superspine",
                                                                "unused"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "count": {
                                                        "description": "Number of ports in this group",
                                                        "type": "integer",
                                                        "minimum": 1
                                                    },
                                                    "speed": {
                                                        "description": "Speed of the ports in this group",
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "description": "Scalar multiplier for the speed of the port",
                                                                "enum": [
                                                                    0,
                                                                    1,
                                                                    2,
                                                                    5,
                                                                    10,
                                                                    25,
                                                                    40,
                                                                    50,
                                                                    100,
                                                                    150,
                                                                    200,
                                                                    400,
                                                                    800
                                                                ],
                                                                "type": "integer"
                                                            },
                                                            "unit": {
                                                                "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                "enum": [
                                                                    "",
                                                                    "G",
                                                                    "M"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "value"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "count",
                                                    "roles",
                                                    "speed"
                                                ]
                                            }
                                        },
                                        "port_indexing": {
                                            "description": "Indexing schema for port groups in this panel",
                                            "type": "object",
                                            "properties": {
                                                "schema": {
                                                    "description": "Must always be 'absolute'",
                                                    "enum": [
                                                        "absolute"
                                                    ],
                                                    "type": "string"
                                                },
                                                "order": {
                                                    "description": "Indicates how incrementing a port index changes port position across columns first or rows first",
                                                    "enum": [
                                                        "L-R, T-B",
                                                        "T-B, L-R"
                                                    ],
                                                    "type": "string"
                                                },
                                                "start_index": {
                                                    "description": "Starting index of this panel",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "order",
                                                "schema",
                                                "start_index"
                                            ]
                                        },
                                        "panel_layout": {
                                            "description": "Layout of this panel",
                                            "type": "object",
                                            "properties": {
                                                "row_count": {
                                                    "description": "Number of rows in this panel",
                                                    "type": "integer",
                                                    "minimum": 1
                                                },
                                                "column_count": {
                                                    "description": "Number of columns in this panel",
                                                    "type": "integer",
                                                    "minimum": 1
                                                }
                                            },
                                            "required": [
                                                "column_count",
                                                "row_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "panel_layout",
                                        "port_groups",
                                        "port_indexing"
                                    ]
                                }
                            },
                            "id": {
                                "description": "Unique id of this logical device",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "panels"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignRackTypesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of the rack type",
                                "type": "string",
                                "default": null
                            },
                            "display_name": {
                                "description": "Rack type name",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 17
                            },
                            "description": {
                                "type": "string",
                                "default": ""
                            },
                            "fabric_connectivity_design": {
                                "description": "Fabric connectivity design. Rack does not have spines in case of \"l3collapsed\" and \"rail_collapsed\" designs",
                                "enum": [
                                    "l3clos",
                                    "l3collapsed",
                                    "rail_collapsed"
                                ],
                                "type": "string",
                                "default": "l3clos"
                            },
                            "leafs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Leaf type label",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 64
                                        },
                                        "logical_device": {
                                            "description": "ID of logical device",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "leaf_leaf_link_count": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 0
                                        },
                                        "leaf_leaf_link_speed": {
                                            "$ref": "#/definitions/PortSpeedDump",
                                            "default": null
                                        },
                                        "leaf_leaf_l3_link_count": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 0
                                        },
                                        "leaf_leaf_l3_link_speed": {
                                            "$ref": "#/definitions/PortSpeedDump",
                                            "default": null
                                        },
                                        "link_per_spine_count": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 0
                                        },
                                        "link_per_spine_speed": {
                                            "$ref": "#/definitions/PortSpeedDump",
                                            "default": null
                                        },
                                        "redundancy_protocol": {
                                            "enum": [
                                                "esi",
                                                "mlag"
                                            ],
                                            "type": "string",
                                            "default": null
                                        },
                                        "leaf_leaf_link_port_channel_id": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4096,
                                            "default": 0
                                        },
                                        "leaf_leaf_l3_link_port_channel_id": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4096,
                                            "default": 0
                                        },
                                        "mlag_vlan_id": {
                                            "description": "MLAG VLAN ID",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4094,
                                            "default": 0
                                        },
                                        "tags": {
                                            "$ref": "#/definitions/TypeDump81",
                                            "default": []
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "logical_device"
                                    ]
                                },
                                "minItems": 1
                            },
                            "access_switches": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Access switch label, which also needs to be unique among leaf labels.",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 64
                                        },
                                        "logical_device": {
                                            "description": "ID of logical device",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "instance_count": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "default": 1
                                        },
                                        "links": {
                                            "description": "L2 links from access switches to TOR leafs",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TypeDump82"
                                            },
                                            "minItems": 1
                                        },
                                        "access_access_link_count": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 0
                                        },
                                        "access_access_link_speed": {
                                            "$ref": "#/definitions/PortSpeedDump",
                                            "default": null
                                        },
                                        "redundancy_protocol": {
                                            "enum": [
                                                "esi"
                                            ],
                                            "type": "string",
                                            "default": null
                                        },
                                        "access_access_link_port_channel_id_min": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4096,
                                            "default": 0
                                        },
                                        "access_access_link_port_channel_id_max": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4096,
                                            "default": 0
                                        },
                                        "tags": {
                                            "$ref": "#/definitions/TypeDump81",
                                            "default": []
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "links",
                                        "logical_device"
                                    ]
                                },
                                "default": []
                            },
                            "generic_systems": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Generic system type label",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 64
                                        },
                                        "logical_device": {
                                            "description": "ID of logical device",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TypeDump82"
                                            },
                                            "minItems": 1
                                        },
                                        "count": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "default": 1
                                        },
                                        "port_channel_id_min": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4096,
                                            "default": 0
                                        },
                                        "port_channel_id_max": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4096,
                                            "default": 0
                                        },
                                        "management_level": {
                                            "enum": [
                                                "full_control",
                                                "telemetry_only",
                                                "unmanaged"
                                            ],
                                            "type": "string"
                                        },
                                        "loopback": {
                                            "description": "Indicates whether loopback interface should be immediately created",
                                            "enum": [
                                                "disabled",
                                                "enabled"
                                            ],
                                            "type": "string",
                                            "default": "disabled"
                                        },
                                        "asn_domain": {
                                            "description": "Indicates whether ASN domain should be immediately created",
                                            "enum": [
                                                "disabled",
                                                "enabled"
                                            ],
                                            "type": "string",
                                            "default": "disabled"
                                        },
                                        "tags": {
                                            "$ref": "#/definitions/TypeDump81",
                                            "default": []
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "links",
                                        "logical_device",
                                        "management_level"
                                    ]
                                },
                                "default": []
                            },
                            "logical_devices": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "display_name": {
                                            "$ref": "#/definitions/TypeDump83"
                                        },
                                        "panels": {
                                            "$ref": "#/definitions/TypeDump84"
                                        },
                                        "id": {
                                            "$ref": "#/definitions/TypeDump85"
                                        }
                                    },
                                    "required": [
                                        "display_name",
                                        "id",
                                        "panels"
                                    ]
                                },
                                "default": []
                            },
                            "tags": {
                                "$ref": "#/definitions/TypeDump86",
                                "default": []
                            },
                            "preferences": {
                                "type": "object",
                                "additionalProperties": {
                                    "description": "Contains UI metadata to assist in visualization of the rack type or other UI-specific key-value storages"
                                },
                                "default": {}
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "last_modified_at",
                            "leafs"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignTagsIdResponse": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Tag name, case-insensitive, must be unique across all tags",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^(\\S+(\\s+\\S+)*)*$"
                },
                "description": {
                    "description": "Optional field to add any details",
                    "type": "string"
                },
                "id": {
                    "description": "ID of tag.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "label"
            ]
        },
        "GetApiDesignTagsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Tag name, case-insensitive, must be unique across all tags",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64,
                                "pattern": "^(\\S+(\\s+\\S+)*)*$"
                            },
                            "description": {
                                "description": "Optional field to add any details",
                                "type": "string"
                            },
                            "id": {
                                "description": "ID of tag.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignTemplatesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "DesignTemplate",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/TypeDump70"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump71"
                                    },
                                    "display_name": {
                                        "$ref": "#/definitions/TypeDump72"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump73"
                                    },
                                    "capability": {
                                        "$ref": "#/definitions/TypeDump74"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump75"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump76"
                                    },
                                    "rack_based_template_counts": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "rack_based_template_id": {
                                                    "description": "ID of rack based template",
                                                    "type": "string"
                                                },
                                                "count": {
                                                    "title": "Number of templates with `rack_based_template_id` in template or blueprint",
                                                    "type": "integer",
                                                    "minimum": 1
                                                }
                                            },
                                            "required": [
                                                "count",
                                                "rack_based_template_id"
                                            ]
                                        },
                                        "minItems": 1
                                    },
                                    "rack_based_templates": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/TypeDump70"
                                        },
                                        "minItems": 1
                                    },
                                    "superspine": {
                                        "type": "object",
                                        "properties": {
                                            "logical_device": {
                                                "$ref": "#/definitions/LogicalDeviceStatusDump"
                                            },
                                            "tags": {
                                                "$ref": "#/definitions/TypeDump87"
                                            },
                                            "plane_count": {
                                                "description": "Number of planes",
                                                "type": "integer",
                                                "minimum": 1
                                            },
                                            "superspine_per_plane": {
                                                "description": "Number of superspines per plane",
                                                "type": "integer",
                                                "minimum": 1
                                            }
                                        },
                                        "required": [
                                            "logical_device",
                                            "plane_count",
                                            "superspine_per_plane"
                                        ]
                                    }
                                },
                                "required": [
                                    "created_at",
                                    "display_name",
                                    "last_modified_at",
                                    "rack_based_template_counts",
                                    "rack_based_templates",
                                    "superspine"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump71"
                                    },
                                    "display_name": {
                                        "$ref": "#/definitions/TypeDump72"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump73"
                                    },
                                    "capability": {
                                        "$ref": "#/definitions/TypeDump74"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump75"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump76"
                                    },
                                    "rack_type_counts": {
                                        "$ref": "#/definitions/TypeDump77"
                                    },
                                    "rack_types": {
                                        "$ref": "#/definitions/TypeDump78"
                                    },
                                    "dhcp_service_intent": {
                                        "$ref": "#/definitions/DHCPServiceIntentDump"
                                    },
                                    "virtual_network_policy": {
                                        "$ref": "#/definitions/VirtualNetworkPolicyDump",
                                        "default": {
                                            "overlay_control_protocol": null
                                        }
                                    },
                                    "mesh_link_count": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 64
                                    },
                                    "mesh_link_speed": {
                                        "$ref": "#/definitions/PortSpeedDump"
                                    }
                                },
                                "required": [
                                    "created_at",
                                    "dhcp_service_intent",
                                    "display_name",
                                    "last_modified_at",
                                    "mesh_link_count",
                                    "mesh_link_speed",
                                    "rack_type_counts",
                                    "rack_types"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump71"
                                    },
                                    "display_name": {
                                        "$ref": "#/definitions/TypeDump72"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump73"
                                    },
                                    "capability": {
                                        "$ref": "#/definitions/TypeDump74"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump75"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump76"
                                    },
                                    "rack_type_counts": {
                                        "$ref": "#/definitions/TypeDump77"
                                    },
                                    "rack_types": {
                                        "$ref": "#/definitions/TypeDump78"
                                    },
                                    "dhcp_service_intent": {
                                        "$ref": "#/definitions/DHCPServiceIntentDump"
                                    },
                                    "virtual_network_policy": {
                                        "$ref": "#/definitions/VirtualNetworkPolicyDump",
                                        "default": {
                                            "overlay_control_protocol": null
                                        }
                                    }
                                },
                                "required": [
                                    "created_at",
                                    "dhcp_service_intent",
                                    "display_name",
                                    "last_modified_at",
                                    "rack_type_counts",
                                    "rack_types"
                                ]
                            }
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDesignTemplatesTemplateIdResponse": {
            "title": "DesignTemplate",
            "oneOf": [
                {
                    "$ref": "#/definitions/TypeDump70"
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeDump71"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeDump72"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeDump73"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeDump74"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeDump75"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump76"
                        },
                        "rack_based_template_counts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "rack_based_template_id": {
                                        "description": "ID of rack based template",
                                        "type": "string"
                                    },
                                    "count": {
                                        "title": "Number of templates with `rack_based_template_id` in template or blueprint",
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                },
                                "required": [
                                    "count",
                                    "rack_based_template_id"
                                ]
                            },
                            "minItems": 1
                        },
                        "rack_based_templates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypeDump70"
                            },
                            "minItems": 1
                        },
                        "superspine": {
                            "type": "object",
                            "properties": {
                                "logical_device": {
                                    "$ref": "#/definitions/LogicalDeviceStatusDump"
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeDump87"
                                },
                                "plane_count": {
                                    "description": "Number of planes",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "superspine_per_plane": {
                                    "description": "Number of superspines per plane",
                                    "type": "integer",
                                    "minimum": 1
                                }
                            },
                            "required": [
                                "logical_device",
                                "plane_count",
                                "superspine_per_plane"
                            ]
                        }
                    },
                    "required": [
                        "created_at",
                        "display_name",
                        "last_modified_at",
                        "rack_based_template_counts",
                        "rack_based_templates",
                        "superspine"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeDump71"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeDump72"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeDump73"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeDump74"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeDump75"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump76"
                        },
                        "rack_type_counts": {
                            "$ref": "#/definitions/TypeDump77"
                        },
                        "rack_types": {
                            "$ref": "#/definitions/TypeDump78"
                        },
                        "dhcp_service_intent": {
                            "$ref": "#/definitions/DHCPServiceIntentDump"
                        },
                        "virtual_network_policy": {
                            "$ref": "#/definitions/VirtualNetworkPolicyDump",
                            "default": {
                                "overlay_control_protocol": null
                            }
                        },
                        "mesh_link_count": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 64
                        },
                        "mesh_link_speed": {
                            "$ref": "#/definitions/PortSpeedDump"
                        }
                    },
                    "required": [
                        "created_at",
                        "dhcp_service_intent",
                        "display_name",
                        "last_modified_at",
                        "mesh_link_count",
                        "mesh_link_speed",
                        "rack_type_counts",
                        "rack_types"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeDump71"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeDump72"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeDump73"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeDump74"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeDump75"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump76"
                        },
                        "rack_type_counts": {
                            "$ref": "#/definitions/TypeDump77"
                        },
                        "rack_types": {
                            "$ref": "#/definitions/TypeDump78"
                        },
                        "dhcp_service_intent": {
                            "$ref": "#/definitions/DHCPServiceIntentDump"
                        },
                        "virtual_network_policy": {
                            "$ref": "#/definitions/VirtualNetworkPolicyDump",
                            "default": {
                                "overlay_control_protocol": null
                            }
                        }
                    },
                    "required": [
                        "created_at",
                        "dhcp_service_intent",
                        "display_name",
                        "last_modified_at",
                        "rack_type_counts",
                        "rack_types"
                    ]
                }
            ]
        },
        "GetApiDeviceOsImagesImageIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the device OS image",
                    "type": "string"
                },
                "platform": {
                    "description": "Device OS platform. Supported platforms are: ['EOS', 'NXOS', 'CUMULUS', 'JUNOS', 'SONIC']",
                    "enum": [
                        "CUMULUS",
                        "EOS",
                        "JUNOS",
                        "NXOS",
                        "SONIC"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Device OS image description",
                    "type": "string"
                },
                "image_name": {
                    "description": "File name of the uploaded image",
                    "type": "string"
                },
                "image_url": {
                    "description": "URL to the device OS image file",
                    "type": "string"
                },
                "image_size": {
                    "description": "Uploaded device OS image file size",
                    "type": "integer",
                    "default": null
                },
                "type": {
                    "description": "Registration type of the device OS image",
                    "type": "string"
                },
                "checksum": {
                    "description": "String representation of the SHA512/SHA256/MD5 checksum. ",
                    "type": "string",
                    "default": null
                },
                "checksum_type": {
                    "enum": [
                        "",
                        "MD5",
                        "SHA256",
                        "SHA512"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "description",
                "id",
                "image_name",
                "image_url",
                "platform",
                "type"
            ]
        },
        "GetApiDeviceOsImagesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of the device OS image",
                                "type": "string"
                            },
                            "platform": {
                                "description": "Device OS platform. Supported platforms are: ['EOS', 'NXOS', 'CUMULUS', 'JUNOS', 'SONIC']",
                                "enum": [
                                    "CUMULUS",
                                    "EOS",
                                    "JUNOS",
                                    "NXOS",
                                    "SONIC"
                                ],
                                "type": "string"
                            },
                            "description": {
                                "description": "Device OS image description",
                                "type": "string"
                            },
                            "image_name": {
                                "description": "File name of the uploaded image",
                                "type": "string"
                            },
                            "image_url": {
                                "description": "URL to the device OS image file",
                                "type": "string"
                            },
                            "image_size": {
                                "description": "Uploaded device OS image file size",
                                "type": "integer",
                                "default": null
                            },
                            "type": {
                                "description": "Registration type of the device OS image",
                                "type": "string"
                            },
                            "checksum": {
                                "description": "String representation of the SHA512/SHA256/MD5 checksum. ",
                                "type": "string",
                                "default": null
                            },
                            "checksum_type": {
                                "enum": [
                                    "",
                                    "MD5",
                                    "SHA256",
                                    "SHA512"
                                ],
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "description",
                            "id",
                            "image_name",
                            "image_url",
                            "platform",
                            "type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDeviceOsPlatformsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "description": "Supported device OS platform",
                                "type": "string"
                            },
                            "checksum": {
                                "type": "array",
                                "items": {
                                    "description": "Checksum algorithm used for the image",
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "checksum",
                            "platform"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDeviceOsStatsResponse": {
            "type": "object",
            "properties": {
                "partition_name": {
                    "description": "Name of the partition containing DOS images",
                    "type": "string"
                },
                "free": {
                    "description": "free space of the image partition in GB",
                    "type": "number"
                },
                "total": {
                    "description": "total space of the image partition in GB",
                    "type": "number"
                }
            },
            "required": [
                "free",
                "partition_name",
                "total"
            ]
        },
        "GetApiDeviceProfileDigestsIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Device Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the device profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "dual_routing_engine": {
                    "$ref": "#/definitions/TypeDump64"
                },
                "physical_device": {
                    "$ref": "#/definitions/TypeDump65"
                },
                "device_profile_type": {
                    "enum": [
                        "modular",
                        "monolithic"
                    ],
                    "type": "string",
                    "default": "monolithic"
                },
                "selector": {
                    "$ref": "#/definitions/TypeDump66",
                    "default": null
                },
                "reference_design_capabilities": {
                    "$ref": "#/definitions/TypeDump67",
                    "default": {
                        "datacenter": "full_support",
                        "freeform": "full_support"
                    }
                },
                "slot_count": {
                    "type": "integer",
                    "default": null
                },
                "chassis_count": {
                    "description": "Applicable only when switch operates in virtual chassis mode.Device profile for switches operating in standalone modewill not have this field.",
                    "type": "integer",
                    "default": null
                },
                "chassis_info": {
                    "type": "object",
                    "properties": {
                        "chassis_profile_id": {
                            "type": "string",
                            "minLength": 1
                        },
                        "selector": {
                            "$ref": "#/definitions/TypeDump66"
                        },
                        "hardware_capabilities": {
                            "$ref": "#/definitions/TypeDump68"
                        },
                        "software_capabilities": {
                            "$ref": "#/definitions/TypeDump69"
                        },
                        "reference_design_capabilities": {
                            "$ref": "#/definitions/TypeDump67",
                            "default": {
                                "datacenter": "full_support",
                                "freeform": "full_support"
                            }
                        },
                        "dual_routing_engine": {
                            "$ref": "#/definitions/TypeDump64"
                        },
                        "linecard_slot_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "minItems": 1,
                            "uniqueItems": true,
                            "default": null
                        },
                        "physical_device": {
                            "$ref": "#/definitions/TypeDump65"
                        }
                    },
                    "required": [
                        "chassis_profile_id",
                        "hardware_capabilities",
                        "selector",
                        "software_capabilities"
                    ],
                    "default": null
                },
                "linecards_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.",
                                "type": "string",
                                "minLength": 1
                            },
                            "selector": {
                                "type": "object",
                                "properties": {
                                    "os": {
                                        "description": "OS of the modular device this linecard is going to be used with.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "model": {
                                        "description": "Hardware model of the linecard.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "version": {
                                        "description": "Hardware revision of the linecard.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "model",
                                    "os"
                                ]
                            },
                            "hardware_capabilities": {
                                "$ref": "#/definitions/TypeDump68"
                            }
                        },
                        "required": [
                            "hardware_capabilities",
                            "linecard_profile_id",
                            "selector"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "hardware_capabilities": {
                    "type": "object",
                    "properties": {
                        "asic": {
                            "description": "Type of Chipset (ASIC) on the device.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "asic"
                    ],
                    "default": null
                }
            },
            "required": [
                "created_at",
                "label",
                "last_modified_at"
            ]
        },
        "GetApiDeviceProfileDigestsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Human friendly name for the Device Profile as read on UI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "predefined": {
                                "description": "Indicates whether the device profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                                "type": "boolean",
                                "default": false
                            },
                            "dual_routing_engine": {
                                "$ref": "#/definitions/TypeDump64"
                            },
                            "physical_device": {
                                "$ref": "#/definitions/TypeDump65"
                            },
                            "device_profile_type": {
                                "enum": [
                                    "modular",
                                    "monolithic"
                                ],
                                "type": "string",
                                "default": "monolithic"
                            },
                            "selector": {
                                "$ref": "#/definitions/TypeDump66",
                                "default": null
                            },
                            "reference_design_capabilities": {
                                "$ref": "#/definitions/TypeDump67",
                                "default": {
                                    "datacenter": "full_support",
                                    "freeform": "full_support"
                                }
                            },
                            "slot_count": {
                                "type": "integer",
                                "default": null
                            },
                            "chassis_count": {
                                "description": "Applicable only when switch operates in virtual chassis mode.Device profile for switches operating in standalone modewill not have this field.",
                                "type": "integer",
                                "default": null
                            },
                            "chassis_info": {
                                "type": "object",
                                "properties": {
                                    "chassis_profile_id": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "selector": {
                                        "$ref": "#/definitions/TypeDump66"
                                    },
                                    "hardware_capabilities": {
                                        "$ref": "#/definitions/TypeDump68"
                                    },
                                    "software_capabilities": {
                                        "$ref": "#/definitions/TypeDump69"
                                    },
                                    "reference_design_capabilities": {
                                        "$ref": "#/definitions/TypeDump67",
                                        "default": {
                                            "datacenter": "full_support",
                                            "freeform": "full_support"
                                        }
                                    },
                                    "dual_routing_engine": {
                                        "$ref": "#/definitions/TypeDump64"
                                    },
                                    "linecard_slot_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "minItems": 1,
                                        "uniqueItems": true,
                                        "default": null
                                    },
                                    "physical_device": {
                                        "$ref": "#/definitions/TypeDump65"
                                    }
                                },
                                "required": [
                                    "chassis_profile_id",
                                    "hardware_capabilities",
                                    "selector",
                                    "software_capabilities"
                                ],
                                "default": null
                            },
                            "linecards_info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "linecard_profile_id": {
                                            "description": "ID of the linecard profile in global catalog.",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "selector": {
                                            "type": "object",
                                            "properties": {
                                                "os": {
                                                    "description": "OS of the modular device this linecard is going to be used with.",
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "model": {
                                                    "description": "Hardware model of the linecard.",
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "version": {
                                                    "description": "Hardware revision of the linecard.",
                                                    "type": "string",
                                                    "default": null
                                                }
                                            },
                                            "required": [
                                                "model",
                                                "os"
                                            ]
                                        },
                                        "hardware_capabilities": {
                                            "$ref": "#/definitions/TypeDump68"
                                        }
                                    },
                                    "required": [
                                        "hardware_capabilities",
                                        "linecard_profile_id",
                                        "selector"
                                    ]
                                },
                                "minItems": 1,
                                "default": null
                            },
                            "hardware_capabilities": {
                                "type": "object",
                                "properties": {
                                    "asic": {
                                        "description": "Type of Chipset (ASIC) on the device.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "asic"
                                ],
                                "default": null
                            }
                        },
                        "required": [
                            "created_at",
                            "label",
                            "last_modified_at"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDeviceProfilesIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Device Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the device profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "dual_routing_engine": {
                    "$ref": "#/definitions/TypeDump64"
                },
                "physical_device": {
                    "$ref": "#/definitions/TypeDump65"
                },
                "device_profile_type": {
                    "enum": [
                        "modular",
                        "monolithic"
                    ],
                    "type": "string",
                    "default": "monolithic"
                },
                "selector": {
                    "$ref": "#/definitions/TypeDump66",
                    "default": null
                },
                "reference_design_capabilities": {
                    "$ref": "#/definitions/TypeDump67",
                    "default": {
                        "datacenter": "full_support",
                        "freeform": "full_support"
                    }
                },
                "slot_count": {
                    "type": "integer",
                    "default": null
                },
                "chassis_count": {
                    "description": "Applicable only when switch operates in virtual chassis mode.Device profile for switches operating in standalone modewill not have this field.",
                    "type": "integer",
                    "default": null
                },
                "chassis_info": {
                    "type": "object",
                    "properties": {
                        "chassis_profile_id": {
                            "type": "string",
                            "minLength": 1
                        },
                        "selector": {
                            "$ref": "#/definitions/TypeDump66"
                        },
                        "hardware_capabilities": {
                            "$ref": "#/definitions/TypeDump68"
                        },
                        "software_capabilities": {
                            "$ref": "#/definitions/TypeDump69"
                        },
                        "reference_design_capabilities": {
                            "$ref": "#/definitions/TypeDump67",
                            "default": {
                                "datacenter": "full_support",
                                "freeform": "full_support"
                            }
                        },
                        "dual_routing_engine": {
                            "$ref": "#/definitions/TypeDump64"
                        },
                        "linecard_slot_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "minItems": 1,
                            "uniqueItems": true,
                            "default": null
                        },
                        "physical_device": {
                            "$ref": "#/definitions/TypeDump65"
                        }
                    },
                    "required": [
                        "chassis_profile_id",
                        "hardware_capabilities",
                        "selector",
                        "software_capabilities"
                    ],
                    "default": null
                },
                "linecards_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.",
                                "type": "string",
                                "minLength": 1
                            },
                            "selector": {
                                "type": "object",
                                "properties": {
                                    "os": {
                                        "description": "OS of the modular device this linecard is going to be used with.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "model": {
                                        "description": "Hardware model of the linecard.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "version": {
                                        "description": "Hardware revision of the linecard.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "model",
                                    "os"
                                ]
                            },
                            "hardware_capabilities": {
                                "$ref": "#/definitions/TypeDump68"
                            }
                        },
                        "required": [
                            "hardware_capabilities",
                            "linecard_profile_id",
                            "selector"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "hardware_capabilities": {
                    "$ref": "#/definitions/TypeDump68",
                    "default": null
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "port_id": {
                                "description": "Port ID",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                            },
                            "display_id": {
                                "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": null
                            },
                            "row_id": {
                                "description": "The row this port belongs to",
                                "type": "integer"
                            },
                            "panel_id": {
                                "description": "The panel this port belongs to",
                                "type": "integer"
                            },
                            "column_id": {
                                "description": "The column this port belongs to",
                                "type": "integer"
                            },
                            "slot_id": {
                                "description": "The module/slot this port belongs to",
                                "type": "integer",
                                "minimum": 0
                            },
                            "failure_domain_id": {
                                "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "connector_type": {
                                "description": "Port transceiver type",
                                "type": "string",
                                "minLength": 1
                            },
                            "transformations": {
                                "description": "Available speed tranformations on this port",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "transformation_id": {
                                            "description": "Transformation ID",
                                            "type": "integer"
                                        },
                                        "is_default": {
                                            "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                            "type": "boolean"
                                        },
                                        "interfaces": {
                                            "description": "Interfaces available in this speedtransformation",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "interface_id": {
                                                        "description": "Interface ID",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Interface name",
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "state": {
                                                        "description": "Is the interface active or inactive",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "setting": {
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "speed": {
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "description": "scalar multiplier for the speed of the interface",
                                                                "type": "integer"
                                                            },
                                                            "unit": {
                                                                "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                "enum": [
                                                                    "",
                                                                    "G",
                                                                    "M"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "value"
                                                        ],
                                                        "default": null
                                                    }
                                                },
                                                "required": [
                                                    "interface_id",
                                                    "name",
                                                    "state"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "interfaces",
                                        "is_default",
                                        "transformation_id"
                                    ]
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "column_id",
                            "connector_type",
                            "failure_domain_id",
                            "panel_id",
                            "port_id",
                            "row_id",
                            "slot_id",
                            "transformations"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "software_capabilities": {
                    "$ref": "#/definitions/TypeDump69",
                    "default": null
                },
                "chassis_profile_id": {
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "slot_configuration": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "slot_id": {
                                "description": "Slot number of the linecard in the physical device. Must be a non-negative integer.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.The ID must be present in an entry in the device profile's linecards_info list.",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "linecard_profile_id",
                            "slot_id"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                }
            },
            "required": [
                "created_at",
                "label",
                "last_modified_at"
            ]
        },
        "GetApiDeviceProfilesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Human friendly name for the Device Profile as read on UI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "predefined": {
                                "description": "Indicates whether the device profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                                "type": "boolean",
                                "default": false
                            },
                            "dual_routing_engine": {
                                "$ref": "#/definitions/TypeDump64"
                            },
                            "physical_device": {
                                "$ref": "#/definitions/TypeDump65"
                            },
                            "device_profile_type": {
                                "enum": [
                                    "modular",
                                    "monolithic"
                                ],
                                "type": "string",
                                "default": "monolithic"
                            },
                            "selector": {
                                "$ref": "#/definitions/TypeDump66",
                                "default": null
                            },
                            "reference_design_capabilities": {
                                "$ref": "#/definitions/TypeDump67",
                                "default": {
                                    "datacenter": "full_support",
                                    "freeform": "full_support"
                                }
                            },
                            "slot_count": {
                                "type": "integer",
                                "default": null
                            },
                            "chassis_count": {
                                "description": "Applicable only when switch operates in virtual chassis mode.Device profile for switches operating in standalone modewill not have this field.",
                                "type": "integer",
                                "default": null
                            },
                            "chassis_info": {
                                "type": "object",
                                "properties": {
                                    "chassis_profile_id": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "selector": {
                                        "$ref": "#/definitions/TypeDump66"
                                    },
                                    "hardware_capabilities": {
                                        "$ref": "#/definitions/TypeDump68"
                                    },
                                    "software_capabilities": {
                                        "$ref": "#/definitions/TypeDump69"
                                    },
                                    "reference_design_capabilities": {
                                        "$ref": "#/definitions/TypeDump67",
                                        "default": {
                                            "datacenter": "full_support",
                                            "freeform": "full_support"
                                        }
                                    },
                                    "dual_routing_engine": {
                                        "$ref": "#/definitions/TypeDump64"
                                    },
                                    "linecard_slot_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "minItems": 1,
                                        "uniqueItems": true,
                                        "default": null
                                    },
                                    "physical_device": {
                                        "$ref": "#/definitions/TypeDump65"
                                    }
                                },
                                "required": [
                                    "chassis_profile_id",
                                    "hardware_capabilities",
                                    "selector",
                                    "software_capabilities"
                                ],
                                "default": null
                            },
                            "linecards_info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "linecard_profile_id": {
                                            "description": "ID of the linecard profile in global catalog.",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "selector": {
                                            "type": "object",
                                            "properties": {
                                                "os": {
                                                    "description": "OS of the modular device this linecard is going to be used with.",
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "model": {
                                                    "description": "Hardware model of the linecard.",
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                "version": {
                                                    "description": "Hardware revision of the linecard.",
                                                    "type": "string",
                                                    "default": null
                                                }
                                            },
                                            "required": [
                                                "model",
                                                "os"
                                            ]
                                        },
                                        "hardware_capabilities": {
                                            "$ref": "#/definitions/TypeDump68"
                                        }
                                    },
                                    "required": [
                                        "hardware_capabilities",
                                        "linecard_profile_id",
                                        "selector"
                                    ]
                                },
                                "minItems": 1,
                                "default": null
                            },
                            "hardware_capabilities": {
                                "$ref": "#/definitions/TypeDump68",
                                "default": null
                            },
                            "ports": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "port_id": {
                                            "description": "Port ID",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 65535
                                        },
                                        "display_id": {
                                            "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "default": null
                                        },
                                        "row_id": {
                                            "description": "The row this port belongs to",
                                            "type": "integer"
                                        },
                                        "panel_id": {
                                            "description": "The panel this port belongs to",
                                            "type": "integer"
                                        },
                                        "column_id": {
                                            "description": "The column this port belongs to",
                                            "type": "integer"
                                        },
                                        "slot_id": {
                                            "description": "The module/slot this port belongs to",
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "failure_domain_id": {
                                            "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "connector_type": {
                                            "description": "Port transceiver type",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "transformations": {
                                            "description": "Available speed tranformations on this port",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "transformation_id": {
                                                        "description": "Transformation ID",
                                                        "type": "integer"
                                                    },
                                                    "is_default": {
                                                        "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                                        "type": "boolean"
                                                    },
                                                    "interfaces": {
                                                        "description": "Interfaces available in this speedtransformation",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "interface_id": {
                                                                    "description": "Interface ID",
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "description": "Interface name",
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "state": {
                                                                    "description": "Is the interface active or inactive",
                                                                    "enum": [
                                                                        "active",
                                                                        "inactive"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "setting": {
                                                                    "type": "string",
                                                                    "default": ""
                                                                },
                                                                "speed": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "description": "scalar multiplier for the speed of the interface",
                                                                            "type": "integer"
                                                                        },
                                                                        "unit": {
                                                                            "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                            "enum": [
                                                                                "",
                                                                                "G",
                                                                                "M"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "unit",
                                                                        "value"
                                                                    ],
                                                                    "default": null
                                                                }
                                                            },
                                                            "required": [
                                                                "interface_id",
                                                                "name",
                                                                "state"
                                                            ]
                                                        },
                                                        "minItems": 1
                                                    }
                                                },
                                                "required": [
                                                    "interfaces",
                                                    "is_default",
                                                    "transformation_id"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "column_id",
                                        "connector_type",
                                        "failure_domain_id",
                                        "panel_id",
                                        "port_id",
                                        "row_id",
                                        "slot_id",
                                        "transformations"
                                    ]
                                },
                                "minItems": 1,
                                "default": null
                            },
                            "software_capabilities": {
                                "$ref": "#/definitions/TypeDump69",
                                "default": null
                            },
                            "chassis_profile_id": {
                                "type": "string",
                                "minLength": 1,
                                "default": null
                            },
                            "slot_configuration": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "slot_id": {
                                            "description": "Slot number of the linecard in the physical device. Must be a non-negative integer.",
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "linecard_profile_id": {
                                            "description": "ID of the linecard profile in global catalog.The ID must be present in an entry in the device profile's linecards_info list.",
                                            "type": "string",
                                            "minLength": 1
                                        }
                                    },
                                    "required": [
                                        "linecard_profile_id",
                                        "slot_id"
                                    ]
                                },
                                "minItems": 1,
                                "default": null
                            }
                        },
                        "required": [
                            "created_at",
                            "label",
                            "last_modified_at"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDocsReferenceDesignSchemasReferenceDesignNameResponse": {
            "type": "object",
            "properties": {
                "nodes": {
                    "description": "Dictionary of node types and their schemas",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "relationships": {
                    "description": "List of relationship definitions between nodes",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {},
                        "maxProperties": 0
                    }
                }
            },
            "required": [
                "nodes",
                "relationships"
            ]
        },
        "GetApiDocsReferenceDesignsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of available reference design names",
                    "type": "array",
                    "items": {
                        "description": "Name of a reference design",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiDocsResponse": {
            "description": "OpenAPI documentation format. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md"
        },
        "GetApiFeaturesResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "disabled",
                            "enabled"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "status"
                ]
            }
        },
        "GetApiLinecardProfilesIdResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Device Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the linecard profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "selector": {
                    "type": "object",
                    "properties": {
                        "os": {
                            "description": "OS of the modular device this linecard is going to be used with.",
                            "type": "string",
                            "minLength": 1
                        },
                        "model": {
                            "description": "Hardware model of the linecard.",
                            "type": "string",
                            "minLength": 1
                        },
                        "version": {
                            "description": "Hardware revision of the linecard.",
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "model",
                        "os"
                    ]
                },
                "hardware_capabilities": {
                    "type": "object",
                    "properties": {
                        "userland": {
                            "description": "What type of userland (application binary/kernel) does the device support.",
                            "type": "integer"
                        },
                        "form_factor": {
                            "description": "How much rack space does the device need.",
                            "type": "string",
                            "minLength": 1
                        },
                        "ecmp_limit": {
                            "description": "What is the maximum number of Equal Cost Multi Path routes. This field changes BGP configuration on the device (ecmp max-paths).",
                            "type": "integer"
                        },
                        "asic": {
                            "description": "Type of Chipset (ASIC) on the device.",
                            "type": "string"
                        },
                        "cpu": {
                            "description": "What is the CPU architecture of the device.",
                            "type": "string",
                            "minLength": 1
                        },
                        "ram": {
                            "description": "How much memory does the device have.",
                            "type": "integer"
                        },
                        "vxlan_supported": {
                            "description": "Does the device support vxlan.",
                            "type": "boolean",
                            "default": null
                        },
                        "copp_strict": {
                            "description": "when set to True, generate strict copp profile config for NXOS",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "$ref": "#/definitions/TypeDump63"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "breakout_capable": {
                            "description": "when set to True for a module, indicates that the ports of this module are breakout capable",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "module": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "$ref": "#/definitions/TypeDump63"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "module",
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "as_seq_num_supported": {
                            "description": "when set to False, skips  rendering anything due to the inability to sequence the AS entry",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "$ref": "#/definitions/TypeDump63"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "routing_instance_supported": {
                            "description": "The flag indicates whether the device supports\"routing instance\" command. This field is furtherused for AAA server related configurationon Junos. When set to True,routing instance command is used withpre-configured mgmt_junos interface; Otherwise,source address is used with the management IPaddress.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "$ref": "#/definitions/TypeDump63"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "bfd_supported": {
                            "description": "Does the device support BFD.",
                            "type": "boolean",
                            "default": null
                        },
                        "vrf_limit": {
                            "description": "VRF range supported by the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "vtep_limit": {
                            "description": "Number of VTEPs supported by the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "vtep_flood_limit": {
                            "description": "Number of flood lists supported per VTEP on the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "max_l2_mtu": {
                            "description": "Maximum L2 MTU supported on the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "max_l3_mtu": {
                            "description": "Maximum L3 MTU supported on the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        }
                    },
                    "required": [
                        "asic",
                        "cpu",
                        "ecmp_limit",
                        "form_factor",
                        "ram",
                        "userland"
                    ]
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "port_id": {
                                "description": "Port ID",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                            },
                            "display_id": {
                                "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": null
                            },
                            "row_id": {
                                "description": "The row this port belongs to",
                                "type": "integer"
                            },
                            "panel_id": {
                                "description": "The panel this port belongs to",
                                "type": "integer"
                            },
                            "column_id": {
                                "description": "The column this port belongs to",
                                "type": "integer"
                            },
                            "slot_id": {
                                "oneOf": [
                                    {
                                        "description": "The module/slot this port belongs to",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    {
                                        "description": "The module/slot this port belongs to",
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                ]
                            },
                            "failure_domain_id": {
                                "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "connector_type": {
                                "description": "Port transceiver type",
                                "type": "string",
                                "minLength": 1
                            },
                            "transformations": {
                                "description": "Available speed tranformations on this port",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "transformation_id": {
                                            "description": "Transformation ID",
                                            "type": "integer"
                                        },
                                        "is_default": {
                                            "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                            "type": "boolean"
                                        },
                                        "interfaces": {
                                            "description": "Interfaces available in this speedtransformation",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "interface_id": {
                                                        "description": "Interface ID",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Interface name",
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "state": {
                                                        "description": "Is the interface active or inactive",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "setting": {
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "speed": {
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "description": "scalar multiplier for the speed of the interface",
                                                                "type": "integer"
                                                            },
                                                            "unit": {
                                                                "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                "enum": [
                                                                    "",
                                                                    "G",
                                                                    "M"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "value"
                                                        ],
                                                        "default": null
                                                    }
                                                },
                                                "required": [
                                                    "interface_id",
                                                    "name",
                                                    "state"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "interfaces",
                                        "is_default",
                                        "transformation_id"
                                    ]
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "column_id",
                            "connector_type",
                            "failure_domain_id",
                            "panel_id",
                            "port_id",
                            "row_id",
                            "slot_id",
                            "transformations"
                        ]
                    },
                    "minItems": 1
                },
                "compatible_chassis": {
                    "description": "Models the chassis profiles which support instances of this linecard profile. Each key is an ID of a chassis profile. The value is a list of slot IDs in that chassis profile into which an instance of this linecard can be plugged. If the value is an empty list or null, then the linecard can be plugged into all slots of the chassis.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "uniqueItems": true,
                        "default": null
                    }
                }
            },
            "required": [
                "compatible_chassis",
                "created_at",
                "hardware_capabilities",
                "label",
                "last_modified_at",
                "ports",
                "selector"
            ]
        },
        "GetApiLinecardProfilesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "label": {
                                "description": "Human friendly name for the Device Profile as read on UI",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "predefined": {
                                "description": "Indicates whether the linecard profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                                "type": "boolean",
                                "default": false
                            },
                            "selector": {
                                "type": "object",
                                "properties": {
                                    "os": {
                                        "description": "OS of the modular device this linecard is going to be used with.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "model": {
                                        "description": "Hardware model of the linecard.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "version": {
                                        "description": "Hardware revision of the linecard.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "model",
                                    "os"
                                ]
                            },
                            "hardware_capabilities": {
                                "type": "object",
                                "properties": {
                                    "userland": {
                                        "description": "What type of userland (application binary/kernel) does the device support.",
                                        "type": "integer"
                                    },
                                    "form_factor": {
                                        "description": "How much rack space does the device need.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "ecmp_limit": {
                                        "description": "What is the maximum number of Equal Cost Multi Path routes. This field changes BGP configuration on the device (ecmp max-paths).",
                                        "type": "integer"
                                    },
                                    "asic": {
                                        "description": "Type of Chipset (ASIC) on the device.",
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "description": "What is the CPU architecture of the device.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "ram": {
                                        "description": "How much memory does the device have.",
                                        "type": "integer"
                                    },
                                    "vxlan_supported": {
                                        "description": "Does the device support vxlan.",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "copp_strict": {
                                        "description": "when set to True, generate strict copp profile config for NXOS",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "$ref": "#/definitions/TypeDump63"
                                                },
                                                "value": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "value",
                                                "version"
                                            ]
                                        },
                                        "minItems": 1,
                                        "default": null
                                    },
                                    "breakout_capable": {
                                        "description": "when set to True for a module, indicates that the ports of this module are breakout capable",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "module": {
                                                    "type": "integer"
                                                },
                                                "version": {
                                                    "$ref": "#/definitions/TypeDump63"
                                                },
                                                "value": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "module",
                                                "value",
                                                "version"
                                            ]
                                        },
                                        "minItems": 1,
                                        "default": null
                                    },
                                    "as_seq_num_supported": {
                                        "description": "when set to False, skips  rendering anything due to the inability to sequence the AS entry",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "$ref": "#/definitions/TypeDump63"
                                                },
                                                "value": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "value",
                                                "version"
                                            ]
                                        },
                                        "minItems": 1,
                                        "default": null
                                    },
                                    "routing_instance_supported": {
                                        "description": "The flag indicates whether the device supports\"routing instance\" command. This field is furtherused for AAA server related configurationon Junos. When set to True,routing instance command is used withpre-configured mgmt_junos interface; Otherwise,source address is used with the management IPaddress.",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "$ref": "#/definitions/TypeDump63"
                                                },
                                                "value": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "value",
                                                "version"
                                            ]
                                        },
                                        "minItems": 1,
                                        "default": null
                                    },
                                    "bfd_supported": {
                                        "description": "Does the device support BFD.",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "vrf_limit": {
                                        "description": "VRF range supported by the device.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "default": null
                                    },
                                    "vtep_limit": {
                                        "description": "Number of VTEPs supported by the device.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "default": null
                                    },
                                    "vtep_flood_limit": {
                                        "description": "Number of flood lists supported per VTEP on the device.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "default": null
                                    },
                                    "max_l2_mtu": {
                                        "description": "Maximum L2 MTU supported on the device.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "default": null
                                    },
                                    "max_l3_mtu": {
                                        "description": "Maximum L3 MTU supported on the device.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "default": null
                                    }
                                },
                                "required": [
                                    "asic",
                                    "cpu",
                                    "ecmp_limit",
                                    "form_factor",
                                    "ram",
                                    "userland"
                                ]
                            },
                            "ports": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "port_id": {
                                            "description": "Port ID",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 65535
                                        },
                                        "display_id": {
                                            "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "default": null
                                        },
                                        "row_id": {
                                            "description": "The row this port belongs to",
                                            "type": "integer"
                                        },
                                        "panel_id": {
                                            "description": "The panel this port belongs to",
                                            "type": "integer"
                                        },
                                        "column_id": {
                                            "description": "The column this port belongs to",
                                            "type": "integer"
                                        },
                                        "slot_id": {
                                            "oneOf": [
                                                {
                                                    "description": "The module/slot this port belongs to",
                                                    "type": "string",
                                                    "minLength": 1
                                                },
                                                {
                                                    "description": "The module/slot this port belongs to",
                                                    "type": "integer",
                                                    "minimum": 0
                                                }
                                            ]
                                        },
                                        "failure_domain_id": {
                                            "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "connector_type": {
                                            "description": "Port transceiver type",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "transformations": {
                                            "description": "Available speed tranformations on this port",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "transformation_id": {
                                                        "description": "Transformation ID",
                                                        "type": "integer"
                                                    },
                                                    "is_default": {
                                                        "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                                        "type": "boolean"
                                                    },
                                                    "interfaces": {
                                                        "description": "Interfaces available in this speedtransformation",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "interface_id": {
                                                                    "description": "Interface ID",
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "description": "Interface name",
                                                                    "type": "string",
                                                                    "minLength": 1
                                                                },
                                                                "state": {
                                                                    "description": "Is the interface active or inactive",
                                                                    "enum": [
                                                                        "active",
                                                                        "inactive"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "setting": {
                                                                    "type": "string",
                                                                    "default": ""
                                                                },
                                                                "speed": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "value": {
                                                                            "description": "scalar multiplier for the speed of the interface",
                                                                            "type": "integer"
                                                                        },
                                                                        "unit": {
                                                                            "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                            "enum": [
                                                                                "",
                                                                                "G",
                                                                                "M"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "unit",
                                                                        "value"
                                                                    ],
                                                                    "default": null
                                                                }
                                                            },
                                                            "required": [
                                                                "interface_id",
                                                                "name",
                                                                "state"
                                                            ]
                                                        },
                                                        "minItems": 1
                                                    }
                                                },
                                                "required": [
                                                    "interfaces",
                                                    "is_default",
                                                    "transformation_id"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "column_id",
                                        "connector_type",
                                        "failure_domain_id",
                                        "panel_id",
                                        "port_id",
                                        "row_id",
                                        "slot_id",
                                        "transformations"
                                    ]
                                },
                                "minItems": 1
                            },
                            "compatible_chassis": {
                                "description": "Models the chassis profiles which support instances of this linecard profile. Each key is an ID of a chassis profile. The value is a list of slot IDs in that chassis profile into which an instance of this linecard can be plugged. If the value is an empty list or null, then the linecard can be plugged into all slots of the chassis.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "uniqueItems": true,
                                    "default": null
                                }
                            }
                        },
                        "required": [
                            "compatible_chassis",
                            "created_at",
                            "hardware_capabilities",
                            "label",
                            "last_modified_at",
                            "ports",
                            "selector"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiMetricdbMetricMetricPathSchemaResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "application": {
                                "description": "Application utilizing metric log",
                                "enum": [
                                    "anomaly",
                                    "cluster_health_info",
                                    "iba",
                                    "memory_troubleshooter"
                                ],
                                "type": "string"
                            },
                            "namespace": {
                                "description": "Namespace of the metric",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of the metric",
                                "type": "string"
                            },
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "keys": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "description": "Key Name",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "$ref": "#/definitions/TypeDump117"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "type"
                                            ]
                                        }
                                    },
                                    "fields": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "description": "Field Name",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "$ref": "#/definitions/TypeDump117"
                                                }
                                            },
                                            "required": [
                                                "name",
                                                "type"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "fields",
                                    "keys"
                                ]
                            }
                        },
                        "required": [
                            "application",
                            "name",
                            "namespace",
                            "schema"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiMetricdbMetricMetricPathStatsResponse": {
            "type": "object",
            "properties": {
                "size": {
                    "description": "Total size consumed by the metric",
                    "type": "integer"
                },
                "available": {
                    "description": "List of available metric files",
                    "type": "array",
                    "items": {
                        "description": "File system path to a metric file",
                        "type": "string"
                    }
                }
            },
            "required": [
                "available",
                "size"
            ]
        },
        "GetApiMetricdbMetricResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "application": {
                                "description": "Application utilizing metric log",
                                "enum": [
                                    "anomaly",
                                    "cluster_health_info",
                                    "iba",
                                    "memory_troubleshooter"
                                ],
                                "type": "string"
                            },
                            "namespace": {
                                "description": "Namespace of the metric",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of the metric",
                                "type": "string"
                            }
                        },
                        "required": [
                            "application",
                            "name",
                            "namespace"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiPackagesPackagenameResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of all versions for the specified package",
                    "type": "array",
                    "items": {
                        "description": "Package filename including version and extension",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiPackagesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of packages with their names and versions",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of the package",
                                "type": "string"
                            },
                            "version": {
                                "description": "Version of the package",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "version"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiPortAliasesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Port alias ID",
                                "type": "string"
                            },
                            "label": {
                                "description": "Port alias label",
                                "type": "string",
                                "pattern": "^.*[a-zA-Z]+.*$"
                            },
                            "value": {
                                "title": "PortSetOrAny",
                                "description": "Multiple port ranges separated by comma or \"any\"",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label",
                            "value"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiProductUsageDigestResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "\"init\" - report generation has not yet begun; \"in_progress\" - report generation has begun but incomplete; \"complete\" - report generation has completed successfully; \"failed\" - report generation has completed unsuccessfully; \"being_deleted\" - report has been requested for a deletion.",
                        "enum": [
                            "being_deleted",
                            "complete",
                            "failed",
                            "in_progress",
                            "init"
                        ],
                        "type": "string"
                    },
                    "error": {
                        "description": "Human readable message if report generation has failed",
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "status"
                ],
                "additionalProperties": false
            }
        },
        "GetApiProductUsageNightlyResponse": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "auth_providers": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "Number of providers of a specific type",
                                "type": "integer"
                            }
                        },
                        "blueprints": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "label": {
                                        "description": "Name of the blueprint",
                                        "type": "string"
                                    },
                                    "reference_design": {
                                        "description": "Reference design of the blueprint",
                                        "enum": [
                                            "freeform",
                                            "temperature",
                                            "two_stage_l3clos"
                                        ],
                                        "type": "string"
                                    },
                                    "devices": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "vendor": {
                                                    "description": "The name of manufacturer",
                                                    "type": "string"
                                                },
                                                "agent_type": {
                                                    "description": "Type of the system agent",
                                                    "enum": [
                                                        "offbox",
                                                        "onbox"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operation_mode": {
                                                    "description": "AOS agent operation mode",
                                                    "enum": [
                                                        "fullControl",
                                                        "notInstalled",
                                                        "telemetryOnly",
                                                        "unknown"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "agent_type",
                                                "operation_mode",
                                                "vendor"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "counts": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "Number of physical entities in a blueprint",
                                            "type": "integer"
                                        }
                                    },
                                    "logical_counts": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "Number of logical entities in a blueprint",
                                            "type": "integer"
                                        }
                                    },
                                    "dci": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "Number of Over-The-Top DCI sessions",
                                            "type": "integer"
                                        }
                                    },
                                    "design_subcategory": {
                                        "description": "For two_stage_l3clos design indicates which exact type of the blueprint this is",
                                        "enum": [
                                            "3stage",
                                            "5stage",
                                            "l3collapsed",
                                            "rail_collapsed"
                                        ],
                                        "type": "string",
                                        "default": null
                                    },
                                    "virtual_infra": {
                                        "type": "object",
                                        "properties": {
                                            "counts": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of Virtual Infra Managers of a specific type in a blueprint",
                                                    "type": "integer"
                                                }
                                            },
                                            "hypervisors_per_vim": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of Hypervisor hosts for a specific VIM in a blueprint",
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "required": [
                                            "counts",
                                            "hypervisors_per_vim"
                                        ]
                                    },
                                    "security_assurance": {
                                        "type": "object",
                                        "properties": {
                                            "security_policy_count": {
                                                "description": "Number of security policies in a blueprint",
                                                "type": "integer"
                                            },
                                            "rules_per_policy": {
                                                "type": "object",
                                                "properties": {
                                                    "stats": {
                                                        "type": "object",
                                                        "properties": {
                                                            "total": {
                                                                "type": "integer",
                                                                "minimum": 0
                                                            },
                                                            "min": {
                                                                "type": "integer",
                                                                "minimum": 0
                                                            },
                                                            "max": {
                                                                "type": "integer",
                                                                "minimum": 0
                                                            },
                                                            "mean": {
                                                                "type": "number",
                                                                "minimum": 0.0
                                                            },
                                                            "median": {
                                                                "type": "number",
                                                                "minimum": 0.0
                                                            },
                                                            "mode": {
                                                                "type": "number",
                                                                "minimum": 0.0,
                                                                "default": null
                                                            },
                                                            "variance": {
                                                                "type": "number",
                                                                "minimum": 0.0,
                                                                "default": null
                                                            },
                                                            "std_dev": {
                                                                "type": "number",
                                                                "minimum": 0.0,
                                                                "default": null
                                                            }
                                                        },
                                                        "required": [
                                                            "max",
                                                            "mean",
                                                            "median",
                                                            "min",
                                                            "total"
                                                        ]
                                                    },
                                                    "data": {
                                                        "description": "Distribution of rules per policy in a form of histogram",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "description": "Number of occurrences",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "x_axis": {
                                                        "type": "object",
                                                        "properties": {
                                                            "label": {
                                                                "description": "Label of X axis for a histogram from data",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "label"
                                                        ]
                                                    },
                                                    "y_axis": {
                                                        "type": "object",
                                                        "properties": {
                                                            "label": {
                                                                "description": "Label of Y axis for a histogram from data",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "label"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "data",
                                                    "stats",
                                                    "x_axis",
                                                    "y_axis"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "rules_per_policy",
                                            "security_policy_count"
                                        ]
                                    },
                                    "revisions": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "counts": {
                                                    "type": "object",
                                                    "properties": {
                                                        "nodes": {
                                                            "description": "Number of nodes in the revision",
                                                            "type": "integer"
                                                        },
                                                        "relationships": {
                                                            "description": "Number of relationships in the revision",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "nodes",
                                                        "relationships"
                                                    ]
                                                },
                                                "size": {
                                                    "description": "Size of backup files for the revision stored in the filesystem in bytes",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "counts",
                                                "size"
                                            ]
                                        }
                                    },
                                    "iba": {
                                        "type": "object",
                                        "properties": {
                                            "probes": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of probes of this type",
                                                    "type": "integer"
                                                }
                                            },
                                            "predefined_user_customized_probes": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of predefined probes of this type",
                                                    "type": "integer"
                                                }
                                            },
                                            "disabled_probes": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of disabled probes",
                                                    "type": "integer"
                                                }
                                            },
                                            "auto_enabled_predefined_probes": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of such probes",
                                                    "type": "integer"
                                                }
                                            },
                                            "not_auto_enabled_predefined_probes": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of such probes",
                                                    "type": "integer"
                                                }
                                            },
                                            "dashboards": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of dashboards of this type",
                                                    "type": "integer"
                                                }
                                            },
                                            "predefined_user_customized_dashboards": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of predefined dashboards of this type",
                                                    "type": "integer"
                                                }
                                            },
                                            "disabled_dashboards": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of disabled predefined dashboards with such name",
                                                    "type": "integer"
                                                }
                                            },
                                            "auto_enabled_predefined_dashboards": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of such dashboards",
                                                    "type": "integer"
                                                }
                                            },
                                            "not_auto_enabled_predefined_dashboards": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "description": "Number of such probes",
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "required": [
                                            "auto_enabled_predefined_dashboards",
                                            "auto_enabled_predefined_probes",
                                            "dashboards",
                                            "disabled_dashboards",
                                            "disabled_probes",
                                            "not_auto_enabled_predefined_dashboards",
                                            "not_auto_enabled_predefined_probes",
                                            "predefined_user_customized_dashboards",
                                            "predefined_user_customized_probes",
                                            "probes"
                                        ]
                                    }
                                },
                                "required": [
                                    "counts",
                                    "dci",
                                    "devices",
                                    "iba",
                                    "label",
                                    "logical_counts",
                                    "reference_design",
                                    "revisions",
                                    "security_assurance",
                                    "virtual_infra"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "streaming_receivers": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "Number of receivers of a specific type",
                                "type": "integer"
                            }
                        },
                        "syslog_config_count": {
                            "description": "Number of configured syslog servers",
                            "type": "integer"
                        },
                        "rci_enabled_blueprints": {
                            "description": "Blueprint ID with RCI enabled",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "status": {
                            "description": "\"init\" - report generation has not yet begun; \"in_progress\" - report generation has begun but incomplete; \"complete\" - report generation has completed successfully; \"failed\" - report generation has completed unsuccessfully; \"being_deleted\" - report has been requested for a deletion.",
                            "enum": [
                                "being_deleted",
                                "complete",
                                "failed",
                                "in_progress",
                                "init"
                            ],
                            "type": "string"
                        },
                        "error": {
                            "description": "Human readable message if report generation has failed",
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "auth_providers",
                        "blueprints",
                        "rci_enabled_blueprints",
                        "status",
                        "streaming_receivers",
                        "syslog_config_count"
                    ],
                    "additionalProperties": false
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "default": null
                        },
                        "label": {
                            "type": "string",
                            "default": null
                        },
                        "description": {
                            "type": "string",
                            "default": null
                        },
                        "report": {
                            "description": "Widget's structure.\n\n    Recursive structure: report[\"items\"] = [<section>, <section>, ...],\n\n    section = {\n        'type': 'section',\n        'title': <title>,\n        'items': [<section_element>, <section_element>, ...],\n    }\n\n    <section_element> is one of\n    1. widget data\n    2. <section> (maximal supported depth is 7)\n    ",
                            "type": "object",
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "description": "It is a constant \"section\"",
                                                "const": "section"
                                            },
                                            "title": {
                                                "description": "Section title",
                                                "type": "string"
                                            },
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "anyOf": [
                                                        {
                                                            "$ref": "#/definitions/TypeDump13"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump21"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump22"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump23"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump24"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump25"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump26"
                                                        },
                                                        {
                                                            "$ref": "#/definitions/TypeDump27"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "description": "It is a constant \"section\"",
                                                                    "const": "section"
                                                                },
                                                                "title": {
                                                                    "description": "Section title",
                                                                    "type": "string"
                                                                },
                                                                "items": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "anyOf": [
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump13"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump21"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump22"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump23"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump24"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump25"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump26"
                                                                            },
                                                                            {
                                                                                "$ref": "#/definitions/TypeDump27"
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "description": "It is a constant \"section\"",
                                                                                        "const": "section"
                                                                                    },
                                                                                    "title": {
                                                                                        "description": "Section title",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "items": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump13"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump21"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump22"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump23"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump24"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump25"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump26"
                                                                                                },
                                                                                                {
                                                                                                    "$ref": "#/definitions/TypeDump27"
                                                                                                },
                                                                                                {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "description": "It is a constant \"section\"",
                                                                                                            "const": "section"
                                                                                                        },
                                                                                                        "title": {
                                                                                                            "description": "Section title",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "items": {
                                                                                                            "type": "array",
                                                                                                            "items": {
                                                                                                                "anyOf": [
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump13"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump21"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump22"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump23"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump24"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump25"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump26"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "$ref": "#/definitions/TypeDump27"
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "description": "It is a constant \"section\"",
                                                                                                                                "const": "section"
                                                                                                                            },
                                                                                                                            "title": {
                                                                                                                                "description": "Section title",
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "items": {
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "anyOf": [
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump13"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump21"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump22"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump23"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump24"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump25"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump26"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "$ref": "#/definitions/TypeDump27"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "description": "It is a constant \"section\"",
                                                                                                                                                    "const": "section"
                                                                                                                                                },
                                                                                                                                                "title": {
                                                                                                                                                    "description": "Section title",
                                                                                                                                                    "type": "string"
                                                                                                                                                },
                                                                                                                                                "items": {
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "anyOf": [
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump13"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump21"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump22"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump23"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump24"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump25"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump26"
                                                                                                                                                            },
                                                                                                                                                            {
                                                                                                                                                                "$ref": "#/definitions/TypeDump27"
                                                                                                                                                            }
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "items",
                                                                                                                                                "title",
                                                                                                                                                "type"
                                                                                                                                            ],
                                                                                                                                            "additionalProperties": false
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "items",
                                                                                                                            "title",
                                                                                                                            "type"
                                                                                                                        ],
                                                                                                                        "additionalProperties": false
                                                                                                                    }
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "items",
                                                                                                        "title",
                                                                                                        "type"
                                                                                                    ],
                                                                                                    "additionalProperties": false
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "items",
                                                                                    "title",
                                                                                    "type"
                                                                                ],
                                                                                "additionalProperties": false
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "items",
                                                                "title",
                                                                "type"
                                                            ],
                                                            "additionalProperties": false
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "items",
                                            "title",
                                            "type"
                                        ],
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "required": [
                                "items"
                            ]
                        }
                    },
                    "required": [
                        "report"
                    ]
                }
            ]
        },
        "GetApiProductUsageResponse": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "auth_providers": {
                                "type": "object",
                                "additionalProperties": {
                                    "description": "Number of providers of a specific type",
                                    "type": "integer"
                                }
                            },
                            "blueprints": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Name of the blueprint",
                                            "type": "string"
                                        },
                                        "reference_design": {
                                            "description": "Reference design of the blueprint",
                                            "enum": [
                                                "freeform",
                                                "temperature",
                                                "two_stage_l3clos"
                                            ],
                                            "type": "string"
                                        },
                                        "devices": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "vendor": {
                                                        "description": "The name of manufacturer",
                                                        "type": "string"
                                                    },
                                                    "agent_type": {
                                                        "description": "Type of the system agent",
                                                        "enum": [
                                                            "offbox",
                                                            "onbox"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "operation_mode": {
                                                        "description": "AOS agent operation mode",
                                                        "enum": [
                                                            "fullControl",
                                                            "notInstalled",
                                                            "telemetryOnly",
                                                            "unknown"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "agent_type",
                                                    "operation_mode",
                                                    "vendor"
                                                ],
                                                "additionalProperties": false
                                            }
                                        },
                                        "counts": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "Number of physical entities in a blueprint",
                                                "type": "integer"
                                            }
                                        },
                                        "logical_counts": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "Number of logical entities in a blueprint",
                                                "type": "integer"
                                            }
                                        },
                                        "dci": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "description": "Number of Over-The-Top DCI sessions",
                                                "type": "integer"
                                            }
                                        },
                                        "design_subcategory": {
                                            "description": "For two_stage_l3clos design indicates which exact type of the blueprint this is",
                                            "enum": [
                                                "3stage",
                                                "5stage",
                                                "l3collapsed",
                                                "rail_collapsed"
                                            ],
                                            "type": "string",
                                            "default": null
                                        },
                                        "virtual_infra": {
                                            "type": "object",
                                            "properties": {
                                                "counts": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of Virtual Infra Managers of a specific type in a blueprint",
                                                        "type": "integer"
                                                    }
                                                },
                                                "hypervisors_per_vim": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of Hypervisor hosts for a specific VIM in a blueprint",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "counts",
                                                "hypervisors_per_vim"
                                            ]
                                        },
                                        "security_assurance": {
                                            "type": "object",
                                            "properties": {
                                                "security_policy_count": {
                                                    "description": "Number of security policies in a blueprint",
                                                    "type": "integer"
                                                },
                                                "rules_per_policy": {
                                                    "type": "object",
                                                    "properties": {
                                                        "stats": {
                                                            "type": "object",
                                                            "properties": {
                                                                "total": {
                                                                    "type": "integer",
                                                                    "minimum": 0
                                                                },
                                                                "min": {
                                                                    "type": "integer",
                                                                    "minimum": 0
                                                                },
                                                                "max": {
                                                                    "type": "integer",
                                                                    "minimum": 0
                                                                },
                                                                "mean": {
                                                                    "type": "number",
                                                                    "minimum": 0.0
                                                                },
                                                                "median": {
                                                                    "type": "number",
                                                                    "minimum": 0.0
                                                                },
                                                                "mode": {
                                                                    "type": "number",
                                                                    "minimum": 0.0,
                                                                    "default": null
                                                                },
                                                                "variance": {
                                                                    "type": "number",
                                                                    "minimum": 0.0,
                                                                    "default": null
                                                                },
                                                                "std_dev": {
                                                                    "type": "number",
                                                                    "minimum": 0.0,
                                                                    "default": null
                                                                }
                                                            },
                                                            "required": [
                                                                "max",
                                                                "mean",
                                                                "median",
                                                                "min",
                                                                "total"
                                                            ]
                                                        },
                                                        "data": {
                                                            "description": "Distribution of rules per policy in a form of histogram",
                                                            "type": "object",
                                                            "additionalProperties": {
                                                                "description": "Number of occurrences",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "x_axis": {
                                                            "type": "object",
                                                            "properties": {
                                                                "label": {
                                                                    "description": "Label of X axis for a histogram from data",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "label"
                                                            ]
                                                        },
                                                        "y_axis": {
                                                            "type": "object",
                                                            "properties": {
                                                                "label": {
                                                                    "description": "Label of Y axis for a histogram from data",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "label"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "data",
                                                        "stats",
                                                        "x_axis",
                                                        "y_axis"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "rules_per_policy",
                                                "security_policy_count"
                                            ]
                                        },
                                        "revisions": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "counts": {
                                                        "type": "object",
                                                        "properties": {
                                                            "nodes": {
                                                                "description": "Number of nodes in the revision",
                                                                "type": "integer"
                                                            },
                                                            "relationships": {
                                                                "description": "Number of relationships in the revision",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "nodes",
                                                            "relationships"
                                                        ]
                                                    },
                                                    "size": {
                                                        "description": "Size of backup files for the revision stored in the filesystem in bytes",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "counts",
                                                    "size"
                                                ]
                                            }
                                        },
                                        "iba": {
                                            "type": "object",
                                            "properties": {
                                                "probes": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of probes of this type",
                                                        "type": "integer"
                                                    }
                                                },
                                                "predefined_user_customized_probes": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of predefined probes of this type",
                                                        "type": "integer"
                                                    }
                                                },
                                                "disabled_probes": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of disabled probes",
                                                        "type": "integer"
                                                    }
                                                },
                                                "auto_enabled_predefined_probes": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of such probes",
                                                        "type": "integer"
                                                    }
                                                },
                                                "not_auto_enabled_predefined_probes": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of such probes",
                                                        "type": "integer"
                                                    }
                                                },
                                                "dashboards": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of dashboards of this type",
                                                        "type": "integer"
                                                    }
                                                },
                                                "predefined_user_customized_dashboards": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of predefined dashboards of this type",
                                                        "type": "integer"
                                                    }
                                                },
                                                "disabled_dashboards": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of disabled predefined dashboards with such name",
                                                        "type": "integer"
                                                    }
                                                },
                                                "auto_enabled_predefined_dashboards": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of such dashboards",
                                                        "type": "integer"
                                                    }
                                                },
                                                "not_auto_enabled_predefined_dashboards": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "description": "Number of such probes",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "auto_enabled_predefined_dashboards",
                                                "auto_enabled_predefined_probes",
                                                "dashboards",
                                                "disabled_dashboards",
                                                "disabled_probes",
                                                "not_auto_enabled_predefined_dashboards",
                                                "not_auto_enabled_predefined_probes",
                                                "predefined_user_customized_dashboards",
                                                "predefined_user_customized_probes",
                                                "probes"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "counts",
                                        "dci",
                                        "devices",
                                        "iba",
                                        "label",
                                        "logical_counts",
                                        "reference_design",
                                        "revisions",
                                        "security_assurance",
                                        "virtual_infra"
                                    ],
                                    "additionalProperties": false
                                }
                            },
                            "streaming_receivers": {
                                "type": "object",
                                "additionalProperties": {
                                    "description": "Number of receivers of a specific type",
                                    "type": "integer"
                                }
                            },
                            "syslog_config_count": {
                                "description": "Number of configured syslog servers",
                                "type": "integer"
                            },
                            "rci_enabled_blueprints": {
                                "description": "Blueprint ID with RCI enabled",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "status": {
                                "description": "\"init\" - report generation has not yet begun; \"in_progress\" - report generation has begun but incomplete; \"complete\" - report generation has completed successfully; \"failed\" - report generation has completed unsuccessfully; \"being_deleted\" - report has been requested for a deletion.",
                                "enum": [
                                    "being_deleted",
                                    "complete",
                                    "failed",
                                    "in_progress",
                                    "init"
                                ],
                                "type": "string"
                            },
                            "error": {
                                "description": "Human readable message if report generation has failed",
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "auth_providers",
                            "blueprints",
                            "rci_enabled_blueprints",
                            "status",
                            "streaming_receivers",
                            "syslog_config_count"
                        ],
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "default": null
                            },
                            "label": {
                                "type": "string",
                                "default": null
                            },
                            "description": {
                                "type": "string",
                                "default": null
                            },
                            "report": {
                                "description": "Widget's structure.\n\n    Recursive structure: report[\"items\"] = [<section>, <section>, ...],\n\n    section = {\n        'type': 'section',\n        'title': <title>,\n        'items': [<section_element>, <section_element>, ...],\n    }\n\n    <section_element> is one of\n    1. widget data\n    2. <section> (maximal supported depth is 7)\n    ",
                                "type": "object",
                                "properties": {
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "description": "It is a constant \"section\"",
                                                    "const": "section"
                                                },
                                                "title": {
                                                    "description": "Section title",
                                                    "type": "string"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "anyOf": [
                                                            {
                                                                "$ref": "#/definitions/TypeDump13"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump21"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump22"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump23"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump24"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump25"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump26"
                                                            },
                                                            {
                                                                "$ref": "#/definitions/TypeDump27"
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "description": "It is a constant \"section\"",
                                                                        "const": "section"
                                                                    },
                                                                    "title": {
                                                                        "description": "Section title",
                                                                        "type": "string"
                                                                    },
                                                                    "items": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump13"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump21"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump22"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump23"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump24"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump25"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump26"
                                                                                },
                                                                                {
                                                                                    "$ref": "#/definitions/TypeDump27"
                                                                                },
                                                                                {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "description": "It is a constant \"section\"",
                                                                                            "const": "section"
                                                                                        },
                                                                                        "title": {
                                                                                            "description": "Section title",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "items": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "anyOf": [
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump13"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump21"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump22"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump23"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump24"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump25"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump26"
                                                                                                    },
                                                                                                    {
                                                                                                        "$ref": "#/definitions/TypeDump27"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "description": "It is a constant \"section\"",
                                                                                                                "const": "section"
                                                                                                            },
                                                                                                            "title": {
                                                                                                                "description": "Section title",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "items": {
                                                                                                                "type": "array",
                                                                                                                "items": {
                                                                                                                    "anyOf": [
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump13"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump21"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump22"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump23"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump24"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump25"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump26"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "$ref": "#/definitions/TypeDump27"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "type": {
                                                                                                                                    "description": "It is a constant \"section\"",
                                                                                                                                    "const": "section"
                                                                                                                                },
                                                                                                                                "title": {
                                                                                                                                    "description": "Section title",
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "items": {
                                                                                                                                    "type": "array",
                                                                                                                                    "items": {
                                                                                                                                        "anyOf": [
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump13"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump21"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump22"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump23"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump24"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump25"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump26"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "$ref": "#/definitions/TypeDump27"
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "type": "object",
                                                                                                                                                "properties": {
                                                                                                                                                    "type": {
                                                                                                                                                        "description": "It is a constant \"section\"",
                                                                                                                                                        "const": "section"
                                                                                                                                                    },
                                                                                                                                                    "title": {
                                                                                                                                                        "description": "Section title",
                                                                                                                                                        "type": "string"
                                                                                                                                                    },
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "anyOf": [
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump13"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump21"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump22"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump23"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump24"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump25"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump26"
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "$ref": "#/definitions/TypeDump27"
                                                                                                                                                                }
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "required": [
                                                                                                                                                    "items",
                                                                                                                                                    "title",
                                                                                                                                                    "type"
                                                                                                                                                ],
                                                                                                                                                "additionalProperties": false
                                                                                                                                            }
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "required": [
                                                                                                                                "items",
                                                                                                                                "title",
                                                                                                                                "type"
                                                                                                                            ],
                                                                                                                            "additionalProperties": false
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "items",
                                                                                                            "title",
                                                                                                            "type"
                                                                                                        ],
                                                                                                        "additionalProperties": false
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "items",
                                                                                        "title",
                                                                                        "type"
                                                                                    ],
                                                                                    "additionalProperties": false
                                                                                }
                                                                            ]
                                                                        }
                                                                    }
                                                                },
                                                                "required": [
                                                                    "items",
                                                                    "title",
                                                                    "type"
                                                                ],
                                                                "additionalProperties": false
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "items",
                                                "title",
                                                "type"
                                            ],
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "required": [
                                    "items"
                                ]
                            }
                        },
                        "required": [
                            "report"
                        ]
                    }
                ]
            }
        },
        "GetApiPropertySetsPropertySetIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Property set ID",
                    "type": "string"
                },
                "label": {
                    "description": "Property set label",
                    "type": "string"
                },
                "values": {
                    "description": "Dictionary of property key-value pairs",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "values_yaml": {
                    "description": "YAML representation of property set values",
                    "type": "string"
                },
                "blueprints": {
                    "description": "List of blueprint IDs that include this property set",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "blueprints",
                "id",
                "label",
                "values",
                "values_yaml"
            ]
        },
        "GetApiPropertySetsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Property set ID",
                                "type": "string"
                            },
                            "label": {
                                "description": "Property set label",
                                "type": "string"
                            },
                            "values": {
                                "description": "Dictionary of property key-value pairs",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "values_yaml": {
                                "description": "YAML representation of property set values",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "label",
                            "values",
                            "values_yaml"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiRciInstancesRciIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "RCI instance ID",
                    "type": "string"
                },
                "label": {
                    "description": "RCI instance label",
                    "type": "string"
                },
                "blueprints": {
                    "description": "Blueprint id's",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "processors": {
                    "description": "List of processors for the RCI instance. Available processors: physical_connectivity, underlay_reachability, external_reachability. See also: /rci/processors",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    }
                },
                "trigger_period": {
                    "description": "Time between executions of this RCI instance (seconds)",
                    "type": "number"
                },
                "state": {
                    "description": "State of the RCI instance.",
                    "enum": [
                        "cleanup_done",
                        "cleanup_pending",
                        "created",
                        "delete_pending",
                        "error",
                        "in_progress",
                        "modelers_done",
                        "modelers_pending",
                        "operational",
                        "pause_pending",
                        "paused",
                        "ready",
                        "stopped",
                        "unpause_pending"
                    ],
                    "type": "string"
                },
                "root_cause_count": {
                    "description": "Number of all root causes detected in the last successful run of this RCI instance.",
                    "type": "integer"
                },
                "top_level_root_cause_count": {
                    "description": "Number of top level root causes detected in the last successful run of this RCI instance.",
                    "type": "integer"
                },
                "root_causes": {
                    "description": "All root causes identified and still exists as of status_updated_at",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Unique identifier of the root cause in this RCI instance",
                                "type": "string"
                            },
                            "context": {
                                "description": "Context used to relate root cause to blueprint (reference design specific)",
                                "type": "string"
                            },
                            "description": {
                                "description": "Textual form of the root cause",
                                "type": "string"
                            },
                            "symptoms": {
                                "description": "List of symptoms caused by this root cause",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier of the symptom in this RCI instance",
                                            "type": "string"
                                        },
                                        "context": {
                                            "description": "Context used to relate symptom to blueprint (reference design specific)",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Textual form of the symptom",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "context",
                                        "description",
                                        "id"
                                    ]
                                }
                            },
                            "alternative_root_causes": {
                                "description": "List of member root cause ids",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "anomaly_count": {
                                "description": "Number of anomalies caused by this root cause grouped by type",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            }
                        },
                        "required": [
                            "alternative_root_causes",
                            "anomaly_count",
                            "context",
                            "description",
                            "id",
                            "symptoms"
                        ]
                    }
                },
                "run_count": {
                    "description": "Number of tacfsd runs.",
                    "type": "integer"
                },
                "error_count": {
                    "description": "Number of failed tacfsd runs.",
                    "type": "integer"
                },
                "last_errors": {
                    "description": "Fixed size list of the most recent errors for this RCI instance.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "description": "Error message",
                                "type": "string"
                            }
                        },
                        "required": [
                            "message"
                        ]
                    }
                },
                "reason": {
                    "description": "A reason why this RCI instance is in its current state.",
                    "type": "string"
                },
                "paused": {
                    "description": "Whether an instance is paused.",
                    "type": "boolean"
                },
                "stopped": {
                    "description": "Whether an instance is stopped.",
                    "type": "boolean"
                },
                "replay": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a replay config is enabled.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "enabled"
                    ]
                }
            },
            "required": [
                "blueprints",
                "error_count",
                "id",
                "label",
                "last_errors",
                "paused",
                "processors",
                "reason",
                "replay",
                "root_cause_count",
                "root_causes",
                "run_count",
                "state",
                "stopped",
                "top_level_root_cause_count",
                "trigger_period"
            ]
        },
        "GetApiRciInstancesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "RCI instance ID",
                                "type": "string"
                            },
                            "label": {
                                "description": "RCI instance label",
                                "type": "string"
                            },
                            "blueprints": {
                                "description": "Blueprint id's",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "processors": {
                                "description": "List of processors for the RCI instance. Available processors: physical_connectivity, underlay_reachability, external_reachability. See also: /rci/processors",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ]
                                }
                            },
                            "trigger_period": {
                                "description": "Time between executions of this RCI instance (seconds)",
                                "type": "number"
                            },
                            "state": {
                                "description": "State of the RCI instance.",
                                "enum": [
                                    "cleanup_done",
                                    "cleanup_pending",
                                    "created",
                                    "delete_pending",
                                    "error",
                                    "in_progress",
                                    "modelers_done",
                                    "modelers_pending",
                                    "operational",
                                    "pause_pending",
                                    "paused",
                                    "ready",
                                    "stopped",
                                    "unpause_pending"
                                ],
                                "type": "string"
                            },
                            "root_cause_count": {
                                "description": "Number of all root causes detected in the last successful run of this RCI instance.",
                                "type": "integer"
                            },
                            "top_level_root_cause_count": {
                                "description": "Number of top level root causes detected in the last successful run of this RCI instance.",
                                "type": "integer"
                            },
                            "root_causes": {
                                "description": "All root causes identified and still exists as of status_updated_at",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier of the root cause in this RCI instance",
                                            "type": "string"
                                        },
                                        "context": {
                                            "description": "Context used to relate root cause to blueprint (reference design specific)",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Textual form of the root cause",
                                            "type": "string"
                                        },
                                        "symptoms": {
                                            "description": "List of symptoms caused by this root cause",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Unique identifier of the symptom in this RCI instance",
                                                        "type": "string"
                                                    },
                                                    "context": {
                                                        "description": "Context used to relate symptom to blueprint (reference design specific)",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "Textual form of the symptom",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "context",
                                                    "description",
                                                    "id"
                                                ]
                                            }
                                        },
                                        "alternative_root_causes": {
                                            "description": "List of member root cause ids",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "anomaly_count": {
                                            "description": "Number of anomalies caused by this root cause grouped by type",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "integer",
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "required": [
                                        "alternative_root_causes",
                                        "anomaly_count",
                                        "context",
                                        "description",
                                        "id",
                                        "symptoms"
                                    ]
                                }
                            },
                            "run_count": {
                                "description": "Number of tacfsd runs.",
                                "type": "integer"
                            },
                            "error_count": {
                                "description": "Number of failed tacfsd runs.",
                                "type": "integer"
                            },
                            "last_errors": {
                                "description": "Fixed size list of the most recent errors for this RCI instance.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            },
                            "reason": {
                                "description": "A reason why this RCI instance is in its current state.",
                                "type": "string"
                            },
                            "paused": {
                                "description": "Whether an instance is paused.",
                                "type": "boolean"
                            },
                            "stopped": {
                                "description": "Whether an instance is stopped.",
                                "type": "boolean"
                            },
                            "replay": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "description": "Whether a replay config is enabled.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "enabled"
                                ]
                            }
                        },
                        "required": [
                            "blueprints",
                            "error_count",
                            "id",
                            "label",
                            "last_errors",
                            "paused",
                            "processors",
                            "reason",
                            "replay",
                            "root_cause_count",
                            "root_causes",
                            "run_count",
                            "state",
                            "stopped",
                            "top_level_root_cause_count",
                            "trigger_period"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiRciProcessorsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "ref_designs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "description",
                            "label",
                            "name",
                            "ref_designs"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesAsnPoolsIdResponse": {
            "title": "AsnPoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/TypeDump88"
                },
                "used": {
                    "$ref": "#/definitions/TypeDump89"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeDump90"
                },
                "ranges": {
                    "description": "List of ASN ranges",
                    "type": "array",
                    "items": {
                        "title": "AsnRange",
                        "description": "range of AS numbers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "status": {
                                "description": "status of this range",
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            },
                            "first": {
                                "description": "First ASN in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            },
                            "last": {
                                "description": "Last ASN in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "ranges",
                "status",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "GetApiResourcesAsnPoolsResponse": {
            "title": "AsnPoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "AsnPoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "ranges": {
                                "description": "List of ASN ranges",
                                "type": "array",
                                "items": {
                                    "title": "AsnRange",
                                    "description": "range of AS numbers",
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "$ref": "#/definitions/TypeDump88"
                                        },
                                        "used": {
                                            "$ref": "#/definitions/TypeDump89"
                                        },
                                        "used_percentage": {
                                            "$ref": "#/definitions/TypeDump90"
                                        },
                                        "status": {
                                            "description": "status of this range",
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        },
                                        "first": {
                                            "description": "First ASN in range (inclusive)",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4294967295
                                        },
                                        "last": {
                                            "description": "Last ASN in range (inclusive)",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4294967295
                                        }
                                    },
                                    "required": [
                                        "first",
                                        "last",
                                        "status",
                                        "total",
                                        "used",
                                        "used_percentage"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "ranges",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesDevicePoolsIdResponse": {
            "title": "DevicePoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/TypeDump88"
                },
                "used": {
                    "$ref": "#/definitions/TypeDump89"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeDump90"
                },
                "devices": {
                    "description": "List of devices",
                    "type": "array",
                    "items": {
                        "title": "DeviceElement",
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Device uid",
                                "type": "string",
                                "minLength": 1
                            },
                            "status": {
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "status"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "devices",
                "display_name",
                "id",
                "last_modified_at",
                "status",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "GetApiResourcesDevicePoolsResponse": {
            "title": "DevicePoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "DevicePoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "devices": {
                                "description": "List of devices",
                                "type": "array",
                                "items": {
                                    "title": "DeviceElement",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Device uid",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "status": {
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "status"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "devices",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesIntegerPoolsIdResponse": {
            "title": "IntegerPoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/TypeDump88"
                },
                "used": {
                    "$ref": "#/definitions/TypeDump89"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeDump90"
                },
                "ranges": {
                    "description": "List of integer ranges",
                    "type": "array",
                    "items": {
                        "title": "IntegerRange",
                        "description": "range of integers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "status": {
                                "description": "status of this range",
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            },
                            "first": {
                                "description": "First integer in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            },
                            "last": {
                                "description": "Last integer in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "ranges",
                "status",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "GetApiResourcesIntegerPoolsResponse": {
            "title": "IntegerPoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "IntegerPoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "ranges": {
                                "description": "List of integer ranges",
                                "type": "array",
                                "items": {
                                    "title": "IntegerRange",
                                    "description": "range of integers",
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "$ref": "#/definitions/TypeDump88"
                                        },
                                        "used": {
                                            "$ref": "#/definitions/TypeDump89"
                                        },
                                        "used_percentage": {
                                            "$ref": "#/definitions/TypeDump90"
                                        },
                                        "status": {
                                            "description": "status of this range",
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        },
                                        "first": {
                                            "description": "First integer in range (inclusive)",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4294967295
                                        },
                                        "last": {
                                            "description": "Last integer in range (inclusive)",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4294967295
                                        }
                                    },
                                    "required": [
                                        "first",
                                        "last",
                                        "status",
                                        "total",
                                        "used",
                                        "used_percentage"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "ranges",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesIpPoolsIdResponse": {
            "title": "IP PoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/TypeDump88"
                },
                "used": {
                    "$ref": "#/definitions/TypeDump89"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeDump90"
                },
                "subnets": {
                    "description": "List of IP subnets",
                    "type": "array",
                    "items": {
                        "title": "Ipv4Network",
                        "description": "An IPv4 network (with status)",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "status": {
                                "description": "status of this range",
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            },
                            "network": {
                                "description": "CIDR notation of IPv4 subnet",
                                "type": "string"
                            }
                        },
                        "required": [
                            "network",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "status",
                "subnets",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "GetApiResourcesIpPoolsResponse": {
            "title": "IP PoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "IP PoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "subnets": {
                                "description": "List of IP subnets",
                                "type": "array",
                                "items": {
                                    "title": "Ipv4Network",
                                    "description": "An IPv4 network (with status)",
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "$ref": "#/definitions/TypeDump88"
                                        },
                                        "used": {
                                            "$ref": "#/definitions/TypeDump89"
                                        },
                                        "used_percentage": {
                                            "$ref": "#/definitions/TypeDump90"
                                        },
                                        "status": {
                                            "description": "status of this range",
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        },
                                        "network": {
                                            "description": "CIDR notation of IPv4 subnet",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "network",
                                        "status",
                                        "total",
                                        "used",
                                        "used_percentage"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "status",
                            "subnets",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesIpv6PoolsIdResponse": {
            "title": "IPv6 PoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "subnets": {
                    "description": "List of IP subnets",
                    "type": "array",
                    "items": {
                        "title": "Ipv6Network",
                        "description": "An IPv6 network (with status)",
                        "type": "object",
                        "properties": {
                            "network": {
                                "description": "CIDR notation of IPv6 subnet",
                                "type": "string"
                            },
                            "status": {
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "network",
                            "status"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "status",
                "subnets"
            ]
        },
        "GetApiResourcesIpv6PoolsResponse": {
            "title": "IPv6 PoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "IPv6 PoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "subnets": {
                                "description": "List of IP subnets",
                                "type": "array",
                                "items": {
                                    "title": "Ipv6Network",
                                    "description": "An IPv6 network (with status)",
                                    "type": "object",
                                    "properties": {
                                        "network": {
                                            "description": "CIDR notation of IPv6 subnet",
                                            "type": "string"
                                        },
                                        "status": {
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "network",
                                        "status"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "status",
                            "subnets"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesVlanPoolsIdResponse": {
            "title": "VlanPoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/TypeDump88"
                },
                "used": {
                    "$ref": "#/definitions/TypeDump89"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeDump90"
                },
                "ranges": {
                    "description": "List of integer ranges",
                    "type": "array",
                    "items": {
                        "title": "VlanRange",
                        "description": "range of Vlans",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "status": {
                                "description": "status of this range",
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            },
                            "first": {
                                "description": "First VLAN in this range, inclusive",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4095
                            },
                            "last": {
                                "description": "Last VLAN in this range, inclusive",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4095
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "ranges",
                "status",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "GetApiResourcesVlanPoolsResponse": {
            "title": "VlanPoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "VlanPoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "ranges": {
                                "description": "List of integer ranges",
                                "type": "array",
                                "items": {
                                    "title": "VlanRange",
                                    "description": "range of Vlans",
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "$ref": "#/definitions/TypeDump88"
                                        },
                                        "used": {
                                            "$ref": "#/definitions/TypeDump89"
                                        },
                                        "used_percentage": {
                                            "$ref": "#/definitions/TypeDump90"
                                        },
                                        "status": {
                                            "description": "status of this range",
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        },
                                        "first": {
                                            "description": "First VLAN in this range, inclusive",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4095
                                        },
                                        "last": {
                                            "description": "Last VLAN in this range, inclusive",
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 4095
                                        }
                                    },
                                    "required": [
                                        "first",
                                        "last",
                                        "status",
                                        "total",
                                        "used",
                                        "used_percentage"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "ranges",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiResourcesVniPoolsIdResponse": {
            "title": "VniPoolStatusSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "status": {
                    "enum": [
                        "creation_in_progress",
                        "in_use",
                        "marked_for_deletion",
                        "not_in_use"
                    ],
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/TypeDump88"
                },
                "used": {
                    "$ref": "#/definitions/TypeDump89"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeDump90"
                },
                "ranges": {
                    "description": "List of VNI ranges",
                    "type": "array",
                    "items": {
                        "title": "VniRange",
                        "description": "range of VNIs numbers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "status": {
                                "description": "status of this range",
                                "enum": [
                                    "pool_element_absent",
                                    "pool_element_available",
                                    "pool_element_in_use",
                                    "pool_element_invalid"
                                ],
                                "type": "string"
                            },
                            "first": {
                                "description": "First VNI in this range, inclusive",
                                "type": "integer",
                                "minimum": 4096,
                                "maximum": 16777214
                            },
                            "last": {
                                "description": "Last VNI in this range, inclusive",
                                "type": "integer",
                                "minimum": 4096,
                                "maximum": 16777214
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "ranges",
                "status",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "GetApiResourcesVniPoolsResponse": {
            "title": "VniPoolListSchema",
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "VniPoolStatusSchema",
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "description": "Display name of logical device.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "description": "This field is currently unused.",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": []
                            },
                            "status": {
                                "enum": [
                                    "creation_in_progress",
                                    "in_use",
                                    "marked_for_deletion",
                                    "not_in_use"
                                ],
                                "type": "string"
                            },
                            "total": {
                                "$ref": "#/definitions/TypeDump88"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeDump89"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeDump90"
                            },
                            "ranges": {
                                "description": "List of VNI ranges",
                                "type": "array",
                                "items": {
                                    "title": "VniRange",
                                    "description": "range of VNIs numbers",
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "$ref": "#/definitions/TypeDump88"
                                        },
                                        "used": {
                                            "$ref": "#/definitions/TypeDump89"
                                        },
                                        "used_percentage": {
                                            "$ref": "#/definitions/TypeDump90"
                                        },
                                        "status": {
                                            "description": "status of this range",
                                            "enum": [
                                                "pool_element_absent",
                                                "pool_element_available",
                                                "pool_element_in_use",
                                                "pool_element_invalid"
                                            ],
                                            "type": "string"
                                        },
                                        "first": {
                                            "description": "First VNI in this range, inclusive",
                                            "type": "integer",
                                            "minimum": 4096,
                                            "maximum": 16777214
                                        },
                                        "last": {
                                            "description": "Last VNI in this range, inclusive",
                                            "type": "integer",
                                            "minimum": 4096,
                                            "maximum": 16777214
                                        }
                                    },
                                    "required": [
                                        "first",
                                        "last",
                                        "status",
                                        "total",
                                        "used",
                                        "used_percentage"
                                    ]
                                }
                            },
                            "created_at": {
                                "$ref": "#/definitions/TypeDump75"
                            },
                            "last_modified_at": {
                                "$ref": "#/definitions/TypeDump76"
                            },
                            "id": {
                                "description": "ID of this object",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "created_at",
                            "display_name",
                            "id",
                            "last_modified_at",
                            "ranges",
                            "status",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiShowTechJobsJobIdResponse": {
            "type": "object",
            "properties": {
                "job_id": {
                    "description": "Show tech job version",
                    "type": "string"
                },
                "target": {
                    "description": "IP of the targeted device",
                    "type": "string"
                },
                "target_type": {
                    "description": "The target type on which show tech job was triggered",
                    "enum": [
                        "apstra_vm",
                        "device",
                        "flow_data_collector"
                    ],
                    "type": "string"
                },
                "target_id": {
                    "description": "Identifier of a target within a given target type",
                    "type": "string"
                },
                "state": {
                    "description": "State of the show-tech job on this device",
                    "enum": [
                        "canceled",
                        "failed",
                        "init",
                        "inprogress",
                        "pending",
                        "success"
                    ],
                    "type": "string"
                },
                "error_type": {
                    "description": "The error type of a show tech job if failed",
                    "enum": [
                        "Agent restart",
                        "Credential",
                        "Execution failed",
                        "I/O error",
                        "Timeout"
                    ],
                    "type": "string",
                    "default": null
                },
                "error": {
                    "description": "The error message of a show tech job if failed",
                    "type": "string",
                    "default": null
                },
                "link": {
                    "description": "URL for downloading log tarball file",
                    "type": "string",
                    "default": null
                },
                "size": {
                    "description": "Size of the log tarball file in bytes",
                    "type": "string",
                    "default": null
                },
                "backup_mode": {
                    "description": "The backup mode is on or off in show tech job",
                    "enum": [
                        "off",
                        "on"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "job_id",
                "state",
                "target",
                "target_id",
                "target_type"
            ]
        },
        "GetApiShowTechJobsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "description": "Show tech job version",
                                "type": "string"
                            },
                            "target": {
                                "description": "IP of the targeted device",
                                "type": "string"
                            },
                            "target_type": {
                                "description": "The target type on which show tech job was triggered",
                                "enum": [
                                    "apstra_vm",
                                    "device",
                                    "flow_data_collector"
                                ],
                                "type": "string"
                            },
                            "target_id": {
                                "description": "Identifier of a target within a given target type",
                                "type": "string"
                            },
                            "state": {
                                "description": "State of the show-tech job on this device",
                                "enum": [
                                    "canceled",
                                    "failed",
                                    "init",
                                    "inprogress",
                                    "pending",
                                    "success"
                                ],
                                "type": "string"
                            },
                            "error_type": {
                                "description": "The error type of a show tech job if failed",
                                "enum": [
                                    "Agent restart",
                                    "Credential",
                                    "Execution failed",
                                    "I/O error",
                                    "Timeout"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "error": {
                                "description": "The error message of a show tech job if failed",
                                "type": "string",
                                "default": null
                            },
                            "link": {
                                "description": "URL for downloading log tarball file",
                                "type": "string",
                                "default": null
                            },
                            "size": {
                                "description": "Size of the log tarball file in bytes",
                                "type": "string",
                                "default": null
                            },
                            "backup_mode": {
                                "description": "The backup mode is on or off in show tech job",
                                "enum": [
                                    "off",
                                    "on"
                                ],
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "job_id",
                            "state",
                            "target",
                            "target_id",
                            "target_type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSnapshotsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "description": "Total number of snapshots",
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Snapshot ID",
                                "type": "string"
                            },
                            "comment": {
                                "description": "A string used as snapshot description",
                                "type": "string"
                            },
                            "disk_usage": {
                                "description": "Disk usage of snapshot files in bytes",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "comment",
                            "disk_usage",
                            "id"
                        ]
                    }
                }
            },
            "required": [
                "count",
                "items"
            ]
        },
        "GetApiSnapshotsSnapshotIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Snapshot ID",
                    "type": "string"
                },
                "comment": {
                    "description": "A string used as snapshot description",
                    "type": "string"
                },
                "disk_usage": {
                    "description": "Disk usage of snapshot files in bytes",
                    "type": "integer"
                }
            },
            "required": [
                "comment",
                "disk_usage",
                "id"
            ]
        },
        "GetApiStreamingAlertDescriptionsResponse": {
            "title": "StreamingAlertDescription",
            "description": "map from alert type to description",
            "type": "object",
            "properties": {
                "config_deviation_alert": {
                    "description": "Alert for device configuration not matching expectation",
                    "type": "string"
                },
                "streaming_alert": {
                    "description": "Alert for streaming status not matching expectation",
                    "type": "string"
                },
                "cable_peer_mismatch_alert": {
                    "description": "Alert for LLDP status not matching expectation",
                    "type": "string"
                },
                "bgp_neighbor_mismatch_alert": {
                    "description": "Alert for BGP neighbor not matching expectation",
                    "type": "string"
                },
                "interface_link_status_mismatch_alert": {
                    "description": "Alert for interface link status not matching expectation",
                    "type": "string"
                },
                "hostname_alert": {
                    "description": "Alert for device hostname not matching expectation",
                    "type": "string"
                },
                "route_alert": {
                    "description": "Alert for route table not matching expectation",
                    "type": "string"
                },
                "liveness_alert": {
                    "description": "Alert for one or more device agents being unreachable",
                    "type": "string"
                },
                "deployment_alert": {
                    "description": "Alert for failure to apply configuration to device",
                    "type": "string"
                },
                "blueprint_rendering_alert": {
                    "description": "Alert for failure to render config from blueprint",
                    "type": "string"
                }
            },
            "required": [
                "bgp_neighbor_mismatch_alert",
                "blueprint_rendering_alert",
                "cable_peer_mismatch_alert",
                "config_deviation_alert",
                "deployment_alert",
                "hostname_alert",
                "interface_link_status_mismatch_alert",
                "liveness_alert",
                "route_alert",
                "streaming_alert"
            ]
        },
        "GetApiStreamingCertificatesCertIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "description": "ID of certificate record",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "label": {
                    "description": "User-defined certificate record's label",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Optional user-defined certificate record's description",
                    "type": "string",
                    "maxLength": 120,
                    "default": ""
                },
                "pem_b64": {
                    "description": "Base64 encoded PEM-data",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20000
                },
                "created_at": {
                    "description": "Creation time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_at": {
                    "description": "Modification time in ISO8601",
                    "type": "string",
                    "format": "date-time"
                },
                "x509": {
                    "type": "object",
                    "properties": {
                        "subject": {
                            "description": "Information about the Subject of certificate",
                            "type": "object",
                            "additionalProperties": {},
                            "maxProperties": 0
                        },
                        "issuer": {
                            "description": "Information about the Issuer of certificate",
                            "type": "object",
                            "additionalProperties": {},
                            "maxProperties": 0
                        },
                        "validity": {
                            "description": "Certificate validity time period",
                            "type": "object",
                            "additionalProperties": false,
                            "maxProperties": 0
                        },
                        "serial_number": {
                            "description": "Serial number of certificate in hex",
                            "type": "string",
                            "minLength": 40,
                            "maxLength": 40
                        },
                        "certificate_sha256_fingerprint": {
                            "description": "SHA2-256 fingerprint of certificate itself",
                            "type": "string",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "public_key_sha256_fingerprint": {
                            "description": "SHA2-256 fingerprint of bound public key",
                            "type": "string",
                            "minLength": 64,
                            "maxLength": 64
                        },
                        "version": {
                            "description": "Versions of the X.509 certificate standard",
                            "enum": [
                                "v1",
                                "v2",
                                "v3"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "certificate_sha256_fingerprint",
                        "issuer",
                        "public_key_sha256_fingerprint",
                        "serial_number",
                        "subject",
                        "validity",
                        "version"
                    ],
                    "additionalProperties": false,
                    "default": null
                }
            },
            "required": [
                "created_at",
                "id",
                "label",
                "last_modified_at",
                "pem_b64"
            ],
            "additionalProperties": false
        },
        "GetApiStreamingCertificatesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "title": "ID",
                                "description": "ID of certificate record",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z0-9_-]+$"
                            },
                            "label": {
                                "description": "User-defined certificate record's label",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "description": {
                                "description": "Optional user-defined certificate record's description",
                                "type": "string",
                                "maxLength": 120,
                                "default": ""
                            },
                            "pem_b64": {
                                "description": "Base64 encoded PEM-data",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 20000
                            },
                            "created_at": {
                                "description": "Creation time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modified_at": {
                                "description": "Modification time in ISO8601",
                                "type": "string",
                                "format": "date-time"
                            },
                            "x509": {
                                "type": "object",
                                "properties": {
                                    "subject": {
                                        "description": "Information about the Subject of certificate",
                                        "type": "object",
                                        "additionalProperties": {},
                                        "maxProperties": 0
                                    },
                                    "issuer": {
                                        "description": "Information about the Issuer of certificate",
                                        "type": "object",
                                        "additionalProperties": {},
                                        "maxProperties": 0
                                    },
                                    "validity": {
                                        "description": "Certificate validity time period",
                                        "type": "object",
                                        "additionalProperties": false,
                                        "maxProperties": 0
                                    },
                                    "serial_number": {
                                        "description": "Serial number of certificate in hex",
                                        "type": "string",
                                        "minLength": 40,
                                        "maxLength": 40
                                    },
                                    "certificate_sha256_fingerprint": {
                                        "description": "SHA2-256 fingerprint of certificate itself",
                                        "type": "string",
                                        "minLength": 64,
                                        "maxLength": 64
                                    },
                                    "public_key_sha256_fingerprint": {
                                        "description": "SHA2-256 fingerprint of bound public key",
                                        "type": "string",
                                        "minLength": 64,
                                        "maxLength": 64
                                    },
                                    "version": {
                                        "description": "Versions of the X.509 certificate standard",
                                        "enum": [
                                            "v1",
                                            "v2",
                                            "v3"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "certificate_sha256_fingerprint",
                                    "issuer",
                                    "public_key_sha256_fingerprint",
                                    "serial_number",
                                    "subject",
                                    "validity",
                                    "version"
                                ],
                                "additionalProperties": false,
                                "default": null
                            }
                        },
                        "required": [
                            "created_at",
                            "id",
                            "label",
                            "last_modified_at",
                            "pem_b64"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiStreamingConfigIdResponse": {
            "title": "StreamingStatus",
            "description": "Status of streaming endpoint",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "string"
                },
                "hostname": {
                    "$ref": "#/definitions/HostnameOrIpAddressTypeDump"
                },
                "port": {
                    "description": "port number of endpoint",
                    "type": "integer"
                },
                "protocol": {
                    "enum": [
                        "protoBufOverTcp"
                    ],
                    "type": "string"
                },
                "streaming_type": {
                    "description": "type of data streaming to this endpoint",
                    "enum": [
                        "alerts",
                        "events",
                        "perfmon"
                    ],
                    "type": "string"
                },
                "sequencing_mode": {
                    "description": "stream sequencing mode for this endpoint",
                    "enum": [
                        "sequenced",
                        "unsequenced"
                    ],
                    "type": "string"
                },
                "tls_enabled": {
                    "description": "Whether TLS is enabled",
                    "type": "boolean"
                },
                "tls_bypass_validation": {
                    "description": "Whether to bypass TLS chain of trust validation procedures",
                    "type": "boolean",
                    "default": null
                },
                "tls_trusted_certificate_ids": {
                    "description": "List of IDs of trusted certificate records",
                    "type": "array",
                    "items": {
                        "title": "ID",
                        "description": "ID of certificate record",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "uniqueItems": true,
                    "default": null
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "streamingEndpoint": {
                            "type": "object",
                            "properties": {
                                "hostname": {
                                    "$ref": "#/definitions/HostnameOrIpAddressTypeDump"
                                },
                                "port": {
                                    "description": "port number of endpoint",
                                    "type": "integer"
                                },
                                "protocol": {
                                    "enum": [
                                        "protoBufOverTcp"
                                    ],
                                    "type": "string"
                                },
                                "streaming_type": {
                                    "description": "type of data streaming to this endpoint",
                                    "enum": [
                                        "alerts",
                                        "events",
                                        "perfmon"
                                    ],
                                    "type": "string"
                                },
                                "sequencing_mode": {
                                    "description": "stream sequencing mode for this endpoint",
                                    "enum": [
                                        "sequenced",
                                        "unsequenced"
                                    ],
                                    "type": "string",
                                    "default": null
                                }
                            },
                            "required": [
                                "hostname",
                                "port",
                                "protocol",
                                "streaming_type"
                            ],
                            "default": null
                        },
                        "epoch": {
                            "description": "Creation time in ISO8601",
                            "type": "string",
                            "format": "date-time",
                            "default": null
                        },
                        "dnsLog": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypeDump43"
                            },
                            "default": null
                        },
                        "connected": {
                            "description": "Connection status",
                            "type": "boolean",
                            "default": null
                        },
                        "connectionTime": {
                            "description": "Last connection time in ISO8601",
                            "type": "string",
                            "format": "date-time",
                            "default": null
                        },
                        "disconnectionTime": {
                            "description": "Last disconnect time in ISO8601",
                            "type": "string",
                            "format": "date-time",
                            "default": null
                        },
                        "connectionLog": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypeDump43"
                            },
                            "default": null
                        },
                        "connectionResetCount": {
                            "description": "Count of Connection Resets",
                            "type": "integer",
                            "default": null
                        }
                    }
                }
            },
            "required": [
                "hostname",
                "id",
                "port",
                "protocol",
                "sequencing_mode",
                "status",
                "streaming_type",
                "tls_enabled"
            ]
        },
        "GetApiStreamingConfigResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "StreamingStatus",
                        "description": "Status of streaming endpoint",
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Unique identifier",
                                "type": "string"
                            },
                            "hostname": {
                                "$ref": "#/definitions/HostnameOrIpAddressTypeDump"
                            },
                            "port": {
                                "description": "port number of endpoint",
                                "type": "integer"
                            },
                            "protocol": {
                                "enum": [
                                    "protoBufOverTcp"
                                ],
                                "type": "string"
                            },
                            "streaming_type": {
                                "description": "type of data streaming to this endpoint",
                                "enum": [
                                    "alerts",
                                    "events",
                                    "perfmon"
                                ],
                                "type": "string"
                            },
                            "sequencing_mode": {
                                "description": "stream sequencing mode for this endpoint",
                                "enum": [
                                    "sequenced",
                                    "unsequenced"
                                ],
                                "type": "string"
                            },
                            "tls_enabled": {
                                "description": "Whether TLS is enabled",
                                "type": "boolean"
                            },
                            "tls_bypass_validation": {
                                "description": "Whether to bypass TLS chain of trust validation procedures",
                                "type": "boolean",
                                "default": null
                            },
                            "tls_trusted_certificate_ids": {
                                "description": "List of IDs of trusted certificate records",
                                "type": "array",
                                "items": {
                                    "title": "ID",
                                    "description": "ID of certificate record",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64,
                                    "pattern": "^[a-zA-Z0-9_-]+$"
                                },
                                "uniqueItems": true,
                                "default": null
                            },
                            "status": {
                                "type": "object",
                                "properties": {
                                    "streamingEndpoint": {
                                        "type": "object",
                                        "properties": {
                                            "hostname": {
                                                "$ref": "#/definitions/HostnameOrIpAddressTypeDump"
                                            },
                                            "port": {
                                                "description": "port number of endpoint",
                                                "type": "integer"
                                            },
                                            "protocol": {
                                                "enum": [
                                                    "protoBufOverTcp"
                                                ],
                                                "type": "string"
                                            },
                                            "streaming_type": {
                                                "description": "type of data streaming to this endpoint",
                                                "enum": [
                                                    "alerts",
                                                    "events",
                                                    "perfmon"
                                                ],
                                                "type": "string"
                                            },
                                            "sequencing_mode": {
                                                "description": "stream sequencing mode for this endpoint",
                                                "enum": [
                                                    "sequenced",
                                                    "unsequenced"
                                                ],
                                                "type": "string",
                                                "default": null
                                            }
                                        },
                                        "required": [
                                            "hostname",
                                            "port",
                                            "protocol",
                                            "streaming_type"
                                        ],
                                        "default": null
                                    },
                                    "epoch": {
                                        "description": "Creation time in ISO8601",
                                        "type": "string",
                                        "format": "date-time",
                                        "default": null
                                    },
                                    "dnsLog": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/TypeDump43"
                                        },
                                        "default": null
                                    },
                                    "connected": {
                                        "description": "Connection status",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "connectionTime": {
                                        "description": "Last connection time in ISO8601",
                                        "type": "string",
                                        "format": "date-time",
                                        "default": null
                                    },
                                    "disconnectionTime": {
                                        "description": "Last disconnect time in ISO8601",
                                        "type": "string",
                                        "format": "date-time",
                                        "default": null
                                    },
                                    "connectionLog": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/TypeDump43"
                                        },
                                        "default": null
                                    },
                                    "connectionResetCount": {
                                        "description": "Count of Connection Resets",
                                        "type": "integer",
                                        "default": null
                                    }
                                }
                            }
                        },
                        "required": [
                            "hostname",
                            "id",
                            "port",
                            "protocol",
                            "sequencing_mode",
                            "status",
                            "streaming_type",
                            "tls_enabled"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSupportedSpeedsResponse": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "Integer value representing the speed in units.",
                        "type": "integer",
                        "minimum": 1
                    },
                    "unit": {
                        "description": "Units in which the speed value is expressed. Single letter.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1
                    }
                },
                "required": [
                    "unit",
                    "value"
                ]
            }
        },
        "GetApiSystemAgentJobsActiveJobsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "State of last run job",
                        "type": "object",
                        "properties": {
                            "host_id": {
                                "description": "Unique ID for the system agent",
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9._-]+$"
                            },
                            "job_id": {
                                "$ref": "#/definitions/TypeDump115"
                            },
                            "agent_type": {
                                "$ref": "#/definitions/TypeDump113"
                            },
                            "job_type": {
                                "$ref": "#/definitions/TypeDump112"
                            },
                            "state": {
                                "$ref": "#/definitions/TypeDump116"
                            },
                            "current_task": {
                                "description": "Current progress retrieved from container job",
                                "type": "string",
                                "default": null
                            },
                            "error": {
                                "description": "Error message of the job",
                                "type": "string"
                            },
                            "is_log_available": {
                                "description": "Indicate if system agent log is available for job",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "agent_type",
                            "error",
                            "host_id",
                            "is_log_available",
                            "job_id",
                            "job_type",
                            "state"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemAgentJobsPendingJobsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "State of last run job",
                        "type": "object",
                        "properties": {
                            "host_id": {
                                "description": "Unique ID for the system agent",
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9._-]+$"
                            },
                            "job_id": {
                                "$ref": "#/definitions/TypeDump115"
                            },
                            "agent_type": {
                                "$ref": "#/definitions/TypeDump113"
                            },
                            "job_type": {
                                "$ref": "#/definitions/TypeDump112"
                            },
                            "state": {
                                "$ref": "#/definitions/TypeDump116"
                            },
                            "current_task": {
                                "description": "Current progress retrieved from container job",
                                "type": "string",
                                "default": null
                            },
                            "error": {
                                "description": "Error message of the job",
                                "type": "string"
                            },
                            "is_log_available": {
                                "description": "Indicate if system agent log is available for job",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "agent_type",
                            "error",
                            "host_id",
                            "is_log_available",
                            "job_id",
                            "job_type",
                            "state"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemAgentManagerConfigResponse": {
            "description": "System Agent Manager configuration parameters",
            "type": "object",
            "properties": {
                "skip_pristine_validation": {
                    "title": "Skip Pristine Configuration Validation",
                    "description": "Pristine Configuration Validation is done as part of Apstra agent installation to check if the initial device configuration contains any configuration that may conflict with future Apstra managed configuration and abort the agent installation to avoid future problems. Checking this option is not recommended but can be done to force install Apstra agents even if possible conflicting configuration is found",
                    "type": "boolean"
                },
                "skip_revert_to_pristine_on_uninstall": {
                    "title": "Skip Revert to Pristine on Uninstall",
                    "description": "When uninstallting Apstra agents, the device configuration is automatically reverted back to its Pristine Configuration. Checking this option will keep the device configuration untouched when Apstra agent is uninstalled",
                    "type": "boolean"
                },
                "skip_interface_shutdown_on_upgrade": {
                    "title": "Skip Shutting Down Interfaces During Upgrade",
                    "description": "When upgrading a device, any interfaces left up can cause blackholing of traffic. To prevent any blackholing of traffic, by default all the interfaces are shut down during the upgrade. If this option is checked, interfaces will NOT be shutdown during the device upgrade.",
                    "type": "boolean"
                },
                "device_os_image_download_timeout": {
                    "title": "Device OS Image Download Timeout",
                    "description": "When upgrading a device, provides a way to increase image download timeout in case it takes too long to download image. This could be due to large image size or network constraints",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 2700
                }
            },
            "required": [
                "device_os_image_download_timeout",
                "skip_interface_shutdown_on_upgrade",
                "skip_pristine_validation",
                "skip_revert_to_pristine_on_uninstall"
            ]
        },
        "GetApiSystemAgentProfilesProfileIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Profile ID",
                    "type": "string"
                },
                "label": {
                    "description": "Descriptive name of the system agent profile",
                    "type": "string",
                    "minLength": 1
                },
                "has_username": {
                    "description": "True means profile contains username. False means not",
                    "type": "boolean"
                },
                "has_password": {
                    "description": "True means profile contains password. False means not",
                    "type": "boolean"
                },
                "open_options": {
                    "description": "Set of key value pairs that are passed to the device entry point in the package corresponding to platform",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "platform": {
                    "description": "Device platform name. Corresponds to the OS family value in HCL entries",
                    "type": "string"
                },
                "packages": {
                    "description": "List of Python packages needed",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "required": [
                "has_password",
                "has_username",
                "id",
                "label",
                "open_options",
                "packages",
                "platform"
            ]
        },
        "GetApiSystemAgentProfilesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Profile ID",
                                "type": "string"
                            },
                            "label": {
                                "description": "Descriptive name of the system agent profile",
                                "type": "string",
                                "minLength": 1
                            },
                            "has_username": {
                                "description": "True means profile contains username. False means not",
                                "type": "boolean"
                            },
                            "has_password": {
                                "description": "True means profile contains password. False means not",
                                "type": "boolean"
                            },
                            "open_options": {
                                "description": "Set of key value pairs that are passed to the device entry point in the package corresponding to platform",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "platform": {
                                "description": "Device platform name. Corresponds to the OS family value in HCL entries",
                                "type": "string"
                            },
                            "packages": {
                                "description": "List of Python packages needed",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        },
                        "required": [
                            "has_password",
                            "has_username",
                            "id",
                            "label",
                            "open_options",
                            "packages",
                            "platform"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemAgentsAgentIdJobHistoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "State of last run job",
                        "type": "object",
                        "properties": {
                            "host_id": {
                                "description": "Unique ID for the system agent",
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9._-]+$"
                            },
                            "job_id": {
                                "$ref": "#/definitions/TypeDump115"
                            },
                            "agent_type": {
                                "$ref": "#/definitions/TypeDump113"
                            },
                            "job_type": {
                                "$ref": "#/definitions/TypeDump112"
                            },
                            "state": {
                                "$ref": "#/definitions/TypeDump116"
                            },
                            "current_task": {
                                "description": "Current progress retrieved from container job",
                                "type": "string",
                                "default": null
                            },
                            "error": {
                                "description": "Error message of the job",
                                "type": "string"
                            },
                            "is_log_available": {
                                "description": "Indicate if system agent log is available for job",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "agent_type",
                            "error",
                            "host_id",
                            "is_log_available",
                            "job_id",
                            "job_type",
                            "state"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemAgentsAgentIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of this device agent",
                    "type": "string",
                    "default": null
                },
                "config": {
                    "$ref": "#/definitions/TypeDump110",
                    "default": null
                },
                "running_config": {
                    "$ref": "#/definitions/TypeDump110",
                    "default": null
                },
                "status": {
                    "description": "Operational status of the system agent",
                    "type": "object",
                    "properties": {
                        "system_id": {
                            "description": "System ID of device being managed by the system agent",
                            "type": "string"
                        },
                        "connection_state": {
                            "description": "State of system agent connection to the device",
                            "enum": [
                                "auth_failed",
                                "connected",
                                "disconnected"
                            ],
                            "type": "string",
                            "default": null
                        },
                        "status_message": {
                            "description": "Status of the system agent",
                            "type": "string",
                            "default": null
                        },
                        "packages_installed": {
                            "description": "List of packages installed in the system agent's runtime environment",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            },
                            "default": null
                        },
                        "aos_version": {
                            "description": "Onbox device agent aos version",
                            "type": "string",
                            "default": null
                        },
                        "operation_mode": {
                            "$ref": "#/definitions/TypeDump111",
                            "default": null
                        },
                        "platform": {
                            "$ref": "#/definitions/TypeDump114",
                            "default": null
                        },
                        "platform_version": {
                            "description": "Vendor Network OS version",
                            "type": "string",
                            "default": null
                        },
                        "current_task": {
                            "description": "Current progress retrieved from Ansible",
                            "type": "string",
                            "default": null
                        },
                        "job_id": {
                            "$ref": "#/definitions/TypeDump115",
                            "default": null
                        },
                        "state": {
                            "$ref": "#/definitions/TypeDump116",
                            "default": null
                        },
                        "error": {
                            "description": "Error message",
                            "type": "string",
                            "default": null
                        },
                        "pending_type": {
                            "description": "Type of pending job. Empty means no pending job",
                            "type": "string",
                            "default": null
                        },
                        "has_credential": {
                            "description": "Indicator of credential data. True means both username and password have been provided. False means one of them is missing.",
                            "type": "boolean",
                            "default": null
                        }
                    },
                    "required": [
                        "system_id"
                    ],
                    "default": null
                },
                "container_status": {
                    "description": "Operational status of docker container used to execute system agent that connect remotely to the managed device",
                    "type": "object",
                    "properties": {
                        "status": {
                            "description": "State of the system agent docker container",
                            "enum": [
                                "nonexistent",
                                "running",
                                "scheduled",
                                "stopped"
                            ],
                            "type": "string"
                        },
                        "error": {
                            "description": "Operational error message system agent docker container",
                            "type": "string"
                        },
                        "host": {
                            "description": "Name of the docker container host running this container",
                            "type": "string",
                            "default": null
                        },
                        "name": {
                            "description": "Name of the running docker container used by docker daemon",
                            "type": "string",
                            "default": null
                        },
                        "service_id": {
                            "description": "ID of the service submitted to Docker Swarm for this system agent. Docker Swarm processes this service by instantiating a docker container for the system agent. The container may terminate, at which point Docker Swarm instantiates a new docker container for the system agent. Each container is given a task_id. Thus, a service_id is mapped to multiple task_ids, but at most 1 corresponds to an active container.",
                            "type": "string",
                            "default": null
                        },
                        "task_id": {
                            "description": "ID of the docker container that is currently active for this system agent. At any time there may be multiple docker instances created for this system agent, but only 1 is executing, whereas the others have terminated. If this field has an None value, it means there is no active container running for this system agent, e.g. container has crashed but Docker Swarm has not yet recreated a new container. See the description for service_id for more details.",
                            "type": "string",
                            "default": null
                        },
                        "last_update": {
                            "description": "Time stamp of the last time when the container status was updated.",
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "error",
                        "status"
                    ],
                    "default": null
                },
                "platform_config": {
                    "type": "object",
                    "properties": {
                        "container_enable": {
                            "description": "Offbox container enable configuration",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "container_enable"
                    ],
                    "default": null
                },
                "last_job_status": {
                    "description": "State of last run job",
                    "type": "object",
                    "properties": {
                        "host_id": {
                            "description": "Unique ID for the system agent",
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9._-]+$"
                        },
                        "job_id": {
                            "$ref": "#/definitions/TypeDump115"
                        },
                        "agent_type": {
                            "$ref": "#/definitions/TypeDump113"
                        },
                        "job_type": {
                            "$ref": "#/definitions/TypeDump112"
                        },
                        "state": {
                            "$ref": "#/definitions/TypeDump116"
                        },
                        "current_task": {
                            "description": "Current progress retrieved from container job",
                            "type": "string",
                            "default": null
                        },
                        "error": {
                            "description": "Error message of the job",
                            "type": "string"
                        },
                        "is_log_available": {
                            "description": "Indicate if system agent log is available for job",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "agent_type",
                        "error",
                        "host_id",
                        "is_log_available",
                        "job_id",
                        "job_type",
                        "state"
                    ],
                    "default": null
                },
                "telemetry_ext_status": {
                    "description": "Telemetry extension status",
                    "type": "object",
                    "properties": {
                        "status_message": {
                            "description": "Status of the system agent",
                            "type": "string",
                            "default": null
                        },
                        "packages_installed": {
                            "description": "List of packages installed in the system agent's runtime environment",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            },
                            "default": null
                        }
                    },
                    "default": null
                },
                "platform_status": {
                    "description": "Device OS status updated by System Agent jobs",
                    "type": "object",
                    "properties": {
                        "job_id": {
                            "$ref": "#/definitions/TypeDump115",
                            "default": null
                        },
                        "platform": {
                            "$ref": "#/definitions/TypeDump114",
                            "default": null
                        },
                        "platform_version": {
                            "description": "Vendor Network OS version",
                            "type": "string",
                            "default": null
                        },
                        "current_task": {
                            "description": "Current progress retrieved from Ansible",
                            "type": "string",
                            "default": null
                        },
                        "state": {
                            "$ref": "#/definitions/TypeDump116",
                            "default": null
                        },
                        "error": {
                            "description": "Error message",
                            "type": "string",
                            "default": null
                        },
                        "has_credential": {
                            "description": "Indicator of credential data. True means both username and password have been provided. False means one of them is missing.",
                            "type": "boolean",
                            "default": null
                        }
                    },
                    "default": null
                },
                "device_facts": {
                    "description": "Device facts reported by system agent",
                    "type": "object",
                    "properties": {
                        "hostname": {
                            "description": "Hostname of the device",
                            "type": "string",
                            "default": null
                        },
                        "device_state": {
                            "description": "State of the device",
                            "type": "string",
                            "default": null
                        },
                        "device_os_version": {
                            "description": "Platform OS version of the device",
                            "type": "string",
                            "default": null
                        },
                        "device_os_family": {
                            "description": "Platform OS family of the device",
                            "type": "string",
                            "default": null
                        }
                    },
                    "default": null
                }
            }
        },
        "GetApiSystemAgentsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of this device agent",
                                "type": "string",
                                "default": null
                            },
                            "config": {
                                "$ref": "#/definitions/TypeDump110",
                                "default": null
                            },
                            "running_config": {
                                "$ref": "#/definitions/TypeDump110",
                                "default": null
                            },
                            "status": {
                                "description": "Operational status of the system agent",
                                "type": "object",
                                "properties": {
                                    "system_id": {
                                        "description": "System ID of device being managed by the system agent",
                                        "type": "string"
                                    },
                                    "connection_state": {
                                        "description": "State of system agent connection to the device",
                                        "enum": [
                                            "auth_failed",
                                            "connected",
                                            "disconnected"
                                        ],
                                        "type": "string",
                                        "default": null
                                    },
                                    "status_message": {
                                        "description": "Status of the system agent",
                                        "type": "string",
                                        "default": null
                                    },
                                    "packages_installed": {
                                        "description": "List of packages installed in the system agent's runtime environment",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "default": null
                                    },
                                    "aos_version": {
                                        "description": "Onbox device agent aos version",
                                        "type": "string",
                                        "default": null
                                    },
                                    "operation_mode": {
                                        "$ref": "#/definitions/TypeDump111",
                                        "default": null
                                    },
                                    "platform": {
                                        "$ref": "#/definitions/TypeDump114",
                                        "default": null
                                    },
                                    "platform_version": {
                                        "description": "Vendor Network OS version",
                                        "type": "string",
                                        "default": null
                                    },
                                    "current_task": {
                                        "description": "Current progress retrieved from Ansible",
                                        "type": "string",
                                        "default": null
                                    },
                                    "job_id": {
                                        "$ref": "#/definitions/TypeDump115",
                                        "default": null
                                    },
                                    "state": {
                                        "$ref": "#/definitions/TypeDump116",
                                        "default": null
                                    },
                                    "error": {
                                        "description": "Error message",
                                        "type": "string",
                                        "default": null
                                    },
                                    "pending_type": {
                                        "description": "Type of pending job. Empty means no pending job",
                                        "type": "string",
                                        "default": null
                                    },
                                    "has_credential": {
                                        "description": "Indicator of credential data. True means both username and password have been provided. False means one of them is missing.",
                                        "type": "boolean",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "system_id"
                                ],
                                "default": null
                            },
                            "container_status": {
                                "description": "Operational status of docker container used to execute system agent that connect remotely to the managed device",
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "description": "State of the system agent docker container",
                                        "enum": [
                                            "nonexistent",
                                            "running",
                                            "scheduled",
                                            "stopped"
                                        ],
                                        "type": "string"
                                    },
                                    "error": {
                                        "description": "Operational error message system agent docker container",
                                        "type": "string"
                                    },
                                    "host": {
                                        "description": "Name of the docker container host running this container",
                                        "type": "string",
                                        "default": null
                                    },
                                    "name": {
                                        "description": "Name of the running docker container used by docker daemon",
                                        "type": "string",
                                        "default": null
                                    },
                                    "service_id": {
                                        "description": "ID of the service submitted to Docker Swarm for this system agent. Docker Swarm processes this service by instantiating a docker container for the system agent. The container may terminate, at which point Docker Swarm instantiates a new docker container for the system agent. Each container is given a task_id. Thus, a service_id is mapped to multiple task_ids, but at most 1 corresponds to an active container.",
                                        "type": "string",
                                        "default": null
                                    },
                                    "task_id": {
                                        "description": "ID of the docker container that is currently active for this system agent. At any time there may be multiple docker instances created for this system agent, but only 1 is executing, whereas the others have terminated. If this field has an None value, it means there is no active container running for this system agent, e.g. container has crashed but Docker Swarm has not yet recreated a new container. See the description for service_id for more details.",
                                        "type": "string",
                                        "default": null
                                    },
                                    "last_update": {
                                        "description": "Time stamp of the last time when the container status was updated.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "error",
                                    "status"
                                ],
                                "default": null
                            },
                            "platform_config": {
                                "type": "object",
                                "properties": {
                                    "container_enable": {
                                        "description": "Offbox container enable configuration",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "container_enable"
                                ],
                                "default": null
                            },
                            "last_job_status": {
                                "description": "State of last run job",
                                "type": "object",
                                "properties": {
                                    "host_id": {
                                        "description": "Unique ID for the system agent",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z0-9._-]+$"
                                    },
                                    "job_id": {
                                        "$ref": "#/definitions/TypeDump115"
                                    },
                                    "agent_type": {
                                        "$ref": "#/definitions/TypeDump113"
                                    },
                                    "job_type": {
                                        "$ref": "#/definitions/TypeDump112"
                                    },
                                    "state": {
                                        "$ref": "#/definitions/TypeDump116"
                                    },
                                    "current_task": {
                                        "description": "Current progress retrieved from container job",
                                        "type": "string",
                                        "default": null
                                    },
                                    "error": {
                                        "description": "Error message of the job",
                                        "type": "string"
                                    },
                                    "is_log_available": {
                                        "description": "Indicate if system agent log is available for job",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "agent_type",
                                    "error",
                                    "host_id",
                                    "is_log_available",
                                    "job_id",
                                    "job_type",
                                    "state"
                                ],
                                "default": null
                            },
                            "telemetry_ext_status": {
                                "description": "Telemetry extension status",
                                "type": "object",
                                "properties": {
                                    "status_message": {
                                        "description": "Status of the system agent",
                                        "type": "string",
                                        "default": null
                                    },
                                    "packages_installed": {
                                        "description": "List of packages installed in the system agent's runtime environment",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "default": null
                                    }
                                },
                                "default": null
                            },
                            "platform_status": {
                                "description": "Device OS status updated by System Agent jobs",
                                "type": "object",
                                "properties": {
                                    "job_id": {
                                        "$ref": "#/definitions/TypeDump115",
                                        "default": null
                                    },
                                    "platform": {
                                        "$ref": "#/definitions/TypeDump114",
                                        "default": null
                                    },
                                    "platform_version": {
                                        "description": "Vendor Network OS version",
                                        "type": "string",
                                        "default": null
                                    },
                                    "current_task": {
                                        "description": "Current progress retrieved from Ansible",
                                        "type": "string",
                                        "default": null
                                    },
                                    "state": {
                                        "$ref": "#/definitions/TypeDump116",
                                        "default": null
                                    },
                                    "error": {
                                        "description": "Error message",
                                        "type": "string",
                                        "default": null
                                    },
                                    "has_credential": {
                                        "description": "Indicator of credential data. True means both username and password have been provided. False means one of them is missing.",
                                        "type": "boolean",
                                        "default": null
                                    }
                                },
                                "default": null
                            },
                            "device_facts": {
                                "description": "Device facts reported by system agent",
                                "type": "object",
                                "properties": {
                                    "hostname": {
                                        "description": "Hostname of the device",
                                        "type": "string",
                                        "default": null
                                    },
                                    "device_state": {
                                        "description": "State of the device",
                                        "type": "string",
                                        "default": null
                                    },
                                    "device_os_version": {
                                        "description": "Platform OS version of the device",
                                        "type": "string",
                                        "default": null
                                    },
                                    "device_os_family": {
                                        "description": "Platform OS family of the device",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "default": null
                            }
                        }
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "user_config": {
                                "type": "object",
                                "properties": {
                                    "aos_hcl_model": {
                                        "description": "The hardware model of the device as defined by the AOS Hardware Compatibility List (HCL)",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "location": {
                                        "description": "Information that assists the User find the physical location of the device; generally room, rack, rack-unit.This field is free-form text.",
                                        "type": "string",
                                        "default": null
                                    },
                                    "admin_state": {
                                        "description": "normalIntended device state by the user. Possible values are: maintIntended device state by the user. Possible values are: decomm",
                                        "enum": [
                                            "decomm",
                                            "maint",
                                            "normal"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "admin_state",
                                    "aos_hcl_model"
                                ],
                                "default": null
                            },
                            "facts": {
                                "type": "object",
                                "properties": {
                                    "serial_number": {
                                        "description": "The specific serial-number associated to the         network device",
                                        "type": "string"
                                    },
                                    "hw_model": {
                                        "description": "The specific OS product model",
                                        "type": "string"
                                    },
                                    "hw_version": {
                                        "description": "The hardware version",
                                        "type": "string"
                                    },
                                    "vendor": {
                                        "description": "The name of manufacturer of the host, should be stored in lower case",
                                        "type": "string"
                                    },
                                    "os_family": {
                                        "description": "The name of the operating system running on the host, should be stored lower-case",
                                        "type": "string"
                                    },
                                    "os_variant": {
                                        "description": "The variant of the operating system running on the host, should be stored lower-case",
                                        "type": "string"
                                    },
                                    "aos_hcl_model": {
                                        "description": "HCL entry matching the device facts. If empty, it means no match is found, i.e. device not in HCL",
                                        "type": "string"
                                    },
                                    "os_arch": {
                                        "description": "The OS architecture name",
                                        "type": "string"
                                    },
                                    "os_version": {
                                        "description": "The version string of the operating system running on the host",
                                        "type": "string"
                                    },
                                    "os_version_info": {
                                        "description": "Version information with major, minor and build components. Interpretation of the fields is device-specific",
                                        "type": "object",
                                        "properties": {
                                            "major": {
                                                "description": "Major version of OS",
                                                "type": "string"
                                            },
                                            "minor": {
                                                "description": "Minor version of OS",
                                                "type": "string"
                                            },
                                            "build": {
                                                "description": "Build version of OS",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "build",
                                            "major",
                                            "minor"
                                        ]
                                    },
                                    "os_version_ordinal": {
                                        "description": "Integer representation of the operating system version",
                                        "type": "integer"
                                    },
                                    "aos_version": {
                                        "description": "The AOS version of the device telemetry agent.  This comes from the \"version\" file located on the device",
                                        "type": "string"
                                    },
                                    "aos_server": {
                                        "description": "The IP address, or hostname, listed in the aos.conf file indicating where this device should connect to",
                                        "type": "string"
                                    },
                                    "mgmt_macaddr": {
                                        "description": "The MAC-address associated with the mgmt_ifname",
                                        "type": "string"
                                    },
                                    "mgmt_ifname": {
                                        "description": "The management interface name that is being used to connect to the AOS server",
                                        "type": "string"
                                    },
                                    "mgmt_ipaddr": {
                                        "description": "The management interface IP address associated with mgmt_ifname",
                                        "type": "string"
                                    },
                                    "chassis_mac_ranges": {
                                        "description": "Ranges of mac addresses assigned to the device",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "aos_hcl_model",
                                    "aos_server",
                                    "aos_version",
                                    "chassis_mac_ranges",
                                    "hw_model",
                                    "hw_version",
                                    "mgmt_ifname",
                                    "mgmt_ipaddr",
                                    "mgmt_macaddr",
                                    "os_arch",
                                    "os_family",
                                    "os_variant",
                                    "os_version",
                                    "os_version_info",
                                    "os_version_ordinal",
                                    "serial_number",
                                    "vendor"
                                ],
                                "default": null
                            },
                            "services": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "default": null
                            },
                            "status": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "description": "Device state, e.g. quarantined, stocked, ready",
                                        "enum": [
                                            "",
                                            "ERROR",
                                            "IS-ACTIVE",
                                            "IS-MAINT",
                                            "IS-NOCOMMS",
                                            "IS-READY",
                                            "IS-REBOOTING",
                                            "OOS-DECOMM",
                                            "OOS-MAINT",
                                            "OOS-NOCOMMS",
                                            "OOS-QUARANTINED",
                                            "OOS-READY",
                                            "OOS-REBOOTING",
                                            "OOS-STOCKED"
                                        ],
                                        "type": "string"
                                    },
                                    "error_message": {
                                        "description": "Error message details for state field",
                                        "type": "string"
                                    },
                                    "pool_id": {
                                        "description": "id of device pool to which this device is assignedIf device is not in a pool, then it is left in OOS-QUARANTINED state",
                                        "type": "string",
                                        "default": null
                                    },
                                    "is_acknowledged": {
                                        "description": "True if the user has stocked or acknowledged this device, False otherwise",
                                        "type": "boolean"
                                    },
                                    "comm_state": {
                                        "description": "comm state of this device",
                                        "enum": [
                                            "never",
                                            "off",
                                            "on"
                                        ],
                                        "type": "string"
                                    },
                                    "blueprint_id": {
                                        "description": "id of a blueprint to which this device is assignedIf device is not in a blueprint, then this field is blank",
                                        "type": "string",
                                        "default": null
                                    },
                                    "blueprint_active": {
                                        "description": "true if the device is active in a blueprint, false otherwise.Also false if this device is not in a blueprint",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "hostname": {
                                        "description": "Name of the host as retrieved from the device configuration on the device by the AOS device-agent",
                                        "type": "string",
                                        "default": null
                                    },
                                    "domain_name": {
                                        "description": "The domain name as retrieved from the device configuration on the device, read by the AOS device-agent.",
                                        "type": "string",
                                        "default": null
                                    },
                                    "fqdn": {
                                        "description": "The fully-qualified domain name, essentially the hostname.domain, or empty string",
                                        "type": "string",
                                        "default": null
                                    },
                                    "operation_mode": {
                                        "description": "AOS device agents operational mode.",
                                        "enum": [
                                            "full_control",
                                            "telemetry_only"
                                        ],
                                        "type": "string"
                                    },
                                    "service_state": {
                                        "description": "Network operational state of this device",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "comm_state",
                                    "error_message",
                                    "is_acknowledged",
                                    "operation_mode",
                                    "service_state",
                                    "state"
                                ],
                                "default": null
                            },
                            "container_status": {
                                "description": "Operational status of docker container used to execute system agent that connect remotely to the managed device",
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "description": "State of the system agent docker container",
                                        "enum": [
                                            "nonexistent",
                                            "running",
                                            "scheduled",
                                            "stopped"
                                        ],
                                        "type": "string"
                                    },
                                    "error": {
                                        "description": "Operational error message system agent docker container",
                                        "type": "string"
                                    },
                                    "host": {
                                        "description": "Name of the docker container host running this container",
                                        "type": "string",
                                        "default": null
                                    },
                                    "name": {
                                        "description": "Name of the running docker container used by docker daemon",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "error",
                                    "status"
                                ],
                                "default": null
                            }
                        }
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemsSystemIdAnomaliesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "source_ip": {
                                                "description": "source address of the BGP session",
                                                "type": "string"
                                            },
                                            "destination_ip": {
                                                "description": "destination address of the BGP session",
                                                "type": "string"
                                            },
                                            "source_asn": {
                                                "description": "source ASN of the BGP session",
                                                "type": "string"
                                            },
                                            "destination_asn": {
                                                "description": "destination ASN of the BGP session",
                                                "type": "string"
                                            },
                                            "vrf_name": {
                                                "description": "VRF name of the BGP session",
                                                "type": "string"
                                            },
                                            "addr_family": {
                                                "description": "Address family of the BGP session",
                                                "enum": [
                                                    "evpn",
                                                    "ipv4",
                                                    "ipv6"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "addr_family",
                                            "anomaly_type",
                                            "destination_asn",
                                            "destination_ip",
                                            "source_asn",
                                            "source_ip",
                                            "system_id",
                                            "vrf_name"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "expected session state",
                                                "enum": [
                                                    "down",
                                                    "missing",
                                                    "unknown",
                                                    "up",
                                                    "valueSigned"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "actual session state",
                                                "enum": [
                                                    "down",
                                                    "missing",
                                                    "unknown",
                                                    "up",
                                                    "valueSigned"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "interface": {
                                                "description": "interface on device of the cabling alert",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "interface",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "neighbor_name": {
                                                "description": "expected neighbor name",
                                                "type": "string"
                                            },
                                            "neighbor_interface": {
                                                "description": "expected neighbor interface",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "neighbor_interface",
                                            "neighbor_name"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "neighbor_name": {
                                                "description": "actual neighbor name",
                                                "type": "string"
                                            },
                                            "neighbor_interface": {
                                                "description": "actual neighbor interface",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "neighbor_interface",
                                            "neighbor_name"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "interface": {
                                                "description": "interface on device of the cabling alert",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "interface",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "expected interface state",
                                                "enum": [
                                                    "down",
                                                    "missing",
                                                    "unknown",
                                                    "up",
                                                    "valueSigned"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "actual interface state",
                                                "enum": [
                                                    "down",
                                                    "missing",
                                                    "unknown",
                                                    "up",
                                                    "valueSigned"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "fqdn": {
                                                "description": "expected FQDN",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "fqdn"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "fqdn": {
                                                "description": "actual FQDN",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "fqdn"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "lag": {
                                                "description": "Name of the link aggregation",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "lag",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "interfaces_up": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "intf_up_count": {
                                                "description": "expected number of intfs up",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "interfaces_up",
                                            "intf_up_count"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "interfaces_up": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "intf_up_count": {
                                                "description": "actual number of intfs up",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "interfaces_up",
                                            "intf_up_count"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "agents": {
                                                "type": "array",
                                                "items": {
                                                    "description": "List of AOS agent names expected to be running on device",
                                                    "type": "string"
                                                }
                                            },
                                            "alive": {
                                                "description": "device is alive",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "agents",
                                            "alive"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "agents": {
                                                "type": "array",
                                                "items": {
                                                    "description": "List of AOS agent names running on device",
                                                    "type": "string"
                                                }
                                            },
                                            "alive": {
                                                "description": "device is alive",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "agents",
                                            "alive"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "destination_ip": {
                                                "description": "destination subnet of the route",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "destination_ip",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "expected route destination status",
                                                "enum": [
                                                    "missing",
                                                    "partial",
                                                    "unknown",
                                                    "up"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "actual route destination status",
                                                "enum": [
                                                    "missing",
                                                    "partial",
                                                    "unknown",
                                                    "up"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "config": {
                                                "description": "expected device config",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "config"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "config": {
                                                "description": "actual device config",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "config"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "system_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "deployment_status": {
                                                "enum": [
                                                    "success"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "deployment_status"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "deployment_status": {
                                                "enum": [
                                                    "failed"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "deployment_status"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "blueprint_id": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "blueprint_id"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "failed_systems": {
                                                "description": "List of systems with failed renderings",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "required": [
                                            "failed_systems"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "failed_systems": {
                                                "description": "List of systems with failed renderings",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "required": [
                                            "failed_systems"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "endpoint_type": {
                                                "enum": [
                                                    "alerts",
                                                    "events",
                                                    "perfmon"
                                                ],
                                                "type": "string",
                                                "default": null
                                            },
                                            "hostname": {
                                                "description": "hostname of the endpoint",
                                                "type": "string"
                                            },
                                            "port": {
                                                "description": "port of the endpoint",
                                                "type": "integer"
                                            },
                                            "protocol": {
                                                "enum": [
                                                    "protoBufOverTcp"
                                                ],
                                                "type": "string",
                                                "default": null
                                            },
                                            "sequencing_mode": {
                                                "enum": [
                                                    "sequenced",
                                                    "unsequenced"
                                                ],
                                                "type": "string",
                                                "default": null
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "hostname",
                                            "port"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "enum": [
                                                    "ok"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "status"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "status"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "vlan": {
                                                "type": "string"
                                            },
                                            "mac_address": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "mac_address",
                                            "system_id",
                                            "vlan"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "max_interval": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "max_interval"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "interface_name": {
                                                "type": "string"
                                            },
                                            "move_count": {
                                                "type": "string"
                                            },
                                            "move_interval": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "interface_name",
                                            "move_count",
                                            "move_interval"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "system_id": {
                                                "description": "identifier of the device on which this alert was raised",
                                                "type": "string"
                                            },
                                            "domain_id": {
                                                "type": "string"
                                            },
                                            "mlag_id": {
                                                "type": "string"
                                            },
                                            "interface_name": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "domain_id",
                                            "interface_name",
                                            "mlag_id",
                                            "system_id"
                                        ]
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "domain_state": {
                                                "description": "mlag device level state",
                                                "enum": [
                                                    "active",
                                                    "disabled",
                                                    "inactive",
                                                    "missing",
                                                    "unknown"
                                                ],
                                                "type": "string"
                                            },
                                            "intf_state": {
                                                "description": "mlag interface state",
                                                "enum": [
                                                    "active_full",
                                                    "active_partial",
                                                    "configured",
                                                    "disabled",
                                                    "inactive",
                                                    "missing",
                                                    "unknown"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "domain_state",
                                            "intf_state"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "domain_state": {
                                                "description": "mlag device level state",
                                                "enum": [
                                                    "active",
                                                    "disabled",
                                                    "inactive",
                                                    "missing",
                                                    "unknown"
                                                ],
                                                "type": "string"
                                            },
                                            "intf_state": {
                                                "description": "mlag interface state",
                                                "enum": [
                                                    "active_full",
                                                    "active_partial",
                                                    "configured",
                                                    "disabled",
                                                    "inactive",
                                                    "missing",
                                                    "unknown"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "domain_state",
                                            "intf_state"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "role",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "probe_id": {
                                                "type": "string"
                                            },
                                            "stage_name": {
                                                "type": "string"
                                            },
                                            "predefined_probe_name": {
                                                "type": "string",
                                                "default": null
                                            },
                                            "item_id": {
                                                "type": "integer"
                                            },
                                            "properties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {}
                                                    },
                                                    "required": [
                                                        "key",
                                                        "value"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "item_id",
                                            "probe_id",
                                            "properties",
                                            "stage_name"
                                        ]
                                    },
                                    "anomalous": {
                                        "type": "object",
                                        "properties": {
                                            "value_min": {
                                                "description": "Anomalous range min",
                                                "type": "number",
                                                "default": null
                                            },
                                            "value_max": {
                                                "description": "Anomalous range max",
                                                "type": "number",
                                                "default": null
                                            },
                                            "value": {
                                                "description": "Anomalous value",
                                                "anyOf": [
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ],
                                                "default": null
                                            }
                                        }
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "Actual value",
                                                "anyOf": [
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomalous",
                                    "anomaly_type",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "severity"
                                ]
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump38"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump39"
                                    },
                                    "severity": {
                                        "$ref": "#/definitions/TypeDump40"
                                    },
                                    "anomaly_type": {
                                        "$ref": "#/definitions/TypeDump41"
                                    },
                                    "anomalous_node_id": {
                                        "$ref": "#/definitions/TypeDump42"
                                    },
                                    "identity": {
                                        "type": "object",
                                        "properties": {
                                            "anomaly_type": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Represents the key by which the data is assessed to be anomalous",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "anomaly_type",
                                            "value"
                                        ]
                                    },
                                    "expected": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "Expected value of the field from identity",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    },
                                    "actual": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "description": "Actual value of the field from identity",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "actual",
                                    "anomaly_type",
                                    "expected",
                                    "id",
                                    "identity",
                                    "last_modified_at",
                                    "severity"
                                ]
                            }
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemsSystemIdCountersResponse": {
            "title": "DeviceInterfaceCounterStatus",
            "type": "object",
            "properties": {
                "items": {
                    "description": "interface counter status for each interface",
                    "type": "array",
                    "items": {
                        "title": "InterfaceCounterStatus",
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "Name of system",
                                "type": "string",
                                "minLength": 4
                            },
                            "interface_name": {
                                "description": "Name of interface",
                                "type": "string",
                                "minLength": 1
                            },
                            "rx_unicast_packets": {
                                "description": "number of unicast packets received",
                                "type": "integer"
                            },
                            "rx_broadcast_packets": {
                                "description": "number of broadcast packets received",
                                "type": "integer"
                            },
                            "rx_multicast_packets": {
                                "description": "number of multicast packets received",
                                "type": "integer"
                            },
                            "rx_error_packets": {
                                "description": "number of erroneous packets received",
                                "type": "integer"
                            },
                            "rx_discard_packets": {
                                "description": "number of incoming packets discarded",
                                "type": "integer"
                            },
                            "rx_bytes": {
                                "description": "number of bytes received",
                                "type": "integer"
                            },
                            "tx_unicast_packets": {
                                "description": "number of unicast packets transmitted",
                                "type": "integer"
                            },
                            "tx_broadcast_packets": {
                                "description": "number of broadcast packets transmitted",
                                "type": "integer"
                            },
                            "tx_multicast_packets": {
                                "description": "number of multicast packets transmitted",
                                "type": "integer"
                            },
                            "tx_error_packets": {
                                "description": "number of erroneous packets transmitted",
                                "type": "integer"
                            },
                            "tx_discard_packets": {
                                "description": "number of outgoing packets discarded",
                                "type": "integer"
                            },
                            "tx_bytes": {
                                "description": "number of bytes transmitted",
                                "type": "integer"
                            },
                            "alignment_errors": {
                                "description": "number of frames received that don't end with an even number of octets and have a bad CRC",
                                "type": "integer"
                            },
                            "fcs_errors": {
                                "description": "number of frame check sequence (FCS) errors",
                                "type": "integer"
                            },
                            "symbol_errors": {
                                "description": "number of times where the interface detects an undefined (invalid) Symbol received. Small amounts of symbol errors can be ignored. Large amounts of symbol errors can indicate a bad device, cable, or hardware.",
                                "type": "integer"
                            },
                            "runts": {
                                "description": "number of packets that are discarded because they are smaller than the medium's minimum packet size",
                                "type": "integer"
                            },
                            "giants": {
                                "description": "number of packets that are discarded because they exceed the medium's maximum packet size",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "alignment_errors",
                            "fcs_errors",
                            "giants",
                            "interface_name",
                            "runts",
                            "rx_broadcast_packets",
                            "rx_bytes",
                            "rx_discard_packets",
                            "rx_error_packets",
                            "rx_multicast_packets",
                            "rx_unicast_packets",
                            "symbol_errors",
                            "system_id",
                            "tx_broadcast_packets",
                            "tx_bytes",
                            "tx_discard_packets",
                            "tx_error_packets",
                            "tx_multicast_packets",
                            "tx_unicast_packets"
                        ]
                    }
                },
                "delta_microseconds": {
                    "description": "microseconds since last update",
                    "type": "integer"
                }
            },
            "required": [
                "delta_microseconds",
                "items"
            ]
        },
        "GetApiSystemsSystemIdPristineConfigResponse": {
            "type": "object",
            "properties": {
                "platform": {
                    "description": "Platform name for the pristine data",
                    "type": "string"
                },
                "pristine_data": {
                    "description": "Device pristine config containing list of files with name and content",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of the pristine configuration file",
                                "type": "string"
                            },
                            "content": {
                                "description": "Pristine config string",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "content",
                            "name"
                        ]
                    }
                },
                "hasDiverged": {
                    "description": "Indicates if the pristine config in AOS and pristine config in device has diverged or not",
                    "type": "boolean"
                }
            },
            "required": [
                "hasDiverged",
                "platform",
                "pristine_data"
            ]
        },
        "GetApiSystemsSystemIdResponse": {
            "type": "object",
            "properties": {
                "user_config": {
                    "type": "object",
                    "properties": {
                        "aos_hcl_model": {
                            "description": "The hardware model of the device as defined by the AOS Hardware Compatibility List (HCL)",
                            "type": "string",
                            "minLength": 1
                        },
                        "location": {
                            "description": "Information that assists the User find the physical location of the device; generally room, rack, rack-unit.This field is free-form text.",
                            "type": "string",
                            "default": null
                        },
                        "admin_state": {
                            "description": "normalIntended device state by the user. Possible values are: maintIntended device state by the user. Possible values are: decomm",
                            "enum": [
                                "decomm",
                                "maint",
                                "normal"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "admin_state",
                        "aos_hcl_model"
                    ],
                    "default": null
                },
                "facts": {
                    "type": "object",
                    "properties": {
                        "serial_number": {
                            "description": "The specific serial-number associated to the         network device",
                            "type": "string"
                        },
                        "hw_model": {
                            "description": "The specific OS product model",
                            "type": "string"
                        },
                        "hw_version": {
                            "description": "The hardware version",
                            "type": "string"
                        },
                        "vendor": {
                            "description": "The name of manufacturer of the host, should be stored in lower case",
                            "type": "string"
                        },
                        "os_family": {
                            "description": "The name of the operating system running on the host, should be stored lower-case",
                            "type": "string"
                        },
                        "os_variant": {
                            "description": "The variant of the operating system running on the host, should be stored lower-case",
                            "type": "string"
                        },
                        "aos_hcl_model": {
                            "description": "HCL entry matching the device facts. If empty, it means no match is found, i.e. device not in HCL",
                            "type": "string"
                        },
                        "os_arch": {
                            "description": "The OS architecture name",
                            "type": "string"
                        },
                        "os_version": {
                            "description": "The version string of the operating system running on the host",
                            "type": "string"
                        },
                        "os_version_info": {
                            "description": "Version information with major, minor and build components. Interpretation of the fields is device-specific",
                            "type": "object",
                            "properties": {
                                "major": {
                                    "description": "Major version of OS",
                                    "type": "string"
                                },
                                "minor": {
                                    "description": "Minor version of OS",
                                    "type": "string"
                                },
                                "build": {
                                    "description": "Build version of OS",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "build",
                                "major",
                                "minor"
                            ]
                        },
                        "os_version_ordinal": {
                            "description": "Integer representation of the operating system version",
                            "type": "integer"
                        },
                        "aos_version": {
                            "description": "The AOS version of the device telemetry agent.  This comes from the \"version\" file located on the device",
                            "type": "string"
                        },
                        "aos_server": {
                            "description": "The IP address, or hostname, listed in the aos.conf file indicating where this device should connect to",
                            "type": "string"
                        },
                        "mgmt_macaddr": {
                            "description": "The MAC-address associated with the mgmt_ifname",
                            "type": "string"
                        },
                        "mgmt_ifname": {
                            "description": "The management interface name that is being used to connect to the AOS server",
                            "type": "string"
                        },
                        "mgmt_ipaddr": {
                            "description": "The management interface IP address associated with mgmt_ifname",
                            "type": "string"
                        },
                        "chassis_mac_ranges": {
                            "description": "Ranges of mac addresses assigned to the device",
                            "type": "string"
                        }
                    },
                    "required": [
                        "aos_hcl_model",
                        "aos_server",
                        "aos_version",
                        "chassis_mac_ranges",
                        "hw_model",
                        "hw_version",
                        "mgmt_ifname",
                        "mgmt_ipaddr",
                        "mgmt_macaddr",
                        "os_arch",
                        "os_family",
                        "os_variant",
                        "os_version",
                        "os_version_info",
                        "os_version_ordinal",
                        "serial_number",
                        "vendor"
                    ],
                    "default": null
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "state": {
                            "description": "Device state, e.g. quarantined, stocked, ready",
                            "enum": [
                                "",
                                "ERROR",
                                "IS-ACTIVE",
                                "IS-MAINT",
                                "IS-NOCOMMS",
                                "IS-READY",
                                "IS-REBOOTING",
                                "OOS-DECOMM",
                                "OOS-MAINT",
                                "OOS-NOCOMMS",
                                "OOS-QUARANTINED",
                                "OOS-READY",
                                "OOS-REBOOTING",
                                "OOS-STOCKED"
                            ],
                            "type": "string"
                        },
                        "error_message": {
                            "description": "Error message details for state field",
                            "type": "string"
                        },
                        "pool_id": {
                            "description": "id of device pool to which this device is assignedIf device is not in a pool, then it is left in OOS-QUARANTINED state",
                            "type": "string",
                            "default": null
                        },
                        "is_acknowledged": {
                            "description": "True if the user has stocked or acknowledged this device, False otherwise",
                            "type": "boolean"
                        },
                        "comm_state": {
                            "description": "comm state of this device",
                            "enum": [
                                "never",
                                "off",
                                "on"
                            ],
                            "type": "string"
                        },
                        "blueprint_id": {
                            "description": "id of a blueprint to which this device is assignedIf device is not in a blueprint, then this field is blank",
                            "type": "string",
                            "default": null
                        },
                        "blueprint_active": {
                            "description": "true if the device is active in a blueprint, false otherwise.Also false if this device is not in a blueprint",
                            "type": "boolean",
                            "default": null
                        },
                        "hostname": {
                            "description": "Name of the host as retrieved from the device configuration on the device by the AOS device-agent",
                            "type": "string",
                            "default": null
                        },
                        "domain_name": {
                            "description": "The domain name as retrieved from the device configuration on the device, read by the AOS device-agent.",
                            "type": "string",
                            "default": null
                        },
                        "fqdn": {
                            "description": "The fully-qualified domain name, essentially the hostname.domain, or empty string",
                            "type": "string",
                            "default": null
                        },
                        "operation_mode": {
                            "description": "AOS device agents operational mode.",
                            "enum": [
                                "full_control",
                                "telemetry_only"
                            ],
                            "type": "string"
                        },
                        "service_state": {
                            "description": "Network operational state of this device",
                            "enum": [
                                "active",
                                "inactive"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "comm_state",
                        "error_message",
                        "is_acknowledged",
                        "operation_mode",
                        "service_state",
                        "state"
                    ],
                    "default": null
                },
                "container_status": {
                    "description": "Operational status of docker container used to execute system agent that connect remotely to the managed device",
                    "type": "object",
                    "properties": {
                        "status": {
                            "description": "State of the system agent docker container",
                            "enum": [
                                "nonexistent",
                                "running",
                                "scheduled",
                                "stopped"
                            ],
                            "type": "string"
                        },
                        "error": {
                            "description": "Operational error message system agent docker container",
                            "type": "string"
                        },
                        "host": {
                            "description": "Name of the docker container host running this container",
                            "type": "string",
                            "default": null
                        },
                        "name": {
                            "description": "Name of the running docker container used by docker daemon",
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "error",
                        "status"
                    ],
                    "default": null
                }
            }
        },
        "GetApiSystemsSystemIdServicesConfigurationDataResponse": {
            "title": "DeviceDeploymentConfigStatus",
            "type": "object",
            "properties": {
                "system_id": {
                    "description": "Name of system (cannot be used in API queries)",
                    "type": "string"
                },
                "expected": {
                    "$ref": "#/definitions/DeviceDeploymentConfigStatusDataDump"
                },
                "actual": {
                    "$ref": "#/definitions/DeviceDeploymentConfigStatusDataDump"
                },
                "error_message": {
                    "description": "Error, if applicable",
                    "type": "string"
                },
                "deploy_state": {
                    "description": "Current device state",
                    "enum": [
                        "commit_check_in_progress",
                        "deviated",
                        "failed",
                        "first_boot",
                        "in_progress",
                        "init",
                        "rebooted",
                        "succeeded",
                        "user_accepted_config_failed",
                        "user_accepted_config_in_progress",
                        "user_accepted_config_succeeded"
                    ],
                    "type": "string"
                },
                "contiguous_failures": {
                    "description": "Number of contiguous deployment failures, if applicable",
                    "type": "integer",
                    "minimum": 0,
                    "default": null
                },
                "configuration_service_state": {
                    "description": "Device configuration services management by AOS",
                    "type": "string"
                },
                "last_boot_time": {
                    "description": "Time of the last device boot in seconds",
                    "type": "integer",
                    "minimum": 0
                }
            },
            "required": [
                "actual",
                "configuration_service_state",
                "deploy_state",
                "error_message",
                "expected",
                "last_boot_time",
                "system_id"
            ]
        },
        "GetApiSystemsSystemIdServicesServiceNameDataResponse": {
            "title": "ServiceOneOf",
            "oneOf": [
                {
                    "title": "ArpStatus",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/TypeDump44"
                        },
                        "system_id": {
                            "$ref": "#/definitions/TypeDump45"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump46"
                        },
                        "last_fetched_at": {
                            "$ref": "#/definitions/TypeDump47"
                        },
                        "role": {
                            "$ref": "#/definitions/TypeDump48"
                        },
                        "identity": {
                            "description": "Unique Id of this ARP table entry",
                            "type": "object",
                            "properties": {
                                "vrf_name": {
                                    "description": "VRF name",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "ip_address": {
                                    "description": "Dotted-Decimal form of the IPv4 address of this ARP table entry",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "ip_address",
                                "vrf_name"
                            ]
                        },
                        "actual": {
                            "description": "Status of this ARP table entry",
                            "type": "object",
                            "properties": {
                                "mac_address": {
                                    "description": "MAC address for this ARP table entry",
                                    "type": "string"
                                },
                                "interface_name": {
                                    "description": "Name of the interface for this ARP table entry",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Static or dynamic ARP",
                                    "enum": [
                                        "dynamicArp",
                                        "staticArp",
                                        "unknown"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "interface_name",
                                "mac_address",
                                "type"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "identity",
                        "last_fetched_at",
                        "last_modified_at",
                        "role",
                        "system_id",
                        "type"
                    ],
                    "default": null
                },
                {
                    "title": "BgpStatus",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/TypeDump44"
                        },
                        "system_id": {
                            "$ref": "#/definitions/TypeDump45"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump46"
                        },
                        "last_fetched_at": {
                            "$ref": "#/definitions/TypeDump47"
                        },
                        "role": {
                            "$ref": "#/definitions/TypeDump48"
                        },
                        "identity": {
                            "description": "Unique id of BGP session",
                            "type": "object",
                            "properties": {
                                "source_ip": {
                                    "description": "IP address of source",
                                    "type": "string"
                                },
                                "source_asn": {
                                    "description": "ASN of source",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "destination_ip": {
                                    "description": "IP address of destination",
                                    "type": "string"
                                },
                                "destination_asn": {
                                    "description": "ASN of destination",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "vrf_name": {
                                    "description": "VRF name",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "addr_family": {
                                    "description": "Address family",
                                    "enum": [
                                        "evpn",
                                        "ipv4",
                                        "ipv6"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "addr_family",
                                "destination_asn",
                                "destination_ip",
                                "source_asn",
                                "source_ip",
                                "vrf_name"
                            ]
                        },
                        "expected": {
                            "description": "Expected status of BGP session",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/TypeDump49"
                                }
                            },
                            "required": [
                                "value"
                            ]
                        },
                        "actual": {
                            "description": "Actual status of BGP session",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "$ref": "#/definitions/TypeDump49"
                                }
                            },
                            "required": [
                                "value"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "expected",
                        "identity",
                        "last_fetched_at",
                        "last_modified_at",
                        "role",
                        "system_id",
                        "type"
                    ],
                    "default": null
                },
                {
                    "$ref": "#/definitions/InterfaceStatusDump",
                    "default": null
                },
                {
                    "title": "LagStatus",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/TypeDump44"
                        },
                        "system_id": {
                            "$ref": "#/definitions/TypeDump45"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump46"
                        },
                        "last_fetched_at": {
                            "$ref": "#/definitions/TypeDump47"
                        },
                        "role": {
                            "$ref": "#/definitions/TypeDump48"
                        },
                        "identity": {
                            "description": "Unique key for this LAG",
                            "type": "object",
                            "properties": {
                                "lag_name": {
                                    "description": "Name of the LAG",
                                    "type": "string",
                                    "minLength": 1
                                }
                            },
                            "required": [
                                "lag_name"
                            ]
                        },
                        "expected": {
                            "description": "Expected status of this LAG",
                            "type": "object",
                            "properties": {
                                "intf_up_count": {
                                    "$ref": "#/definitions/TypeDump51"
                                },
                                "interfaces": {
                                    "$ref": "#/definitions/TypeDump52"
                                }
                            },
                            "required": [
                                "interfaces",
                                "intf_up_count"
                            ]
                        },
                        "actual": {
                            "description": "Actual status of this LAG",
                            "type": "object",
                            "properties": {
                                "intf_up_count": {
                                    "$ref": "#/definitions/TypeDump51"
                                },
                                "interfaces": {
                                    "$ref": "#/definitions/TypeDump52"
                                }
                            },
                            "required": [
                                "interfaces",
                                "intf_up_count"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "expected",
                        "identity",
                        "last_fetched_at",
                        "last_modified_at",
                        "role",
                        "system_id",
                        "type"
                    ],
                    "default": null
                },
                {
                    "title": "LldpStatus",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/TypeDump44"
                        },
                        "system_id": {
                            "$ref": "#/definitions/TypeDump45"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump46"
                        },
                        "last_fetched_at": {
                            "$ref": "#/definitions/TypeDump47"
                        },
                        "role": {
                            "$ref": "#/definitions/TypeDump48"
                        },
                        "identity": {
                            "description": "Unique id of this LLDP instance",
                            "type": "object",
                            "properties": {
                                "interface_name": {
                                    "description": "name of this interface",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "system_description": {
                                    "description": "LLDP standard system description field",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "interface_name",
                                "system_description"
                            ]
                        },
                        "expected": {
                            "description": "Expected status of this LLDP instance",
                            "type": "object",
                            "properties": {
                                "neighbor_interface_name": {
                                    "$ref": "#/definitions/TypeDump53"
                                },
                                "neighbor_system_id": {
                                    "$ref": "#/definitions/TypeDump54"
                                },
                                "chassis_id": {
                                    "$ref": "#/definitions/TypeDump55"
                                }
                            },
                            "required": [
                                "chassis_id",
                                "neighbor_interface_name",
                                "neighbor_system_id"
                            ]
                        },
                        "actual": {
                            "description": "Actual status of this LLDP instance",
                            "type": "object",
                            "properties": {
                                "neighbor_interface_name": {
                                    "$ref": "#/definitions/TypeDump53"
                                },
                                "neighbor_system_id": {
                                    "$ref": "#/definitions/TypeDump54"
                                },
                                "chassis_id": {
                                    "$ref": "#/definitions/TypeDump55"
                                }
                            },
                            "required": [
                                "chassis_id",
                                "neighbor_interface_name",
                                "neighbor_system_id"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "expected",
                        "identity",
                        "last_fetched_at",
                        "last_modified_at",
                        "role",
                        "system_id",
                        "type"
                    ],
                    "default": null
                },
                {
                    "title": "MacStatus",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/TypeDump44"
                        },
                        "system_id": {
                            "$ref": "#/definitions/TypeDump45"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump46"
                        },
                        "last_fetched_at": {
                            "$ref": "#/definitions/TypeDump47"
                        },
                        "role": {
                            "$ref": "#/definitions/TypeDump48"
                        },
                        "identity": {
                            "description": "Unique ID of this entry in the MAC table",
                            "type": "object",
                            "properties": {
                                "vlan": {
                                    "description": "VLAN scope of this MAC address",
                                    "type": "string"
                                },
                                "mac_address": {
                                    "description": "MAC address",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "mac_address",
                                "vlan"
                            ]
                        },
                        "actual": {
                            "description": "Actual state of this MAC table entry",
                            "type": "object",
                            "properties": {
                                "interface_name": {
                                    "description": "Name of the interface on which this MAC address is found",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "static or dynamic MAC address",
                                    "enum": [
                                        "dynamicMac",
                                        "staticMac"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "interface_name",
                                "type"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "identity",
                        "last_fetched_at",
                        "last_modified_at",
                        "role",
                        "system_id",
                        "type"
                    ],
                    "default": null
                },
                {
                    "title": "MlagStatus",
                    "type": "object",
                    "properties": {
                        "identity": {
                            "title": "MlagIdentity",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "const": "mlag"
                                },
                                "system_id": {
                                    "type": "string",
                                    "minLength": 4
                                }
                            },
                            "required": [
                                "system_id",
                                "type"
                            ]
                        },
                        "expected": {
                            "title": "MlagExpected",
                            "type": "object",
                            "properties": {
                                "domain_id": {
                                    "type": "string"
                                },
                                "domain_state": {
                                    "description": "mlag device level state",
                                    "enum": [
                                        "active",
                                        "disabled",
                                        "inactive",
                                        "missing",
                                        "unknown"
                                    ],
                                    "type": "string"
                                },
                                "intfs": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MlagIntfStatusDump"
                                    }
                                }
                            },
                            "required": [
                                "domain_id",
                                "domain_state",
                                "intfs"
                            ]
                        },
                        "actual": {
                            "title": "MlagActual",
                            "type": "object",
                            "properties": {
                                "domain_id": {
                                    "type": "string"
                                },
                                "domain_state": {
                                    "description": "MLAG device level state",
                                    "enum": [
                                        "active",
                                        "disabled",
                                        "inactive",
                                        "missing",
                                        "unknown"
                                    ],
                                    "type": "string"
                                },
                                "local_interface": {
                                    "description": "Name of local interface",
                                    "type": "string"
                                },
                                "local_intf_status": {
                                    "description": "Local interface status",
                                    "enum": [
                                        "down",
                                        "missing",
                                        "toBytes",
                                        "unknown",
                                        "up"
                                    ],
                                    "type": "string"
                                },
                                "peer_link": {
                                    "description": "Name of interface on peer",
                                    "type": "string"
                                },
                                "peer_link_status": {
                                    "description": "Status of interface on peer",
                                    "type": "string"
                                },
                                "peer_address": {
                                    "description": "Dotted Decimal notation of IPv4 address of peer interface",
                                    "type": "string"
                                },
                                "intfs": {
                                    "description": "Constituent interfaces of this MLAG",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MlagIntfStatusDump"
                                    }
                                }
                            },
                            "required": [
                                "domain_id",
                                "domain_state",
                                "intfs",
                                "local_interface",
                                "local_intf_status",
                                "peer_address",
                                "peer_link",
                                "peer_link_status"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "expected",
                        "identity"
                    ],
                    "default": null
                },
                {
                    "title": "RouteStatus",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/TypeDump44"
                        },
                        "system_id": {
                            "$ref": "#/definitions/TypeDump45"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeDump46"
                        },
                        "last_fetched_at": {
                            "$ref": "#/definitions/TypeDump47"
                        },
                        "role": {
                            "$ref": "#/definitions/TypeDump48"
                        },
                        "identity": {
                            "description": "Unique identity of this route",
                            "type": "object",
                            "properties": {
                                "destination_ip": {
                                    "description": "Dotted-Decimal notation of destination IPv4 address",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "destination_ip"
                            ]
                        },
                        "expected": {
                            "description": "Expected status of this route",
                            "type": "object",
                            "properties": {
                                "next_hops": {
                                    "$ref": "#/definitions/TypeDump56"
                                },
                                "value": {
                                    "$ref": "#/definitions/TypeDump57"
                                }
                            },
                            "required": [
                                "next_hops",
                                "value"
                            ]
                        },
                        "actual": {
                            "description": "Actual status of this route",
                            "type": "object",
                            "properties": {
                                "next_hops": {
                                    "$ref": "#/definitions/TypeDump56"
                                },
                                "value": {
                                    "$ref": "#/definitions/TypeDump57"
                                }
                            },
                            "required": [
                                "next_hops",
                                "value"
                            ]
                        }
                    },
                    "required": [
                        "actual",
                        "expected",
                        "identity",
                        "last_fetched_at",
                        "last_modified_at",
                        "role",
                        "system_id",
                        "type"
                    ],
                    "default": null
                },
                {
                    "title": "TransceiverStatus",
                    "type": "object",
                    "properties": {
                        "intf_name": {
                            "description": "Name of interface",
                            "type": "string",
                            "minLength": 1
                        },
                        "details": {
                            "description": "More information (depends on device)",
                            "type": "string",
                            "minLength": 1
                        },
                        "system_id": {
                            "description": "System name such as serial number",
                            "type": "string",
                            "minLength": 4
                        },
                        "last_fetched_at": {
                            "description": "Time at which the this value was fetched",
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "required": [
                        "details",
                        "intf_name",
                        "last_fetched_at",
                        "system_id"
                    ],
                    "default": null
                },
                {
                    "title": "DeviceInterfaceCounterStatus",
                    "type": "object",
                    "properties": {
                        "items": {
                            "description": "interface counter status for each interface",
                            "type": "array",
                            "items": {
                                "title": "InterfaceCounterStatus",
                                "type": "object",
                                "properties": {
                                    "system_id": {
                                        "description": "Name of system",
                                        "type": "string",
                                        "minLength": 4
                                    },
                                    "interface_name": {
                                        "description": "Name of interface",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "rx_unicast_packets": {
                                        "description": "number of unicast packets received",
                                        "type": "integer"
                                    },
                                    "rx_broadcast_packets": {
                                        "description": "number of broadcast packets received",
                                        "type": "integer"
                                    },
                                    "rx_multicast_packets": {
                                        "description": "number of multicast packets received",
                                        "type": "integer"
                                    },
                                    "rx_error_packets": {
                                        "description": "number of erroneous packets received",
                                        "type": "integer"
                                    },
                                    "rx_discard_packets": {
                                        "description": "number of incoming packets discarded",
                                        "type": "integer"
                                    },
                                    "rx_bytes": {
                                        "description": "number of bytes received",
                                        "type": "integer"
                                    },
                                    "tx_unicast_packets": {
                                        "description": "number of unicast packets transmitted",
                                        "type": "integer"
                                    },
                                    "tx_broadcast_packets": {
                                        "description": "number of broadcast packets transmitted",
                                        "type": "integer"
                                    },
                                    "tx_multicast_packets": {
                                        "description": "number of multicast packets transmitted",
                                        "type": "integer"
                                    },
                                    "tx_error_packets": {
                                        "description": "number of erroneous packets transmitted",
                                        "type": "integer"
                                    },
                                    "tx_discard_packets": {
                                        "description": "number of outgoing packets discarded",
                                        "type": "integer"
                                    },
                                    "tx_bytes": {
                                        "description": "number of bytes transmitted",
                                        "type": "integer"
                                    },
                                    "alignment_errors": {
                                        "description": "number of frames received that don't end with an even number of octets and have a bad CRC",
                                        "type": "integer"
                                    },
                                    "fcs_errors": {
                                        "description": "number of frame check sequence (FCS) errors",
                                        "type": "integer"
                                    },
                                    "symbol_errors": {
                                        "description": "number of times where the interface detects an undefined (invalid) Symbol received. Small amounts of symbol errors can be ignored. Large amounts of symbol errors can indicate a bad device, cable, or hardware.",
                                        "type": "integer"
                                    },
                                    "runts": {
                                        "description": "number of packets that are discarded because they are smaller than the medium's minimum packet size",
                                        "type": "integer"
                                    },
                                    "giants": {
                                        "description": "number of packets that are discarded because they exceed the medium's maximum packet size",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "alignment_errors",
                                    "fcs_errors",
                                    "giants",
                                    "interface_name",
                                    "runts",
                                    "rx_broadcast_packets",
                                    "rx_bytes",
                                    "rx_discard_packets",
                                    "rx_error_packets",
                                    "rx_multicast_packets",
                                    "rx_unicast_packets",
                                    "symbol_errors",
                                    "system_id",
                                    "tx_broadcast_packets",
                                    "tx_bytes",
                                    "tx_discard_packets",
                                    "tx_error_packets",
                                    "tx_multicast_packets",
                                    "tx_unicast_packets"
                                ]
                            }
                        },
                        "delta_microseconds": {
                            "description": "microseconds since last update",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "delta_microseconds",
                        "items"
                    ],
                    "default": null
                },
                {}
            ]
        },
        "GetApiSystemsSystemIdServicesServiceNameResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The name of the telemetry configuration",
                                "type": "string"
                            },
                            "input": {
                                "description": "The input data for the telemetry configuration",
                                "type": "string"
                            },
                            "interval": {
                                "description": "The time interval in seconds at which telemetry data is collected",
                                "type": "number",
                                "minimum": 1
                            },
                            "execution_count": {
                                "description": "The number of times the telemetry collection is executed. A value of -1 indicates unlimited executions",
                                "type": "integer",
                                "minimum": -1
                            },
                            "collection_type": {
                                "description": "The type of telemetry collection, as defined by the available enumeration values",
                                "enum": [
                                    "any",
                                    "gRPCOnChange",
                                    "gRPCPeriodic",
                                    "polling"
                                ],
                                "type": "string"
                            },
                            "collection_filters": {
                                "type": "array",
                                "items": {
                                    "title": "Ingestion filter",
                                    "description": "Defines what metric keys should be reported by a collector",
                                    "type": "object",
                                    "additionalProperties": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "any"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "equals"
                                                    },
                                                    "value": {
                                                        "$ref": "#/definitions/TypeDump59"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "pattern"
                                                    },
                                                    "value": {
                                                        "$ref": "#/definitions/TypeDump59"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "range"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "min": {
                                                                "$ref": "#/definitions/TypeDump60",
                                                                "default": null
                                                            },
                                                            "max": {
                                                                "$ref": "#/definitions/TypeDump60",
                                                                "default": null
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "prefix"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "prefix": {
                                                                "title": "Prefix",
                                                                "description": "IPv4 or IPV6 network address, specified in the form of network/prefixlen.",
                                                                "type": "string"
                                                            },
                                                            "le_mask": {
                                                                "title": "More-specific prefixes mask",
                                                                "description": "Match more-specific prefixes from a parent prefix, up until le_mask prefix len. Range is 0-32 for IPv4, 0-128 for IPv6. If not specified, implies the prefix-list entry should be an exact match. This option can be optionally be used in combination with ge_mask.  le_mask must be longer than the subnetprefix length.  If le_mask and ge_mask are both specified, then le_mask must be greater than ge_mask.",
                                                                "type": "integer",
                                                                "minimum": 0,
                                                                "maximum": 128
                                                            },
                                                            "ge_mask": {
                                                                "title": "Less-specific prefixes mask",
                                                                "description": "Match less-specific prefixes from a parent prefix, up from ge_mask to the prefix length of the route. Range is 0-32 for IPv4, 0-128 for IPv6. If not specified, implies the prefix-list entry should be an exact match. This option can be optionally be used in combination with le_mask. ge_mask must be longer than the subnet prefix length. If le_mask and  ge_mask are both specified, then le_mask must be greater than ge_mask.",
                                                                "type": "integer",
                                                                "minimum": 0,
                                                                "maximum": 128
                                                            }
                                                        },
                                                        "required": [
                                                            "prefix"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                },
                                "default": null
                            },
                            "source": {
                                "description": "Source of this configuration ('api/blueprint/default')",
                                "type": "string",
                                "default": null
                            },
                            "status": {
                                "type": "object",
                                "properties": {
                                    "run_count": {
                                        "description": "The number of times the telemetry collection has been run",
                                        "type": "integer"
                                    },
                                    "success_count": {
                                        "description": "The number of successful telemetry collections",
                                        "type": "integer"
                                    },
                                    "failure_count": {
                                        "description": "The number of failed telemetry collections",
                                        "type": "integer"
                                    },
                                    "timeout_count": {
                                        "description": "The number of telemetry collections that timed out",
                                        "type": "integer"
                                    },
                                    "underrun_count": {
                                        "description": "The number of telemetry collections that did not run due to scheduling issues",
                                        "type": "integer"
                                    },
                                    "waiting_time": {
                                        "description": "The total waiting time for telemetry collections to start",
                                        "type": "number"
                                    },
                                    "execution_time": {
                                        "description": "The total execution time of the telemetry collections",
                                        "type": "number"
                                    },
                                    "max_queue_size": {
                                        "description": "The maximum size of the queue for telemetry collection tasks",
                                        "type": "integer"
                                    },
                                    "service_started": {
                                        "description": "Indicates whether the telemetry collection service has started",
                                        "type": "boolean"
                                    },
                                    "error_message": {
                                        "description": "The last error message encountered during telemetry collection",
                                        "type": "string"
                                    },
                                    "grpc_config_change_reset_count": {
                                        "description": "The number of times the gRPC configuration has been reset due to changes",
                                        "type": "integer"
                                    },
                                    "grpc_sequence_number_overrun": {
                                        "description": "The number of times the gRPC sequence number has overrun",
                                        "type": "integer"
                                    },
                                    "grpc_reset_count": {
                                        "description": "The number of gRPC connection resets",
                                        "type": "integer"
                                    },
                                    "grpc_connection_reset_count": {
                                        "description": "The number of gRPC connection resets initiated",
                                        "type": "integer"
                                    },
                                    "grpc_response_processing_failure": {
                                        "description": "The number of failures in processing gRPC responses",
                                        "type": "integer"
                                    },
                                    "grpc_server_reset_count": {
                                        "description": "The number of times the gRPC server has been reset",
                                        "type": "integer"
                                    },
                                    "grpc_message_count": {
                                        "description": "The total number of gRPC messages received",
                                        "type": "integer"
                                    },
                                    "grpc_initiate_count": {
                                        "description": "The number of times gRPC connections have been initiated",
                                        "type": "integer"
                                    },
                                    "grpc_initial_sync_timeout_count": {
                                        "description": "The number of times the initial gRPC sync has timed out",
                                        "type": "integer"
                                    },
                                    "grpc_periodic_response_timeout_count": {
                                        "description": "The number of times periodic gRPC responses have timed out",
                                        "type": "integer"
                                    },
                                    "grpc_total_sync_count": {
                                        "description": "The total number of gRPC syncs performed",
                                        "type": "integer"
                                    },
                                    "grpc_in_progress_count": {
                                        "description": "The number of gRPC syncs currently in progress",
                                        "type": "integer"
                                    },
                                    "grpc_total_count": {
                                        "description": "The total number of gRPC connections",
                                        "type": "integer"
                                    },
                                    "grpc_in_sync_count": {
                                        "description": "The number of gRPC connections currently in sync",
                                        "type": "integer"
                                    },
                                    "grpc_round_count": {
                                        "description": "The number of gRPC rounds completed",
                                        "type": "integer"
                                    },
                                    "grpc_average_initial_sync_time": {
                                        "description": "The average time taken for initial gRPC syncs",
                                        "type": "number"
                                    },
                                    "grpc_average_waiting_time": {
                                        "description": "The average waiting time for gRPC connections",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "error_message",
                                    "execution_time",
                                    "failure_count",
                                    "grpc_average_initial_sync_time",
                                    "grpc_average_waiting_time",
                                    "grpc_config_change_reset_count",
                                    "grpc_connection_reset_count",
                                    "grpc_in_progress_count",
                                    "grpc_in_sync_count",
                                    "grpc_initial_sync_timeout_count",
                                    "grpc_initiate_count",
                                    "grpc_message_count",
                                    "grpc_periodic_response_timeout_count",
                                    "grpc_reset_count",
                                    "grpc_response_processing_failure",
                                    "grpc_round_count",
                                    "grpc_sequence_number_overrun",
                                    "grpc_server_reset_count",
                                    "grpc_total_count",
                                    "grpc_total_sync_count",
                                    "max_queue_size",
                                    "run_count",
                                    "service_started",
                                    "success_count",
                                    "timeout_count",
                                    "underrun_count",
                                    "waiting_time"
                                ],
                                "default": null
                            }
                        },
                        "required": [
                            "collection_type",
                            "execution_count",
                            "input",
                            "interval",
                            "name"
                        ]
                    }
                }
            },
            "required": [
                "services"
            ]
        },
        "GetApiSystemsSystemIdServicesXcvrDataResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "title": "TransceiverStatus",
                        "type": "object",
                        "properties": {
                            "intf_name": {
                                "description": "Name of interface",
                                "type": "string",
                                "minLength": 1
                            },
                            "details": {
                                "description": "More information (depends on device)",
                                "type": "string",
                                "minLength": 1
                            },
                            "system_id": {
                                "description": "System name such as serial number",
                                "type": "string",
                                "minLength": 4
                            },
                            "last_fetched_at": {
                                "description": "Time at which the this value was fetched",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "required": [
                            "details",
                            "intf_name",
                            "last_fetched_at",
                            "system_id"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiSystemsSystemIdUtilizationResponse": {
            "type": "object",
            "properties": {
                "process": {
                    "type": "object",
                    "properties": {
                        "last_fetched_at": {
                            "type": "string"
                        },
                        "time_delta": {
                            "type": "integer"
                        },
                        "processes": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "type": "object",
                                        "properties": {
                                            "user": {
                                                "type": "number"
                                            },
                                            "system": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "system",
                                            "user"
                                        ]
                                    },
                                    "memory": {
                                        "type": "object",
                                        "properties": {
                                            "used": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "used"
                                        ]
                                    }
                                },
                                "required": [
                                    "cpu",
                                    "memory",
                                    "name"
                                ]
                            }
                        }
                    },
                    "required": [
                        "last_fetched_at",
                        "processes",
                        "time_delta"
                    ]
                },
                "system": {
                    "type": "object",
                    "properties": {
                        "last_fetched_at": {
                            "type": "string"
                        },
                        "time_delta": {
                            "type": "integer"
                        },
                        "cpu": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "number"
                                },
                                "system": {
                                    "type": "number"
                                },
                                "idle": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "idle",
                                "system",
                                "user"
                            ]
                        },
                        "memory": {
                            "type": "object",
                            "properties": {
                                "used": {
                                    "type": "integer"
                                },
                                "total": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "total",
                                "used"
                            ]
                        }
                    },
                    "required": [
                        "cpu",
                        "last_fetched_at",
                        "memory",
                        "time_delta"
                    ]
                },
                "file": {
                    "type": "object",
                    "properties": {
                        "last_fetched_at": {
                            "type": "string"
                        },
                        "files": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 4
                                    },
                                    "size": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "name",
                                    "size"
                                ]
                            }
                        }
                    },
                    "required": [
                        "files",
                        "last_fetched_at"
                    ]
                }
            },
            "required": [
                "file",
                "process",
                "system"
            ]
        },
        "GetApiTelemetryCollectorsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "os_type": {
                                    "enum": [
                                        "junos",
                                        "junos_evo"
                                    ],
                                    "type": "string"
                                },
                                "os_version": {
                                    "description": "os version",
                                    "type": "string"
                                },
                                "family": {
                                    "description": "schema family",
                                    "type": "string"
                                },
                                "model": {
                                    "title": "model pattern",
                                    "type": "string",
                                    "default": null
                                }
                            },
                            "required": [
                                "family",
                                "os_type",
                                "os_version"
                            ]
                        }
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetryCollectorsServiceNameOsTypeFamilyOsVersionResponse": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "object",
                    "properties": {
                        "os_type": {
                            "enum": [
                                "junos",
                                "junos_evo"
                            ],
                            "type": "string"
                        },
                        "os_version": {
                            "description": "os version",
                            "type": "string"
                        },
                        "family": {
                            "description": "schema family",
                            "type": "string"
                        },
                        "model": {
                            "title": "model pattern",
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "family",
                        "os_type",
                        "os_version"
                    ]
                },
                "source_type": {
                    "enum": [
                        "cli"
                    ],
                    "type": "string"
                },
                "cli": {
                    "description": "cli command text",
                    "type": "string"
                },
                "query": {
                    "type": "object",
                    "properties": {
                        "accessors": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "xpath of the element",
                                "type": "string"
                            }
                        },
                        "keys": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/TypeDump62"
                            }
                        },
                        "values": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/TypeDump62"
                            }
                        },
                        "filter": {
                            "description": "expression to be evaluated on keys and/or value, returning true if entry should be accepted",
                            "type": "string",
                            "default": ""
                        }
                    },
                    "required": [
                        "accessors",
                        "keys",
                        "values"
                    ]
                },
                "relaxed_schema_validation": {
                    "description": "relaxed RPC schema validation check",
                    "type": "boolean",
                    "default": null
                }
            },
            "required": [
                "cli",
                "platform",
                "query",
                "source_type"
            ]
        },
        "GetApiTelemetryCollectorsServiceNameResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "type": "object",
                                "properties": {
                                    "os_type": {
                                        "enum": [
                                            "junos",
                                            "junos_evo"
                                        ],
                                        "type": "string"
                                    },
                                    "os_version": {
                                        "description": "os version",
                                        "type": "string"
                                    },
                                    "family": {
                                        "description": "schema family",
                                        "type": "string"
                                    },
                                    "model": {
                                        "title": "model pattern",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "family",
                                    "os_type",
                                    "os_version"
                                ]
                            },
                            "source_type": {
                                "enum": [
                                    "cli"
                                ],
                                "type": "string"
                            },
                            "cli": {
                                "description": "cli command text",
                                "type": "string"
                            },
                            "query": {
                                "type": "object",
                                "properties": {
                                    "accessors": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "xpath of the element",
                                            "type": "string"
                                        }
                                    },
                                    "keys": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/definitions/TypeDump62"
                                        }
                                    },
                                    "values": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/definitions/TypeDump62"
                                        }
                                    },
                                    "filter": {
                                        "description": "expression to be evaluated on keys and/or value, returning true if entry should be accepted",
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "required": [
                                    "accessors",
                                    "keys",
                                    "values"
                                ]
                            },
                            "relaxed_schema_validation": {
                                "description": "relaxed RPC schema validation check",
                                "type": "boolean",
                                "default": null
                            }
                        },
                        "required": [
                            "cli",
                            "platform",
                            "query",
                            "source_type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetryFetchcmdRequestIdResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "description": "success - device's command shell accepted executing the command; commandShellError - attempt was made to execute the command on device, but the device's command shell returned an error  (eg: syntax error); processingError - error occured while processing the command (eg: command type validation, too many pending requests)",
                    "enum": [
                        "commandShellError",
                        "processingError",
                        "success"
                    ],
                    "type": "string"
                },
                "output": {
                    "type": "string"
                }
            },
            "required": [
                "output",
                "result"
            ]
        },
        "GetApiTelemetryFlowDataCollectorsCollectorIdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Apstra generated ID to track a flow data collector",
                    "type": "string"
                },
                "management_ip": {
                    "description": "IP address or hostname of flow data collector",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                },
                "label": {
                    "description": "Name of the flow data collector",
                    "type": "string"
                },
                "ssh_username": {
                    "description": "Username used to authenticate with flow data collector",
                    "type": "string",
                    "minLength": 1
                },
                "dashboard_url": {
                    "description": "External URL to the flow data collector dashboard",
                    "type": "string"
                }
            },
            "required": [
                "dashboard_url",
                "id",
                "label",
                "management_ip",
                "ssh_username"
            ]
        },
        "GetApiTelemetryFlowDataCollectorsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "Apstra generated ID to track a flow data collector",
                                "type": "string"
                            },
                            "management_ip": {
                                "description": "IP address or hostname of flow data collector",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255,
                                "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                            },
                            "label": {
                                "description": "Name of the flow data collector",
                                "type": "string"
                            },
                            "ssh_username": {
                                "description": "Username used to authenticate with flow data collector",
                                "type": "string",
                                "minLength": 1
                            },
                            "dashboard_url": {
                                "description": "External URL to the flow data collector dashboard",
                                "type": "string"
                            }
                        },
                        "required": [
                            "dashboard_url",
                            "id",
                            "label",
                            "management_ip",
                            "ssh_username"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionCmdRpcMapResponse": {
            "type": "object",
            "properties": {
                "items": {}
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionModuleModuleResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "The name of the module",
                            "type": "string"
                        },
                        "rpcs": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "cmd": {
                                        "description": "The command name",
                                        "type": "string"
                                    },
                                    "arguments": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "nokeyword": {
                                                    "description": "If set to true, implies that the input argument is not a keyword",
                                                    "type": "boolean",
                                                    "default": null
                                                },
                                                "type": {
                                                    "oneOf": [
                                                        {
                                                            "description": "String argument",
                                                            "type": "object",
                                                            "properties": {
                                                                "properties": {
                                                                    "description": "Argument properties",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "posix-pattern": {
                                                                            "description": "Posix regex pattern",
                                                                            "type": "string",
                                                                            "default": null
                                                                        },
                                                                        "pattern-message": {
                                                                            "description": "Description of the pattern acceptable values",
                                                                            "type": "string",
                                                                            "default": null
                                                                        },
                                                                        "pattern": {
                                                                            "description": "String pattern",
                                                                            "type": "string",
                                                                            "default": null
                                                                        },
                                                                        "length": {
                                                                            "description": "Length of the string in format 'min .. max'",
                                                                            "type": "string",
                                                                            "default": null
                                                                        }
                                                                    },
                                                                    "default": null
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "description": "Integer argument",
                                                            "type": "object",
                                                            "properties": {
                                                                "properties": {
                                                                    "description": "Argument properties",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "range": {
                                                                            "description": "Range of the value in format 'min .. max'",
                                                                            "type": "string",
                                                                            "default": null
                                                                        }
                                                                    },
                                                                    "default": null
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "description": "Unsigned integer argument",
                                                            "type": "object",
                                                            "properties": {
                                                                "properties": {
                                                                    "description": "Argument properties",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "range": {
                                                                            "type": "string",
                                                                            "default": null
                                                                        }
                                                                    },
                                                                    "default": null
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "description": "Argument with no value",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "OSPF area ID argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Filename argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Interface argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Interface name argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Interface logical unit argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Interface wildcard argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IP address with optional prefix argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IP address argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IP address with optional prefix argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IP address with optional prefix argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IPv4 address argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IPv4 address with optional prefix argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IPv6 address argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "IPv6 address with optional prefix argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "MAC address argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "MAC unicast address argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Regular expression argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Huge string argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Time argument",
                                                            "type": "object",
                                                            "maxProperties": 0
                                                        },
                                                        {
                                                            "description": "Argument value can be one from a predefined list",
                                                            "type": "object",
                                                            "properties": {
                                                                "values": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "values"
                                                            ]
                                                        },
                                                        {
                                                            "description": "Argument type can be any from a defined set",
                                                            "type": "object",
                                                            "properties": {
                                                                "types": {
                                                                    "type": "object",
                                                                    "additionalProperties": {},
                                                                    "maxProperties": 0
                                                                }
                                                            },
                                                            "required": [
                                                                "types"
                                                            ]
                                                        },
                                                        {
                                                            "description": "Argument can be one from a set of arguments",
                                                            "type": "object",
                                                            "properties": {
                                                                "args": {
                                                                    "type": "object",
                                                                    "additionalProperties": {},
                                                                    "maxProperties": 0
                                                                }
                                                            },
                                                            "required": [
                                                                "args"
                                                            ]
                                                        },
                                                        {
                                                            "description": "Argument can be one or more from a set of sub-arguments",
                                                            "type": "object",
                                                            "properties": {
                                                                "args": {
                                                                    "type": "object",
                                                                    "additionalProperties": {},
                                                                    "maxProperties": 0
                                                                }
                                                            },
                                                            "required": [
                                                                "args"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "description": {
                                                    "description": "Argument description",
                                                    "type": "string",
                                                    "default": null
                                                },
                                                "idx": {
                                                    "description": "Parsing index for the 'nokeyword' arguments",
                                                    "type": "integer",
                                                    "default": null
                                                },
                                                "mandatory": {
                                                    "description": "If true, indicates that argument's presence is mandatory",
                                                    "type": "boolean",
                                                    "default": null
                                                },
                                                "list": {
                                                    "description": "Indicates that argument can be a list of values",
                                                    "type": "boolean",
                                                    "default": null
                                                },
                                                "max-elements": {
                                                    "description": "Maximum number of elemets in a list",
                                                    "type": "integer",
                                                    "default": null
                                                },
                                                "default": {
                                                    "description": "Default value of the argument",
                                                    "type": "string",
                                                    "default": null
                                                },
                                                "status": {
                                                    "description": "Status of the argument, such as 'deprecated'",
                                                    "type": "string",
                                                    "default": null
                                                },
                                                "units": {
                                                    "description": "Unit of measure for the argument, such as: seconds, bytes, packets, etc.",
                                                    "type": "string",
                                                    "default": null
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        },
                                        "default": null
                                    },
                                    "fields": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "description": "Represents the RPC field value types",
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "default": null
                                                }
                                            },
                                            "required": [
                                                "type"
                                            ]
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "cmd",
                                    "fields",
                                    "name"
                                ]
                            }
                        }
                    },
                    "required": [
                        "name",
                        "rpcs"
                    ]
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionModulesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "A list of module names",
                    "type": "array",
                    "items": {
                        "description": "The name of the module",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetrySchemasSourceOsTypeFamilyOsVersionRpcRpcNameResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "cmd": {
                            "description": "The command name",
                            "type": "string"
                        },
                        "arguments": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "nokeyword": {
                                        "description": "If set to true, implies that the input argument is not a keyword",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "type": {
                                        "oneOf": [
                                            {
                                                "description": "String argument",
                                                "type": "object",
                                                "properties": {
                                                    "properties": {
                                                        "description": "Argument properties",
                                                        "type": "object",
                                                        "properties": {
                                                            "posix-pattern": {
                                                                "description": "Posix regex pattern",
                                                                "type": "string",
                                                                "default": null
                                                            },
                                                            "pattern-message": {
                                                                "description": "Description of the pattern acceptable values",
                                                                "type": "string",
                                                                "default": null
                                                            },
                                                            "pattern": {
                                                                "description": "String pattern",
                                                                "type": "string",
                                                                "default": null
                                                            },
                                                            "length": {
                                                                "description": "Length of the string in format 'min .. max'",
                                                                "type": "string",
                                                                "default": null
                                                            }
                                                        },
                                                        "default": null
                                                    }
                                                }
                                            },
                                            {
                                                "description": "Integer argument",
                                                "type": "object",
                                                "properties": {
                                                    "properties": {
                                                        "description": "Argument properties",
                                                        "type": "object",
                                                        "properties": {
                                                            "range": {
                                                                "description": "Range of the value in format 'min .. max'",
                                                                "type": "string",
                                                                "default": null
                                                            }
                                                        },
                                                        "default": null
                                                    }
                                                }
                                            },
                                            {
                                                "description": "Unsigned integer argument",
                                                "type": "object",
                                                "properties": {
                                                    "properties": {
                                                        "description": "Argument properties",
                                                        "type": "object",
                                                        "properties": {
                                                            "range": {
                                                                "type": "string",
                                                                "default": null
                                                            }
                                                        },
                                                        "default": null
                                                    }
                                                }
                                            },
                                            {
                                                "description": "Argument with no value",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "OSPF area ID argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Filename argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Interface argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Interface name argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Interface logical unit argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Interface wildcard argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IP address with optional prefix argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IP address argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IP address with optional prefix argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IP address with optional prefix argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IPv4 address argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IPv4 address with optional prefix argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IPv6 address argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "IPv6 address with optional prefix argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "MAC address argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "MAC unicast address argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Regular expression argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Huge string argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Time argument",
                                                "type": "object",
                                                "maxProperties": 0
                                            },
                                            {
                                                "description": "Argument value can be one from a predefined list",
                                                "type": "object",
                                                "properties": {
                                                    "values": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "values"
                                                ]
                                            },
                                            {
                                                "description": "Argument type can be any from a defined set",
                                                "type": "object",
                                                "properties": {
                                                    "types": {
                                                        "type": "object",
                                                        "additionalProperties": {},
                                                        "maxProperties": 0
                                                    }
                                                },
                                                "required": [
                                                    "types"
                                                ]
                                            },
                                            {
                                                "description": "Argument can be one from a set of arguments",
                                                "type": "object",
                                                "properties": {
                                                    "args": {
                                                        "type": "object",
                                                        "additionalProperties": {},
                                                        "maxProperties": 0
                                                    }
                                                },
                                                "required": [
                                                    "args"
                                                ]
                                            },
                                            {
                                                "description": "Argument can be one or more from a set of sub-arguments",
                                                "type": "object",
                                                "properties": {
                                                    "args": {
                                                        "type": "object",
                                                        "additionalProperties": {},
                                                        "maxProperties": 0
                                                    }
                                                },
                                                "required": [
                                                    "args"
                                                ]
                                            }
                                        ]
                                    },
                                    "description": {
                                        "description": "Argument description",
                                        "type": "string",
                                        "default": null
                                    },
                                    "idx": {
                                        "description": "Parsing index for the 'nokeyword' arguments",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "mandatory": {
                                        "description": "If true, indicates that argument's presence is mandatory",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "list": {
                                        "description": "Indicates that argument can be a list of values",
                                        "type": "boolean",
                                        "default": null
                                    },
                                    "max-elements": {
                                        "description": "Maximum number of elemets in a list",
                                        "type": "integer",
                                        "default": null
                                    },
                                    "default": {
                                        "description": "Default value of the argument",
                                        "type": "string",
                                        "default": null
                                    },
                                    "status": {
                                        "description": "Status of the argument, such as 'deprecated'",
                                        "type": "string",
                                        "default": null
                                    },
                                    "units": {
                                        "description": "Unit of measure for the argument, such as: seconds, bytes, packets, etc.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            },
                            "default": null
                        },
                        "fields": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "description": "Represents the RPC field value types",
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        },
                        "description": {
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "cmd",
                        "fields",
                        "name"
                    ]
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetryServiceRegistryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "service_name": {
                                "description": "Name of the service",
                                "type": "string",
                                "minLength": 1,
                                "pattern": "^[^\\s/+#^\\[\\]{}\"\\\\<>?]+$"
                            },
                            "application_schema": {
                                "description": "Schema for each data unit returned by the collector. Represented using Json Schema draft 4 version",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "storage_schema_path": {
                                "description": "File system path to Python module with storage schemadefinition. Definition is made using lollipop Python Package",
                                "enum": [
                                    "aos.sdk.telemetry.schemas.arp",
                                    "aos.sdk.telemetry.schemas.bgp",
                                    "aos.sdk.telemetry.schemas.cpp_graph",
                                    "aos.sdk.telemetry.schemas.environment",
                                    "aos.sdk.telemetry.schemas.generic",
                                    "aos.sdk.telemetry.schemas.graph",
                                    "aos.sdk.telemetry.schemas.hostname",
                                    "aos.sdk.telemetry.schemas.iba_data",
                                    "aos.sdk.telemetry.schemas.iba_integer_data",
                                    "aos.sdk.telemetry.schemas.iba_string_data",
                                    "aos.sdk.telemetry.schemas.interface",
                                    "aos.sdk.telemetry.schemas.interface_counters",
                                    "aos.sdk.telemetry.schemas.lag",
                                    "aos.sdk.telemetry.schemas.lldp",
                                    "aos.sdk.telemetry.schemas.mac",
                                    "aos.sdk.telemetry.schemas.mlag",
                                    "aos.sdk.telemetry.schemas.nsxt",
                                    "aos.sdk.telemetry.schemas.optical_xcvr",
                                    "aos.sdk.telemetry.schemas.route",
                                    "aos.sdk.telemetry.schemas.route_lookup",
                                    "aos.sdk.telemetry.schemas.xcvr"
                                ],
                                "type": "string"
                            },
                            "builtin": {
                                "description": "Indicates whether the service is built-in or not",
                                "type": "boolean"
                            },
                            "version": {
                                "description": "Represents the application schema version",
                                "type": "string"
                            },
                            "description": {
                                "description": "Service description",
                                "type": "string"
                            }
                        },
                        "required": [
                            "application_schema",
                            "builtin",
                            "description",
                            "service_name",
                            "storage_schema_path",
                            "version"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiTelemetryServiceRegistryServiceNameResponse": {
            "type": "object",
            "properties": {
                "service_name": {
                    "description": "Name of the service",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^[^\\s/+#^\\[\\]{}\"\\\\<>?]+$"
                },
                "application_schema": {
                    "description": "Schema for each data unit returned by the collector. Represented using Json Schema draft 4 version",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "storage_schema_path": {
                    "description": "File system path to Python module with storage schemadefinition. Definition is made using lollipop Python Package",
                    "enum": [
                        "aos.sdk.telemetry.schemas.arp",
                        "aos.sdk.telemetry.schemas.bgp",
                        "aos.sdk.telemetry.schemas.cpp_graph",
                        "aos.sdk.telemetry.schemas.environment",
                        "aos.sdk.telemetry.schemas.generic",
                        "aos.sdk.telemetry.schemas.graph",
                        "aos.sdk.telemetry.schemas.hostname",
                        "aos.sdk.telemetry.schemas.iba_data",
                        "aos.sdk.telemetry.schemas.iba_integer_data",
                        "aos.sdk.telemetry.schemas.iba_string_data",
                        "aos.sdk.telemetry.schemas.interface",
                        "aos.sdk.telemetry.schemas.interface_counters",
                        "aos.sdk.telemetry.schemas.lag",
                        "aos.sdk.telemetry.schemas.lldp",
                        "aos.sdk.telemetry.schemas.mac",
                        "aos.sdk.telemetry.schemas.mlag",
                        "aos.sdk.telemetry.schemas.nsxt",
                        "aos.sdk.telemetry.schemas.optical_xcvr",
                        "aos.sdk.telemetry.schemas.route",
                        "aos.sdk.telemetry.schemas.route_lookup",
                        "aos.sdk.telemetry.schemas.xcvr"
                    ],
                    "type": "string"
                },
                "builtin": {
                    "description": "Indicates whether the service is built-in or not",
                    "type": "boolean"
                },
                "version": {
                    "description": "Represents the application schema version",
                    "type": "string"
                },
                "description": {
                    "description": "Service description",
                    "type": "string"
                }
            },
            "required": [
                "application_schema",
                "builtin",
                "description",
                "service_name",
                "storage_schema_path",
                "version"
            ]
        },
        "GetApiTelemetryServicesResponse": {
            "type": "object",
            "properties": {
                "configured": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeDump61"
                    }
                },
                "enabling_error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeDump61"
                    }
                },
                "last_run_error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeDump61"
                    }
                }
            },
            "required": [
                "configured",
                "enabling_error",
                "last_run_error"
            ]
        },
        "GetApiTelemetryServicesServiceNameResponse": {
            "type": "object",
            "properties": {
                "systems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The name of the telemetry configuration",
                                "type": "string"
                            },
                            "input": {
                                "description": "The input data for the telemetry configuration",
                                "type": "string"
                            },
                            "interval": {
                                "description": "The time interval in seconds at which telemetry data is collected",
                                "type": "number",
                                "minimum": 1
                            },
                            "execution_count": {
                                "description": "The number of times the telemetry collection is executed. A value of -1 indicates unlimited executions",
                                "type": "integer",
                                "minimum": -1
                            },
                            "collection_type": {
                                "description": "The type of telemetry collection, as defined by the available enumeration values",
                                "enum": [
                                    "any",
                                    "gRPCOnChange",
                                    "gRPCPeriodic",
                                    "polling"
                                ],
                                "type": "string"
                            },
                            "collection_filters": {
                                "type": "array",
                                "items": {
                                    "title": "Ingestion filter",
                                    "description": "Defines what metric keys should be reported by a collector",
                                    "type": "object",
                                    "additionalProperties": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "any"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "equals"
                                                    },
                                                    "value": {
                                                        "$ref": "#/definitions/TypeDump59"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "pattern"
                                                    },
                                                    "value": {
                                                        "$ref": "#/definitions/TypeDump59"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "range"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "min": {
                                                                "$ref": "#/definitions/TypeDump60",
                                                                "default": null
                                                            },
                                                            "max": {
                                                                "$ref": "#/definitions/TypeDump60",
                                                                "default": null
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "prefix"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "prefix": {
                                                                "title": "Prefix",
                                                                "description": "IPv4 or IPV6 network address, specified in the form of network/prefixlen.",
                                                                "type": "string"
                                                            },
                                                            "le_mask": {
                                                                "title": "More-specific prefixes mask",
                                                                "description": "Match more-specific prefixes from a parent prefix, up until le_mask prefix len. Range is 0-32 for IPv4, 0-128 for IPv6. If not specified, implies the prefix-list entry should be an exact match. This option can be optionally be used in combination with ge_mask.  le_mask must be longer than the subnetprefix length.  If le_mask and ge_mask are both specified, then le_mask must be greater than ge_mask.",
                                                                "type": "integer",
                                                                "minimum": 0,
                                                                "maximum": 128
                                                            },
                                                            "ge_mask": {
                                                                "title": "Less-specific prefixes mask",
                                                                "description": "Match less-specific prefixes from a parent prefix, up from ge_mask to the prefix length of the route. Range is 0-32 for IPv4, 0-128 for IPv6. If not specified, implies the prefix-list entry should be an exact match. This option can be optionally be used in combination with le_mask. ge_mask must be longer than the subnet prefix length. If le_mask and  ge_mask are both specified, then le_mask must be greater than ge_mask.",
                                                                "type": "integer",
                                                                "minimum": 0,
                                                                "maximum": 128
                                                            }
                                                        },
                                                        "required": [
                                                            "prefix"
                                                        ],
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                },
                                "default": null
                            },
                            "source": {
                                "description": "Source of this configuration ('api/blueprint/default')",
                                "type": "string",
                                "default": null
                            },
                            "status": {
                                "type": "object",
                                "properties": {
                                    "run_count": {
                                        "description": "The number of times the telemetry collection has been run",
                                        "type": "integer"
                                    },
                                    "success_count": {
                                        "description": "The number of successful telemetry collections",
                                        "type": "integer"
                                    },
                                    "failure_count": {
                                        "description": "The number of failed telemetry collections",
                                        "type": "integer"
                                    },
                                    "timeout_count": {
                                        "description": "The number of telemetry collections that timed out",
                                        "type": "integer"
                                    },
                                    "underrun_count": {
                                        "description": "The number of telemetry collections that did not run due to scheduling issues",
                                        "type": "integer"
                                    },
                                    "waiting_time": {
                                        "description": "The total waiting time for telemetry collections to start",
                                        "type": "number"
                                    },
                                    "execution_time": {
                                        "description": "The total execution time of the telemetry collections",
                                        "type": "number"
                                    },
                                    "max_queue_size": {
                                        "description": "The maximum size of the queue for telemetry collection tasks",
                                        "type": "integer"
                                    },
                                    "service_started": {
                                        "description": "Indicates whether the telemetry collection service has started",
                                        "type": "boolean"
                                    },
                                    "error_message": {
                                        "description": "The last error message encountered during telemetry collection",
                                        "type": "string"
                                    },
                                    "grpc_config_change_reset_count": {
                                        "description": "The number of times the gRPC configuration has been reset due to changes",
                                        "type": "integer"
                                    },
                                    "grpc_sequence_number_overrun": {
                                        "description": "The number of times the gRPC sequence number has overrun",
                                        "type": "integer"
                                    },
                                    "grpc_reset_count": {
                                        "description": "The number of gRPC connection resets",
                                        "type": "integer"
                                    },
                                    "grpc_connection_reset_count": {
                                        "description": "The number of gRPC connection resets initiated",
                                        "type": "integer"
                                    },
                                    "grpc_response_processing_failure": {
                                        "description": "The number of failures in processing gRPC responses",
                                        "type": "integer"
                                    },
                                    "grpc_server_reset_count": {
                                        "description": "The number of times the gRPC server has been reset",
                                        "type": "integer"
                                    },
                                    "grpc_message_count": {
                                        "description": "The total number of gRPC messages received",
                                        "type": "integer"
                                    },
                                    "grpc_initiate_count": {
                                        "description": "The number of times gRPC connections have been initiated",
                                        "type": "integer"
                                    },
                                    "grpc_initial_sync_timeout_count": {
                                        "description": "The number of times the initial gRPC sync has timed out",
                                        "type": "integer"
                                    },
                                    "grpc_periodic_response_timeout_count": {
                                        "description": "The number of times periodic gRPC responses have timed out",
                                        "type": "integer"
                                    },
                                    "grpc_total_sync_count": {
                                        "description": "The total number of gRPC syncs performed",
                                        "type": "integer"
                                    },
                                    "grpc_in_progress_count": {
                                        "description": "The number of gRPC syncs currently in progress",
                                        "type": "integer"
                                    },
                                    "grpc_total_count": {
                                        "description": "The total number of gRPC connections",
                                        "type": "integer"
                                    },
                                    "grpc_in_sync_count": {
                                        "description": "The number of gRPC connections currently in sync",
                                        "type": "integer"
                                    },
                                    "grpc_round_count": {
                                        "description": "The number of gRPC rounds completed",
                                        "type": "integer"
                                    },
                                    "grpc_average_initial_sync_time": {
                                        "description": "The average time taken for initial gRPC syncs",
                                        "type": "number"
                                    },
                                    "grpc_average_waiting_time": {
                                        "description": "The average waiting time for gRPC connections",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "error_message",
                                    "execution_time",
                                    "failure_count",
                                    "grpc_average_initial_sync_time",
                                    "grpc_average_waiting_time",
                                    "grpc_config_change_reset_count",
                                    "grpc_connection_reset_count",
                                    "grpc_in_progress_count",
                                    "grpc_in_sync_count",
                                    "grpc_initial_sync_timeout_count",
                                    "grpc_initiate_count",
                                    "grpc_message_count",
                                    "grpc_periodic_response_timeout_count",
                                    "grpc_reset_count",
                                    "grpc_response_processing_failure",
                                    "grpc_round_count",
                                    "grpc_sequence_number_overrun",
                                    "grpc_server_reset_count",
                                    "grpc_total_count",
                                    "grpc_total_sync_count",
                                    "max_queue_size",
                                    "run_count",
                                    "service_started",
                                    "success_count",
                                    "timeout_count",
                                    "underrun_count",
                                    "waiting_time"
                                ],
                                "default": null
                            }
                        },
                        "required": [
                            "collection_type",
                            "execution_count",
                            "input",
                            "interval",
                            "name"
                        ]
                    }
                }
            },
            "required": [
                "systems"
            ]
        },
        "GetApiTenantIndexResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Tenant label",
                                "type": "string"
                            }
                        },
                        "required": [
                            "label"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiVersionResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "The full version number of the AOS API.",
                    "type": "string"
                },
                "major": {
                    "description": "Major version of AOS API",
                    "type": "string"
                },
                "minor": {
                    "description": "Minor version of AOS API",
                    "type": "string"
                },
                "build": {
                    "description": "Maintenance build version of AOS API",
                    "type": "string"
                },
                "hotfix": {
                    "description": "Hotfix version of AOS API",
                    "type": "string"
                }
            },
            "required": [
                "build",
                "hotfix",
                "major",
                "minor",
                "version"
            ]
        },
        "GetApiVersionsBuildResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "title": "The version number of the server software.",
                    "type": "string"
                },
                "build_datetime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "build_datetime",
                "version"
            ]
        },
        "GetApiVersionsControllerIdResponse": {
            "type": "object",
            "properties": {
                "controller_id": {
                    "description": "AOS Controller ID.",
                    "type": "string"
                }
            },
            "required": [
                "controller_id"
            ]
        },
        "GetApiVirtualInfraManagersManagerIdResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "System ID of the virtual infra manager",
                                "type": "string",
                                "default": null
                            },
                            "id": {
                                "description": "Agent ID of the virtual infra manager",
                                "type": "string"
                            },
                            "management_ip": {
                                "description": "IP address or hostname of the virtual infra manager",
                                "type": "string"
                            },
                            "virtual_infra_type": {
                                "enum": [
                                    "nsx",
                                    "vcenter"
                                ],
                                "type": "string"
                            },
                            "service_enabled": {
                                "description": "Notifies if the service is enabled or disabled",
                                "type": "boolean"
                            },
                            "connection_state": {
                                "enum": [
                                    "connected",
                                    "disconnected"
                                ],
                                "type": "string"
                            },
                            "error_message": {
                                "description": "Error message when disconnected",
                                "type": "string"
                            },
                            "vcenter_info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "system_id": {
                                            "description": "System ID of the vcenter",
                                            "type": "string",
                                            "default": null
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "management_ip": {
                                            "description": "IP address or hostname of the vcenter",
                                            "type": "string"
                                        },
                                        "virtual_infra_type": {
                                            "description": "Type of thhe virtual infra instance",
                                            "enum": [
                                                "vcenter"
                                            ],
                                            "type": "string"
                                        },
                                        "service_enabled": {
                                            "description": "Notifies if the service is enabled or disabled",
                                            "type": "boolean"
                                        },
                                        "connection_state": {
                                            "description": "State of system agent connection to the device",
                                            "enum": [
                                                "connected",
                                                "disconnected"
                                            ],
                                            "type": "string"
                                        },
                                        "error_message": {
                                            "description": "error message when disconnected",
                                            "type": "string"
                                        },
                                        "version": {
                                            "description": "Version of the vcenter",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "connection_state",
                                        "error_message",
                                        "id",
                                        "management_ip",
                                        "service_enabled",
                                        "version",
                                        "virtual_infra_type"
                                    ]
                                },
                                "default": null
                            },
                            "version": {
                                "title": "Version of the virtual infra manager",
                                "type": "string"
                            }
                        },
                        "required": [
                            "connection_state",
                            "error_message",
                            "id",
                            "management_ip",
                            "service_enabled",
                            "version",
                            "virtual_infra_type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiVirtualInfraManagersManagerIdVcentersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "System ID of the virtual infra manager",
                                "type": "string",
                                "default": null
                            },
                            "id": {
                                "description": "Agent ID of the virtual infra manager",
                                "type": "string"
                            },
                            "management_ip": {
                                "description": "IP address or hostname of the virtual infra manager",
                                "type": "string"
                            },
                            "virtual_infra_type": {
                                "enum": [
                                    "nsx",
                                    "vcenter"
                                ],
                                "type": "string"
                            },
                            "service_enabled": {
                                "description": "Notifies if the service is enabled or disabled",
                                "type": "boolean"
                            },
                            "connection_state": {
                                "enum": [
                                    "connected",
                                    "disconnected"
                                ],
                                "type": "string"
                            },
                            "error_message": {
                                "description": "Error message when disconnected",
                                "type": "string"
                            },
                            "vcenter_info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "system_id": {
                                            "description": "System ID of the vcenter",
                                            "type": "string",
                                            "default": null
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "management_ip": {
                                            "description": "IP address or hostname of the vcenter",
                                            "type": "string"
                                        },
                                        "virtual_infra_type": {
                                            "description": "Type of thhe virtual infra instance",
                                            "enum": [
                                                "vcenter"
                                            ],
                                            "type": "string"
                                        },
                                        "service_enabled": {
                                            "description": "Notifies if the service is enabled or disabled",
                                            "type": "boolean"
                                        },
                                        "connection_state": {
                                            "description": "State of system agent connection to the device",
                                            "enum": [
                                                "connected",
                                                "disconnected"
                                            ],
                                            "type": "string"
                                        },
                                        "error_message": {
                                            "description": "error message when disconnected",
                                            "type": "string"
                                        },
                                        "version": {
                                            "description": "Version of the vcenter",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "connection_state",
                                        "error_message",
                                        "id",
                                        "management_ip",
                                        "service_enabled",
                                        "version",
                                        "virtual_infra_type"
                                    ]
                                },
                                "default": null
                            },
                            "version": {
                                "title": "Version of the virtual infra manager",
                                "type": "string"
                            }
                        },
                        "required": [
                            "connection_state",
                            "error_message",
                            "id",
                            "management_ip",
                            "service_enabled",
                            "version",
                            "virtual_infra_type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiVirtualInfraManagersManagerIdVcentersVcenterIdResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "System ID of the virtual infra manager",
                                "type": "string",
                                "default": null
                            },
                            "id": {
                                "description": "Agent ID of the virtual infra manager",
                                "type": "string"
                            },
                            "management_ip": {
                                "description": "IP address or hostname of the virtual infra manager",
                                "type": "string"
                            },
                            "virtual_infra_type": {
                                "enum": [
                                    "nsx",
                                    "vcenter"
                                ],
                                "type": "string"
                            },
                            "service_enabled": {
                                "description": "Notifies if the service is enabled or disabled",
                                "type": "boolean"
                            },
                            "connection_state": {
                                "enum": [
                                    "connected",
                                    "disconnected"
                                ],
                                "type": "string"
                            },
                            "error_message": {
                                "description": "Error message when disconnected",
                                "type": "string"
                            },
                            "vcenter_info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "system_id": {
                                            "description": "System ID of the vcenter",
                                            "type": "string",
                                            "default": null
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "management_ip": {
                                            "description": "IP address or hostname of the vcenter",
                                            "type": "string"
                                        },
                                        "virtual_infra_type": {
                                            "description": "Type of thhe virtual infra instance",
                                            "enum": [
                                                "vcenter"
                                            ],
                                            "type": "string"
                                        },
                                        "service_enabled": {
                                            "description": "Notifies if the service is enabled or disabled",
                                            "type": "boolean"
                                        },
                                        "connection_state": {
                                            "description": "State of system agent connection to the device",
                                            "enum": [
                                                "connected",
                                                "disconnected"
                                            ],
                                            "type": "string"
                                        },
                                        "error_message": {
                                            "description": "error message when disconnected",
                                            "type": "string"
                                        },
                                        "version": {
                                            "description": "Version of the vcenter",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "connection_state",
                                        "error_message",
                                        "id",
                                        "management_ip",
                                        "service_enabled",
                                        "version",
                                        "virtual_infra_type"
                                    ]
                                },
                                "default": null
                            },
                            "version": {
                                "title": "Version of the virtual infra manager",
                                "type": "string"
                            }
                        },
                        "required": [
                            "connection_state",
                            "error_message",
                            "id",
                            "management_ip",
                            "service_enabled",
                            "version",
                            "virtual_infra_type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiVirtualInfraManagersResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "System ID of the virtual infra manager",
                                "type": "string",
                                "default": null
                            },
                            "id": {
                                "description": "Agent ID of the virtual infra manager",
                                "type": "string"
                            },
                            "management_ip": {
                                "description": "IP address or hostname of the virtual infra manager",
                                "type": "string"
                            },
                            "virtual_infra_type": {
                                "enum": [
                                    "nsx",
                                    "vcenter"
                                ],
                                "type": "string"
                            },
                            "service_enabled": {
                                "description": "Notifies if the service is enabled or disabled",
                                "type": "boolean"
                            },
                            "connection_state": {
                                "enum": [
                                    "connected",
                                    "disconnected"
                                ],
                                "type": "string"
                            },
                            "error_message": {
                                "description": "Error message when disconnected",
                                "type": "string"
                            },
                            "vcenter_info": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "system_id": {
                                            "description": "System ID of the vcenter",
                                            "type": "string",
                                            "default": null
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "management_ip": {
                                            "description": "IP address or hostname of the vcenter",
                                            "type": "string"
                                        },
                                        "virtual_infra_type": {
                                            "description": "Type of thhe virtual infra instance",
                                            "enum": [
                                                "vcenter"
                                            ],
                                            "type": "string"
                                        },
                                        "service_enabled": {
                                            "description": "Notifies if the service is enabled or disabled",
                                            "type": "boolean"
                                        },
                                        "connection_state": {
                                            "description": "State of system agent connection to the device",
                                            "enum": [
                                                "connected",
                                                "disconnected"
                                            ],
                                            "type": "string"
                                        },
                                        "error_message": {
                                            "description": "error message when disconnected",
                                            "type": "string"
                                        },
                                        "version": {
                                            "description": "Version of the vcenter",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "connection_state",
                                        "error_message",
                                        "id",
                                        "management_ip",
                                        "service_enabled",
                                        "version",
                                        "virtual_infra_type"
                                    ]
                                },
                                "default": null
                            },
                            "version": {
                                "title": "Version of the virtual infra manager",
                                "type": "string"
                            }
                        },
                        "required": [
                            "connection_state",
                            "error_message",
                            "id",
                            "management_ip",
                            "service_enabled",
                            "version",
                            "virtual_infra_type"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiZtpDeviceIpAddressStatusResponse": {
            "type": "object",
            "properties": {
                "ip_addr": {
                    "description": "Leased IP address from the DHCP Server",
                    "type": "string"
                },
                "system_id": {
                    "description": "System ID of the device",
                    "type": "string"
                },
                "task": {
                    "description": "The latest task reported by the device",
                    "type": "string",
                    "default": null
                },
                "status": {
                    "description": "ztp status of the device",
                    "enum": [
                        "completed",
                        "inprogress",
                        "unknown"
                    ],
                    "type": "string",
                    "default": null
                },
                "last_log": {
                    "description": "The last log posted into the ztp log file",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "ip_addr",
                "system_id"
            ]
        },
        "GetApiZtpDeviceResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "ip_addr": {
                                "description": "Leased IP address from the DHCP Server",
                                "type": "string"
                            },
                            "system_id": {
                                "description": "System ID of the device",
                                "type": "string"
                            },
                            "task": {
                                "description": "The latest task reported by the device",
                                "type": "string",
                                "default": null
                            },
                            "status": {
                                "description": "ztp status of the device",
                                "enum": [
                                    "completed",
                                    "inprogress",
                                    "unknown"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "last_log": {
                                "description": "The last log posted into the ztp log file",
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "ip_addr",
                            "system_id"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiZtpServiceResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "service": {
                                "description": "The ZTP service name",
                                "type": "string"
                            },
                            "ip_addr": {
                                "description": "IP Address of the ztp service",
                                "type": "string"
                            },
                            "status": {
                                "description": "ZTP service status",
                                "enum": [
                                    "down",
                                    "up"
                                ],
                                "type": "string",
                                "default": null
                            }
                        },
                        "required": [
                            "ip_addr",
                            "service"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "GetApiZtpServiceServiceNameStatusResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "description": "The ZTP service name",
                    "type": "string"
                },
                "ip_addr": {
                    "description": "IP Address of the ztp service",
                    "type": "string"
                },
                "status": {
                    "description": "ZTP service status",
                    "enum": [
                        "down",
                        "up"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "ip_addr",
                "service"
            ]
        },
        "HostnameOrIpAddressTypeDump": {
            "title": "HostnameOrIpAddressType",
            "description": "hostname or IP address of endpoint",
            "anyOf": [
                {
                    "title": "IPv4 address of endpoint",
                    "type": "string"
                },
                {
                    "title": "Hostname of endpoint",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                }
            ]
        },
        "InterfaceStatusDump": {
            "title": "InterfaceStatus",
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/TypeDump44"
                },
                "system_id": {
                    "$ref": "#/definitions/TypeDump45"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump46"
                },
                "last_fetched_at": {
                    "$ref": "#/definitions/TypeDump47"
                },
                "role": {
                    "$ref": "#/definitions/TypeDump48"
                },
                "identity": {
                    "description": "Unique key for this interface",
                    "type": "object",
                    "properties": {
                        "interface_name": {
                            "description": "name of interface",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": [
                        "interface_name"
                    ]
                },
                "expected": {
                    "description": "Expected status",
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/TypeDump50"
                        }
                    },
                    "required": [
                        "value"
                    ]
                },
                "actual": {
                    "description": "Actual status",
                    "type": "object",
                    "properties": {
                        "value": {
                            "$ref": "#/definitions/TypeDump50"
                        }
                    },
                    "required": [
                        "value"
                    ]
                }
            },
            "required": [
                "actual",
                "expected",
                "identity",
                "last_fetched_at",
                "last_modified_at",
                "role",
                "system_id",
                "type"
            ]
        },
        "LogicalDeviceStatusDump": {
            "title": "LogicalDeviceStatus",
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "display_name": {
                    "$ref": "#/definitions/TypeDump83"
                },
                "panels": {
                    "$ref": "#/definitions/TypeDump84"
                },
                "id": {
                    "$ref": "#/definitions/TypeDump85"
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "panels"
            ]
        },
        "LogicalDeviceStatusLoad": {
            "title": "LogicalDeviceStatus",
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/TypeLoad24"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeLoad25"
                },
                "display_name": {
                    "$ref": "#/definitions/TypeLoad32"
                },
                "panels": {
                    "$ref": "#/definitions/TypeLoad33"
                },
                "id": {
                    "$ref": "#/definitions/TypeLoad34"
                }
            },
            "required": [
                "created_at",
                "display_name",
                "id",
                "last_modified_at",
                "panels"
            ]
        },
        "MlagIntfStatusDump": {
            "title": "MlagIntfStatus",
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/TypeDump44"
                },
                "system_id": {
                    "$ref": "#/definitions/TypeDump45"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump46"
                },
                "last_fetched_at": {
                    "$ref": "#/definitions/TypeDump47"
                },
                "role": {
                    "$ref": "#/definitions/TypeDump48"
                },
                "mlag_id": {
                    "description": "MLAG id",
                    "type": "string"
                },
                "intf_name": {
                    "description": "Name of interface",
                    "type": "string"
                },
                "intf_state": {
                    "description": "MLAG interface state",
                    "enum": [
                        "active_full",
                        "active_partial",
                        "configured",
                        "disabled",
                        "inactive",
                        "missing",
                        "unknown"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "intf_name",
                "intf_state",
                "last_fetched_at",
                "last_modified_at",
                "mlag_id",
                "role",
                "system_id",
                "type"
            ]
        },
        "OptionsApiBlueprintsBlueprintIdTasksResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiClusterLicensesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiShowTechJobsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiSnapshotsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "Snapshot ID",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiStreamingCertificatesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of certificate records' IDs",
                    "type": "array",
                    "items": {
                        "title": "ID",
                        "description": "ID of certificate record",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z0-9_-]+$"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiSystemAgentsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "System agent ID",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiTelemetryFlowDataCollectorsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "description": "Apstra generated ID to track a flow data collector",
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiTelemetrySchemasResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "label": {
                                        "description": "The os family label",
                                        "type": "string"
                                    },
                                    "versions": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "ordinal": {
                                                    "title": "The ordinal number representing the version order of the operating system",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "ordinal"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "label",
                                    "versions"
                                ]
                            }
                        }
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiTelemetryServiceRegistryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "OptionsApiTelemetryServicesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "Names of the services",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "PatchApiAaaRatelimitAllowlistResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Normalized subnet value that can be later used for update or delete operations",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PatchApiAaaRatelimitRequest": {
            "type": "object",
            "properties": {
                "lockout_period": {
                    "description": "The amount of seconds to use for blocking an IP address or IP subnet",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 86400,
                    "default": null
                },
                "observation_window": {
                    "description": "The amount of seconds used to observe invalid password attempts",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 3600,
                    "default": null
                },
                "number_of_observations": {
                    "description": "Amount of allowed invalid password attempts before IP address or IP subnet is locked",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": null
                }
            }
        },
        "PatchApiAaaSamlProvidersProviderIdRequest": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32
                },
                "idp_settings": {
                    "type": "object",
                    "properties": {
                        "metadata_url": {
                            "description": "Metadata will be downloaded and stored using this link.",
                            "type": "string"
                        },
                        "metadata": {
                            "description": "Use metadata field if your Identity Provider provides its settings in XML format.",
                            "type": "string"
                        },
                        "manual": {
                            "type": "object",
                            "properties": {
                                "issuer": {
                                    "description": "Identity Provider Issuer",
                                    "type": "string"
                                },
                                "certificate": {
                                    "description": "X.509 Certificate",
                                    "type": "string"
                                },
                                "sso_url": {
                                    "description": "Identity Provider Single Sign-On URL",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "certificate",
                                "issuer",
                                "sso_url"
                            ]
                        }
                    }
                },
                "base_url": {
                    "description": "The domain name or IP-address of your Apstra server. It is used to form settings needed by Identity Provider.",
                    "type": "string"
                },
                "active": {
                    "description": "Activate this provider. Activating one provider deactivates others.",
                    "type": "boolean"
                }
            }
        },
        "PatchApiAaaSamlProvidersProviderIdResponse": {
            "type": "object",
            "maxProperties": 0
        },
        "PatchApiAaaUsersTargetUserIdFavoritesFavoriteIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "label"
            ]
        },
        "PatchApiAaaUsersTargetUserIdRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 32
                },
                "last_name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 32
                },
                "email": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 64
                },
                "roles": {
                    "description": "A list of role names defining the set of user permissions. The user is allowed to perform an action if at least one role has suitable permission.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    }
                },
                "is_active": {
                    "description": "Activates or deactivates user account. If current deactivate_at is in the past and new deactivate_at is not explicitly provided, setting is_active to true resets deactivate_at to its default value.",
                    "type": "boolean"
                }
            }
        },
        "PatchApiAuditEventsRetentionRequest": {
            "type": "object",
            "properties": {
                "size": {
                    "description": "Retention size of audit events in bytes",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "period": {
                    "description": "Retention period of audit events in seconds",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                }
            }
        },
        "PatchApiBlueprintsBlueprintIdIbaPredefinedDashboardsPredefinedDashboardRequest": {
            "type": "object",
            "properties": {
                "disabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "disabled"
            ]
        },
        "PatchApiBlueprintsBlueprintIdNodesNodeIdRequest": {
            "type": "object",
            "additionalProperties": {},
            "maxProperties": 0
        },
        "PatchApiBlueprintsBlueprintIdNodesRequest": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "additionalProperties": {}
            }
        },
        "PatchApiBlueprintsBlueprintIdNodesResponse": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "type"
                        ]
                    },
                    "default": null
                },
                "task_id": {
                    "type": "string",
                    "default": null
                }
            }
        },
        "PatchApiBlueprintsBlueprintIdProbesProbeIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name provided by a user.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120,
                    "default": null
                },
                "description": {
                    "description": "Description provided by a user.",
                    "type": "string",
                    "default": null
                },
                "stages": {
                    "description": "Set of stages.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string",
                                "default": null
                            },
                            "units": {
                                "description": "Mapping of ValueType.name to units",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "default": null
                            },
                            "tags": {
                                "$ref": "#/definitions/TypeLoad2"
                            },
                            "enable_metric_logging": {
                                "type": "boolean",
                                "default": null
                            },
                            "retention_duration": {
                                "type": "integer",
                                "default": null
                            },
                            "retention_size": {
                                "type": "integer",
                                "default": null
                            },
                            "graph_annotation_properties": {
                                "description": "Set of annotation properties associated with graph nodes which values are stored in probe stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "node_id": {
                                            "description": "Name of a property that contains a graph node ID.",
                                            "type": "string"
                                        },
                                        "column": {
                                            "description": "Name of a value column.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "column",
                                        "node_id"
                                    ]
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "name",
                            "tags"
                        ],
                        "additionalProperties": false
                    },
                    "default": null
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad2"
                },
                "disabled": {
                    "type": "boolean",
                    "default": null
                }
            },
            "required": [
                "tags"
            ]
        },
        "PatchApiBlueprintsBlueprintIdRequest": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {},
                        "maxProperties": 0,
                        "default": null
                    },
                    "default": {}
                },
                "relationships": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {},
                        "maxProperties": 0,
                        "default": null
                    },
                    "default": {}
                }
            }
        },
        "PatchApiBlueprintsBlueprintIdResponse": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": null
                },
                "relationships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": null
                },
                "task_id": {
                    "type": "string",
                    "default": null
                }
            }
        },
        "PatchApiBlueprintsBlueprintIdRevisionsRevisionIdRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 4094
                }
            },
            "required": [
                "description"
            ]
        },
        "PatchApiClusterApplicationWeightRequest": {
            "type": "object",
            "properties": {
                "offbox": {
                    "$ref": "#/definitions/TypeLoad1"
                },
                "iba": {
                    "$ref": "#/definitions/TypeLoad1"
                },
                "apstra_edge": {
                    "$ref": "#/definitions/TypeLoad1"
                }
            }
        },
        "PatchApiClusterNodesNodeIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name of the AOS cluster node",
                    "type": "string",
                    "default": null
                },
                "username": {
                    "description": "Username to access the AOS cluster node",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password to access the AOS cluster node",
                    "type": "string",
                    "default": null
                },
                "tags": {
                    "description": "Tags applicable for the cluster node",
                    "type": "array",
                    "items": {
                        "enum": [
                            "iba",
                            "offbox"
                        ],
                        "type": "string"
                    },
                    "default": null
                }
            }
        },
        "PatchApiDeviceOsImagesImageIdRequest": {
            "type": "object",
            "properties": {
                "platform": {
                    "description": "Device OS platform. Supported platforms are: ['EOS', 'NXOS', 'CUMULUS', 'JUNOS', 'SONIC']",
                    "enum": [
                        "CUMULUS",
                        "EOS",
                        "JUNOS",
                        "NXOS",
                        "SONIC"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Device OS image description",
                    "type": "string",
                    "minLength": 1
                },
                "checksum": {
                    "description": "String representation of the SHA512/SHA256/MD5 checksum. ",
                    "type": "string"
                },
                "checksum_type": {
                    "enum": [
                        "MD5",
                        "SHA256",
                        "SHA512"
                    ],
                    "type": "string"
                }
            }
        },
        "PatchApiPropertySetsPropertySetIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "New label for the property set",
                    "type": "string",
                    "default": null
                },
                "values": {
                    "description": "Partial update to JSON representation of property set values",
                    "type": "object",
                    "additionalProperties": {
                        "default": null
                    },
                    "default": null
                },
                "values_yaml": {
                    "description": "Updated YAML representation of property set values",
                    "type": "string",
                    "default": null
                }
            }
        },
        "PatchApiRciInstancesRciIdRequest": {
            "type": "object",
            "properties": {
                "trigger_period": {
                    "description": "Time between executions of this RCI instance (seconds)",
                    "type": "number",
                    "minimum": 10.0
                },
                "paused": {
                    "description": "Whether RCI instance should be paused",
                    "type": "boolean"
                },
                "stopped": {
                    "description": "Whether RCI instance should be stopped",
                    "type": "boolean"
                },
                "replay": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a replay config is enabled.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "enabled"
                    ],
                    "default": null
                },
                "label": {
                    "description": "Instance label",
                    "type": "string"
                }
            }
        },
        "PatchApiStreamingCertificatesCertIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "User-defined certificate record's label",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120,
                    "default": null
                },
                "description": {
                    "description": "Optional user-defined certificate record's description",
                    "type": "string",
                    "maxLength": 120,
                    "default": null
                }
            },
            "additionalProperties": false
        },
        "PatchApiStreamingConfigIdRequest": {
            "title": "StreamingPatch",
            "description": "Patch configuration for existing streaming endpoint",
            "type": "object",
            "properties": {
                "tls_trusted_certificate_ids": {
                    "description": "List of IDs of trusted certificate records",
                    "type": "array",
                    "items": {
                        "title": "ID",
                        "description": "ID of certificate record",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "tls_trusted_certificate_ids"
            ],
            "additionalProperties": false
        },
        "PatchApiSystemAgentProfilesProfileIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Descriptive name of the system agent profile",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Set of key value pairs that are passed to the device entry point in the package corresponding to platform",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "platform": {
                    "description": "Device platform name. Corresponds to the OS family value in HCL entries",
                    "type": "string"
                },
                "packages": {
                    "description": "List of Python packages needed",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                }
            }
        },
        "PatchApiSystemAgentsAgentIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label for the system agent",
                    "type": "string",
                    "default": null
                },
                "management_ip": {
                    "description": "IP address or hostname of the managed system. This is the address to which the system agent connects to interact with the managed system",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                    "default": null
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system. When configuring a system agent, username must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system. When configuring a system agent, password must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Specific options used by the device driver when it attempts to open a connection to the device. When configuring a system agent, option_options may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages installed in the system agent runtime environment. When configuring a system agent, packages may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                },
                "force_package_install": {
                    "description": "True means always reinstall packages even package is same as before. False is normal pip install behavior, i.e., will not reinstall packages with the same version",
                    "type": "boolean",
                    "default": null
                },
                "operation_mode": {
                    "description": "AOS agent operation mode, including full_control and telemetry_only. Note: telemetry_only mode is deprecated for both onbox and offbox. Any request with telemetry_only mode for onbox will be rejected. Default value is full_control",
                    "enum": [
                        "full_control",
                        "telemetry_only"
                    ],
                    "type": "string",
                    "default": null
                },
                "platform": {
                    "description": "Device platform name corresponding to the OS family in hardware compatibility list entries. When configuring a system agent, platform must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "profile": {
                    "description": "System agent profile ID. The system agent profile provides various operational parameters for the system agent: username, password, platform, open_options, packages. These parameters may be overridden by values specific to the system agent while configuring the agent",
                    "type": "string",
                    "default": null
                },
                "install_requirements": {
                    "description": "Deprecated field. AOS resets the field to False if set",
                    "const": false,
                    "default": null
                },
                "enable_monitor": {
                    "description": "If enabled, a check on device is run regularly (default 3 hours)",
                    "type": "boolean",
                    "default": null
                }
            },
            "additionalProperties": false
        },
        "PatchApiTelemetryFlowDataCollectorsCollectorIdRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "description": "IP address or hostname of flow data collector",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                },
                "label": {
                    "description": "Name of the flow data collector",
                    "type": "string"
                },
                "ssh_username": {
                    "description": "Username used to authenticate with flow data collector",
                    "type": "string",
                    "minLength": 1
                },
                "ssh_password": {
                    "description": "Password used to authenticate with flow data collector",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "PatchApiTelemetryServiceRegistryServiceNameRequest": {
            "type": "object",
            "properties": {
                "application_schema": {
                    "description": "Schema for each data unit returned by the collector. Represented using Json Schema draft 4 version",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "storage_schema_path": {
                    "description": "File system path to Python module with storage schemadefinition. Definition is made using lollipop Python Package",
                    "enum": [
                        "aos.sdk.telemetry.schemas.generic",
                        "aos.sdk.telemetry.schemas.graph",
                        "aos.sdk.telemetry.schemas.iba_data",
                        "aos.sdk.telemetry.schemas.iba_integer_data",
                        "aos.sdk.telemetry.schemas.iba_string_data"
                    ],
                    "type": "string",
                    "default": null
                },
                "version": {
                    "description": "Represents the application schema version",
                    "type": "string",
                    "default": null
                },
                "description": {
                    "description": "Service description",
                    "type": "string",
                    "default": null
                }
            }
        },
        "PatchApiVirtualInfraManagersManagerIdRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10",
                    "default": null
                },
                "username": {
                    "$ref": "#/definitions/TypeLoad11",
                    "default": null
                },
                "password": {
                    "$ref": "#/definitions/TypeLoad12",
                    "default": null
                },
                "vcenter_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "management_ip": {
                                "$ref": "#/definitions/TypeLoad10"
                            },
                            "username": {
                                "$ref": "#/definitions/TypeLoad11",
                                "default": null
                            },
                            "password": {
                                "$ref": "#/definitions/TypeLoad12",
                                "default": null
                            }
                        },
                        "required": [
                            "management_ip"
                        ]
                    },
                    "default": null
                }
            }
        },
        "PatchApiVirtualInfraManagersManagerIdVcentersVcenterIdRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10",
                    "default": null
                },
                "username": {
                    "$ref": "#/definitions/TypeLoad11",
                    "default": null
                },
                "password": {
                    "$ref": "#/definitions/TypeLoad12",
                    "default": null
                }
            }
        },
        "PortSpeedDump": {
            "title": "PortSpeed",
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TypeDump79"
                },
                "unit": {
                    "$ref": "#/definitions/TypeDump80"
                }
            },
            "required": [
                "unit",
                "value"
            ]
        },
        "PortSpeedLoad": {
            "title": "PortSpeed",
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TypeLoad28"
                },
                "unit": {
                    "$ref": "#/definitions/TypeLoad29"
                }
            },
            "required": [
                "unit",
                "value"
            ]
        },
        "PostApiAaaCheckLoginRequest": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "active": {
                    "description": "Activate this provider. Default: False. Only one provider can be active, activating this provider will deactivate others.",
                    "type": "boolean",
                    "default": null
                },
                "hostname_fqdn_ip": {
                    "description": "The fully qualified domain name (FQDN) or IP address of the LDAP server. If the first server cannot be reached, connections to succeeding ones are attempted in order.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "encryption": {
                    "description": "LDAP encryption mode. The permitted values are: None, SSL/TLS, or STARTTLS. Default: None",
                    "enum": [
                        "None",
                        "SSL/TLS",
                        "STARTTLS"
                    ],
                    "type": "string",
                    "default": null
                },
                "port": {
                    "title": "Port",
                    "description": "A single integer port number in range 1-65535",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "groups_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Groups Organizational Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "users_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Users Organization Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "bind_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the active server user that the Apstra server will connect",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "The LDAP server user password for Apstra server to connect ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "shared_key": {
                    "description": "Shared key. RADIUS or TACACS+ Only",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "auth_mode": {
                    "description": "Auth mode. The permitted values are: PAP, CHAP, or ASCII. TACACS+ Only. Default: ASCII",
                    "enum": [
                        "ASCII",
                        "CHAP",
                        "PAP"
                    ],
                    "type": "string",
                    "default": null
                },
                "ca_cert": {
                    "description": "CA cert to use with STARTTLS or SSL/TLS encryption. LDAP only",
                    "type": "string",
                    "pattern": "(-----BEGIN CERTIFICATE-----[a-zA-Z0-9/+\\n\\r#,+\"<>=;]+-----END CERTIFICATE-----)",
                    "default": null
                },
                "is_verify_cert": {
                    "description": "Validate peer cert chain and host name. LDAP Only. Default: False",
                    "type": "boolean",
                    "default": null
                },
                "timeout": {
                    "description": "This will be used for both network timeout and operation timeout. Default: 30 secs",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 120,
                    "default": 30
                },
                "query_scope": {
                    "description": "This will be used to control the scope level of data presented (search only the first level or search an entire sub-tree). LDAP Only. Default: sub_tree",
                    "enum": [
                        "one_level",
                        "sub_tree"
                    ],
                    "type": "string",
                    "default": null
                },
                "user_object_class_attribute_name": {
                    "description": "User Object class. LDAP Only. Default: inetOrgPerson",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_firstname_attribute_name": {
                    "description": "User Firstname. LDAP Only. Default: givenName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_lastname_attribute_name": {
                    "description": "User Lastname. LDAP Only. Default: sn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_email_attribute_name": {
                    "description": "User Email. LDAP Only. Default: mail",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_search_attribute_name": {
                    "description": "User Search Field. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_member_attribute_name": {
                    "description": "User Member Attribute. LDAP Only. Default: memberOf",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "username_attribute_name": {
                    "description": "User Name Attribute. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_object_class_attribute_name": {
                    "description": "Group Object class. LDAP Only. Default: posixGroup",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_name_attribute_name": {
                    "description": "Group Name Field. LDAP and RADIUS Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_search_attribute_name": {
                    "description": "Group Search Field. LDAP Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_attribute_name": {
                    "description": "Group Member User Attribute. LDAP Only. Default: entryDn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_mapping_attribute_name": {
                    "description": "Group Member Mapping Attribute. LDAP Only. Default: memberUid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_dn_attribute_name": {
                    "description": "Group DN Field. LDAP Only. Default: entryDN",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "vendor": {
                    "description": "Vendor type. The permitted values are: LDAP, AD, RADIUS or TACACS+Default: LDAP",
                    "enum": [
                        "AD",
                        "LDAP",
                        "RADIUS",
                        "TACACS+"
                    ],
                    "type": "string",
                    "default": null
                },
                "check_login": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "pattern": "^[a-zA-Z0-9@._-]*$"
                        },
                        "password": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        }
                    },
                    "required": [
                        "password",
                        "username"
                    ]
                }
            },
            "required": [
                "check_login",
                "hostname_fqdn_ip",
                "port"
            ]
        },
        "PostApiAaaCheckQueryResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "description": "A list of groups found on remote server. LDAP only.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "default": null
                }
            }
        },
        "PostApiAaaProvidersRequest": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "active": {
                    "description": "Activate this provider. Default: False. Only one provider can be active, activating this provider will deactivate others.",
                    "type": "boolean",
                    "default": null
                },
                "hostname_fqdn_ip": {
                    "description": "The fully qualified domain name (FQDN) or IP address of the LDAP server. If the first server cannot be reached, connections to succeeding ones are attempted in order.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "encryption": {
                    "description": "LDAP encryption mode. The permitted values are: None, SSL/TLS, or STARTTLS. Default: None",
                    "enum": [
                        "None",
                        "SSL/TLS",
                        "STARTTLS"
                    ],
                    "type": "string",
                    "default": null
                },
                "port": {
                    "title": "Port",
                    "description": "A single integer port number in range 1-65535",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "groups_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Groups Organizational Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "users_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Users Organization Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "bind_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the active server user that the Apstra server will connect",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "The LDAP server user password for Apstra server to connect ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "shared_key": {
                    "description": "Shared key. RADIUS or TACACS+ Only",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "auth_mode": {
                    "description": "Auth mode. The permitted values are: PAP, CHAP, or ASCII. TACACS+ Only. Default: ASCII",
                    "enum": [
                        "ASCII",
                        "CHAP",
                        "PAP"
                    ],
                    "type": "string",
                    "default": null
                },
                "ca_cert": {
                    "description": "CA cert to use with STARTTLS or SSL/TLS encryption. LDAP only",
                    "type": "string",
                    "pattern": "(-----BEGIN CERTIFICATE-----[a-zA-Z0-9/+\\n\\r#,+\"<>=;]+-----END CERTIFICATE-----)",
                    "default": null
                },
                "is_verify_cert": {
                    "description": "Validate peer cert chain and host name. LDAP Only. Default: False",
                    "type": "boolean",
                    "default": null
                },
                "timeout": {
                    "description": "This will be used for both network timeout and operation timeout. Default: 30 secs",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 120,
                    "default": 30
                },
                "query_scope": {
                    "description": "This will be used to control the scope level of data presented (search only the first level or search an entire sub-tree). LDAP Only. Default: sub_tree",
                    "enum": [
                        "one_level",
                        "sub_tree"
                    ],
                    "type": "string",
                    "default": null
                },
                "user_object_class_attribute_name": {
                    "description": "User Object class. LDAP Only. Default: inetOrgPerson",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_firstname_attribute_name": {
                    "description": "User Firstname. LDAP Only. Default: givenName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_lastname_attribute_name": {
                    "description": "User Lastname. LDAP Only. Default: sn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_email_attribute_name": {
                    "description": "User Email. LDAP Only. Default: mail",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_search_attribute_name": {
                    "description": "User Search Field. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_member_attribute_name": {
                    "description": "User Member Attribute. LDAP Only. Default: memberOf",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "username_attribute_name": {
                    "description": "User Name Attribute. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_object_class_attribute_name": {
                    "description": "Group Object class. LDAP Only. Default: posixGroup",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_name_attribute_name": {
                    "description": "Group Name Field. LDAP and RADIUS Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_search_attribute_name": {
                    "description": "Group Search Field. LDAP Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_attribute_name": {
                    "description": "Group Member User Attribute. LDAP Only. Default: entryDn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_mapping_attribute_name": {
                    "description": "Group Member Mapping Attribute. LDAP Only. Default: memberUid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_dn_attribute_name": {
                    "description": "Group DN Field. LDAP Only. Default: entryDN",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "vendor": {
                    "description": "Vendor type. The permitted values are: LDAP, AD, RADIUS or TACACS+Default: LDAP",
                    "enum": [
                        "AD",
                        "LDAP",
                        "RADIUS",
                        "TACACS+"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "hostname_fqdn_ip",
                "port"
            ]
        },
        "PostApiAaaRatelimitAllowlistBatchDeleteRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of subnets to delete",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "items"
            ]
        },
        "PostApiAaaRatelimitAllowlistRequest": {
            "type": "object",
            "properties": {
                "subnet": {
                    "description": "A subnet that should never be rate limited",
                    "type": "string"
                },
                "comment": {
                    "description": "An optional description",
                    "type": "string"
                }
            },
            "required": [
                "comment",
                "subnet"
            ]
        },
        "PostApiAaaRatelimitAllowlistResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Normalized subnet value that can be later used for update or delete operations",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiAaaRatelimitDenylistBatchDeleteRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "A list of subnets to delete",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "items"
            ]
        },
        "PostApiAaaRolesRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Global permissions act all-over AOS and all blueprints.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": null
                },
                "granular_permissions": {
                    "description": "Granular permissions act only inside a blueprint or a set of blueprints.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "description": "Defines for which blueprints and tenants these permissions take effect. Examples are \"blueprint_id in [any]\", \"blueprint_id in ['bp_id'], \"blueprint_id in ['bp_id'] and tenant in ['tenant_label']\"",
                                "type": "string",
                                "minLength": 1
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "permissions",
                            "scope"
                        ]
                    },
                    "default": null
                },
                "label": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "type": {
                    "enum": [
                        "global",
                        "granular"
                    ],
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "label",
                "type"
            ]
        },
        "PostApiAaaRolesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the role",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiAaaSamlProvidersBatchMetadataDownloadRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "A list of SAML providers ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "items"
            ]
        },
        "PostApiAaaSamlProvidersRequest": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32
                },
                "idp_settings": {
                    "type": "object",
                    "properties": {
                        "metadata_url": {
                            "description": "Metadata will be downloaded and stored using this link.",
                            "type": "string"
                        },
                        "metadata": {
                            "description": "Use metadata field if your Identity Provider provides its settings in XML format.",
                            "type": "string"
                        },
                        "manual": {
                            "type": "object",
                            "properties": {
                                "issuer": {
                                    "description": "Identity Provider Issuer",
                                    "type": "string"
                                },
                                "certificate": {
                                    "description": "X.509 Certificate",
                                    "type": "string"
                                },
                                "sso_url": {
                                    "description": "Identity Provider Single Sign-On URL",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "certificate",
                                "issuer",
                                "sso_url"
                            ]
                        }
                    }
                },
                "base_url": {
                    "description": "The domain name or IP-address of your Apstra server. It is used to form settings needed by Identity Provider.",
                    "type": "string"
                },
                "active": {
                    "description": "Activate this provider. Activating one provider deactivates others.",
                    "type": "boolean"
                }
            },
            "required": [
                "active",
                "base_url",
                "idp_settings",
                "provider_name"
            ]
        },
        "PostApiAaaSamlProvidersResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiAaaUsersRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^[a-zA-Z0-9@._-]*$"
                },
                "password": {
                    "description": "User password. Password requirements can be changed by administrator. Call [Password complexity settings](#/aaa/get_api_aaa_password_complexity) to view current password requirements.",
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 32,
                    "default": null
                },
                "last_name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 32,
                    "default": null
                },
                "email": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 64,
                    "default": null
                },
                "roles": {
                    "description": "A list of role names defining the set of user permissions. The user is allowed to perform an action if at least one role has suitable permission.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "default": null
                },
                "is_active": {
                    "description": "Whether the user is currently enabled.",
                    "type": "boolean",
                    "default": true
                }
            },
            "required": [
                "password",
                "username"
            ]
        },
        "PostApiAaaUsersResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the user",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiAaaUsersTargetUserIdFavoritesRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "minLength": 1
                },
                "url": {
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "label",
                "url"
            ]
        },
        "PostApiAaaUsersTargetUserIdPreferencesRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "minLength": 1
                },
                "value": {}
            },
            "required": [
                "key",
                "value"
            ]
        },
        "PostApiAaaUsersTargetUserIdPreferencesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique preference id. Use to delete preference.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiAuditEventsDeviceConfigRequest": {
            "type": "object",
            "properties": {
                "file_name": {
                    "description": "File name for the device config as stored in the corresponding audit event",
                    "type": "string",
                    "minLength": 1
                },
                "device_id": {
                    "description": "ID of the device",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "device_id",
                "file_name"
            ]
        },
        "PostApiAuditEventsDeviceConfigResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Device configuration change",
                    "type": "string"
                }
            },
            "required": [
                "content"
            ]
        },
        "PostApiAuditEventsQueryRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "description": "Filter string to filter query results",
                    "type": "string",
                    "default": ""
                },
                "begin_time": {
                    "$ref": "#/definitions/TypeLoad41"
                },
                "end_time": {
                    "$ref": "#/definitions/TypeLoad41"
                }
            },
            "required": [
                "begin_time",
                "end_time"
            ]
        },
        "PostApiAuditEventsQueryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "$ref": "#/definitions/TypeDump108"
                            }
                        },
                        "required": [
                            "timestamp"
                        ],
                        "additionalProperties": {}
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "result_code": {
                            "enum": [
                                "nil",
                                "success_complete",
                                "success_more"
                            ],
                            "type": "string"
                        },
                        "total_count": {
                            "description": "Total number of results",
                            "type": "integer",
                            "minimum": 0
                        },
                        "is_truncated": {
                            "description": "Whether the result is truncated or not",
                            "type": "boolean"
                        },
                        "begin_time": {
                            "$ref": "#/definitions/TypeDump108"
                        },
                        "end_time": {
                            "$ref": "#/definitions/TypeDump108"
                        }
                    },
                    "required": [
                        "begin_time",
                        "end_time",
                        "is_truncated",
                        "result_code",
                        "total_count"
                    ]
                }
            },
            "required": [
                "items",
                "status"
            ]
        },
        "PostApiBlueprintsBlueprintIdAnomaliesHistoryCountsRequest": {
            "type": "object",
            "properties": {
                "anomaly_types": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "bgp",
                            "cabling",
                            "config",
                            "deployment",
                            "hostname",
                            "interface",
                            "lag",
                            "liveness",
                            "mac",
                            "mlag",
                            "route"
                        ],
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": null
                },
                "filter": {
                    "description": "Filter string to filter query results",
                    "type": "string",
                    "default": ""
                },
                "begin_time": {
                    "$ref": "#/definitions/TypeLoad5",
                    "default": "-0:3600"
                },
                "end_time": {
                    "$ref": "#/definitions/TypeLoad5",
                    "default": null
                }
            }
        },
        "PostApiBlueprintsBlueprintIdAnomaliesHistoryCountsResponse": {
            "type": "object",
            "properties": {
                "counts": {
                    "description": "Sets of samples grouped by type describing how the number of anomalies changed in the requested period of time",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "description": "Count of anomalies observed at specified moment",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "count"
                            ]
                        }
                    }
                },
                "request": {
                    "type": "object",
                    "maxProperties": 0
                }
            },
            "required": [
                "counts",
                "request"
            ]
        },
        "PostApiBlueprintsBlueprintIdAnomaliesHistoryRequest": {
            "type": "object",
            "properties": {
                "anomaly_types": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "bgp",
                            "cabling",
                            "config",
                            "deployment",
                            "hostname",
                            "interface",
                            "lag",
                            "liveness",
                            "mac",
                            "mlag",
                            "route"
                        ],
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": null
                },
                "filter": {
                    "description": "Filter string to filter query results",
                    "type": "string",
                    "default": ""
                }
            }
        },
        "PostApiBlueprintsBlueprintIdAnomaliesHistoryResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "A set of samples describing anomalies observed in the requested time range",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "anomaly_type": {
                                "enum": [
                                    "bgp",
                                    "cabling",
                                    "config",
                                    "deployment",
                                    "hostname",
                                    "interface",
                                    "lag",
                                    "liveness",
                                    "mac",
                                    "mlag",
                                    "route"
                                ],
                                "type": "string"
                            },
                            "identity": {
                                "description": "Set of attributes identifying anomaly instance",
                                "type": "object",
                                "properties": {
                                    "system_id": {
                                        "title": "ID of the system the anomaly is associated with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "system_id"
                                ]
                            },
                            "device_hostname": {
                                "description": "Hostname of the device associated with anomaly.",
                                "type": "string"
                            },
                            "expected": {
                                "description": "Telemetry expectations that were not met",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "actual": {
                                "description": "Actual telemetry that do not meet expectations",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "raised": {
                                "description": "Indicates whether an anomaly was raised or not at the moment of sample publication",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "actual",
                            "anomaly_type",
                            "device_hostname",
                            "expected",
                            "identity",
                            "raised"
                        ],
                        "additionalProperties": false
                    }
                },
                "request": {
                    "type": "object",
                    "maxProperties": 0
                }
            },
            "required": [
                "items",
                "request"
            ]
        },
        "PostApiBlueprintsBlueprintIdAnomaliesHistoryTraceRequest": {
            "type": "object",
            "properties": {
                "anomaly_type": {
                    "enum": [
                        "bgp",
                        "cabling",
                        "config",
                        "deployment",
                        "hostname",
                        "interface",
                        "lag",
                        "liveness",
                        "mac",
                        "mlag",
                        "route"
                    ],
                    "type": "string"
                },
                "identity": {
                    "description": "Set of attributes identifying anomaly instance specific for the given anomaly type",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "begin_time": {
                    "$ref": "#/definitions/TypeLoad5",
                    "default": "-0:3600"
                },
                "end_time": {
                    "$ref": "#/definitions/TypeLoad5",
                    "default": null
                }
            },
            "required": [
                "anomaly_type",
                "identity"
            ]
        },
        "PostApiBlueprintsBlueprintIdAnomaliesHistoryTraceResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "A set of samples describing anomalies observed in the requested time range",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "anomaly_type": {
                                "enum": [
                                    "bgp",
                                    "cabling",
                                    "config",
                                    "deployment",
                                    "hostname",
                                    "interface",
                                    "lag",
                                    "liveness",
                                    "mac",
                                    "mlag",
                                    "route"
                                ],
                                "type": "string"
                            },
                            "identity": {
                                "description": "Set of attributes identifying anomaly instance",
                                "type": "object",
                                "properties": {
                                    "system_id": {
                                        "title": "ID of the system the anomaly is associated with",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "system_id"
                                ]
                            },
                            "device_hostname": {
                                "description": "Hostname of the device associated with anomaly.",
                                "type": "string"
                            },
                            "expected": {
                                "description": "Telemetry expectations that were not met",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "actual": {
                                "description": "Actual telemetry that do not meet expectations",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "raised": {
                                "description": "Indicates whether an anomaly was raised or not at the moment of sample publication",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "actual",
                            "anomaly_type",
                            "device_hostname",
                            "expected",
                            "identity",
                            "raised"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "PostApiBlueprintsBlueprintIdArcaRequest": {
            "type": "object",
            "properties": {
                "model_name": {
                    "description": "Name of the ARCA model (reference design specific)",
                    "type": "string",
                    "minLength": 1
                },
                "trigger_period": {
                    "description": "Time between executions of this ARCA instance (seconds)",
                    "type": "number",
                    "minimum": 10.0
                }
            },
            "required": [
                "model_name",
                "trigger_period"
            ]
        },
        "PostApiBlueprintsBlueprintIdConfigTemplatesConfigTemplateIdPreviewRequest": {
            "type": "object",
            "properties": {
                "system_id": {
                    "description": "System Node ID to render configuration for",
                    "type": "string",
                    "minLength": 1
                },
                "text": {
                    "description": "Jinja2 configuration template",
                    "type": "string"
                },
                "config_apply_mode": {
                    "description": "Defines the type of config preview to return. The 'complete' preview will return the entire device rendered configuration. The 'incremental' preview will return a summarized view of the changes between staging & deployed blueprints.",
                    "enum": [
                        "complete",
                        "incremental"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "config_apply_mode",
                "system_id",
                "text"
            ]
        },
        "PostApiBlueprintsBlueprintIdConfigTemplatesConfigTemplateIdPreviewResponse": {
            "type": "object",
            "properties": {
                "text": {
                    "description": "Configuration result of the given system node, as if the template was replaced in the graph.",
                    "type": "string"
                }
            },
            "required": [
                "text"
            ]
        },
        "PostApiBlueprintsBlueprintIdCypherRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Cypher graph query",
                    "type": "string"
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiBlueprintsBlueprintIdCypherResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "maxProperties": 0
                    }
                },
                "count": {
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "items"
            ]
        },
        "PostApiBlueprintsBlueprintIdIbaDashboardsBatchDeleteRequest": {
            "description": "List of IDs.",
            "type": "array",
            "items": {
                "type": "string",
                "minLength": 1
            },
            "minItems": 1
        },
        "PostApiBlueprintsBlueprintIdIbaDashboardsBatchDeleteResponse": {
            "description": "Mapping of errors: key is ID of dashboard",
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "probes": {
                        "description": "List of deleted probes.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "Probe ID.",
                                    "type": "string"
                                },
                                "label": {
                                    "description": "Probe label.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "label"
                            ]
                        },
                        "default": null
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "default": null
                    }
                }
            }
        },
        "PostApiBlueprintsBlueprintIdIbaDashboardsImportRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Dashboard label.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Dashboard description.",
                    "type": "string",
                    "default": ""
                },
                "grid": {
                    "description": "Widgets grid as a 2D array.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Widget label.",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "description": {
                                            "description": "Widget description.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "type": {
                                            "description": "Widget type.",
                                            "type": "string"
                                        },
                                        "probe_id": {
                                            "description": "Source probe ID.",
                                            "type": "string"
                                        },
                                        "stage_name": {
                                            "description": "Stage name whose data to be displayed.",
                                            "type": "string"
                                        },
                                        "filter": {
                                            "description": "Set of words that should be present in stage item properties.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "visible_columns": {
                                            "description": "Columns in stage output to be displayed.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "orderby": {
                                            "description": "Query as a string \"{field}:{ASC/DESC}\"",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "max_items": {
                                            "description": "The number of items to be displayed",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 100,
                                            "default": 10
                                        },
                                        "anomalous_only": {
                                            "description": "Show only items with anomalies.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "show_context": {
                                            "description": "Show context information combined from multiple stages.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "spotlight_mode": {
                                            "description": "Show an extended view of a single stage item.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "data_source": {
                                            "description": "Indicates what data source should be used for the stage: real time or time-series. The latter one can be used only when metric logging is enabled for the stage.",
                                            "enum": [
                                                "real_time",
                                                "time_series"
                                            ],
                                            "type": "string",
                                            "default": "real_time"
                                        },
                                        "time_series_duration": {
                                            "description": "Show only last samples limited by duration in seconds.",
                                            "type": "integer",
                                            "minimum": 1,
                                            "default": 86400
                                        },
                                        "aggregation_period": {
                                            "description": "Accumulate samples within this period of time and show their average as a single item.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 300
                                        },
                                        "aggregation_type": {
                                            "description": "Aggregation method applied to samples for each period",
                                            "enum": [
                                                "all_of",
                                                "any_of",
                                                "average",
                                                "last",
                                                "max",
                                                "min",
                                                "none",
                                                "unset"
                                            ],
                                            "type": "string",
                                            "default": "unset"
                                        },
                                        "combine_graphs": {
                                            "description": "Mode of displaying multiple graphs",
                                            "enum": [
                                                "linear",
                                                "none",
                                                "stacked"
                                            ],
                                            "type": "string",
                                            "default": "none"
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "probe_id",
                                        "stage_name",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "minItems": 1,
                    "default": []
                },
                "default": {
                    "description": "Should this dashboard be displayed on the main page of the blueprint.",
                    "type": "boolean",
                    "default": false
                },
                "predefined_dashboard": {
                    "description": "Name of the predefined dashboard or an empty string in case of manual modification or a custom dashboard.",
                    "type": "string",
                    "default": null
                },
                "predefined_parameters": {
                    "description": "Set of parameters dependent on the dashboard type",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "probes": {
                    "description": "Probes used by dashboard",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Name provided by a user.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "description": {
                                "description": "Description provided by a user.",
                                "type": "string",
                                "default": ""
                            },
                            "processors": {
                                "description": "A set of processors",
                                "type": "array",
                                "items": {
                                    "description": "Represents a single step of data processing in an analytics graph.",
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "Name of a processor",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "type": {
                                            "description": "Name of a processor type.",
                                            "type": "string",
                                            "minLength": 1
                                        },
                                        "properties": {
                                            "description": "Represents a set of processor specific configuration.",
                                            "type": "object",
                                            "additionalProperties": {},
                                            "maxProperties": 0,
                                            "default": {}
                                        },
                                        "inputs": {
                                            "description": "A dictionary which allows to specify names of other stages as inputs for the given stage by associating input names with the stage names, where keys are names of inputs which are defined for a particular processor type, values are names of input stages and the column names from that stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "stage": {
                                                        "description": "The name of the input stage.",
                                                        "type": "string"
                                                    },
                                                    "column": {
                                                        "description": "The name of the input column.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "stage"
                                                ],
                                                "additionalProperties": false
                                            },
                                            "default": {}
                                        },
                                        "outputs": {
                                            "description": "A dictionary which allows to specify names of other stages as outputs for the given stage by associating output names with the stage names, where keys are names of outputs which are defined for a particular processor type, values are names of output stages.",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            },
                                            "default": {}
                                        },
                                        "stages": {
                                            "description": "Set of stages (DEPRECATED, use the top-level \"stages\" element instead)",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/TypeLoad3"
                                            },
                                            "default": null
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                },
                                "minItems": 1,
                                "default": []
                            },
                            "stages": {
                                "description": "Set of stages",
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TypeLoad3"
                                },
                                "default": null
                            },
                            "predefined_probe": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Predefined probe name",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": true,
                                "default": null
                            }
                        },
                        "required": [
                            "label"
                        ],
                        "additionalProperties": false
                    },
                    "default": {}
                }
            },
            "required": [
                "label"
            ],
            "additionalProperties": false
        },
        "PostApiBlueprintsBlueprintIdIbaDashboardsRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Dashboard label.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Dashboard description.",
                    "type": "string",
                    "default": ""
                },
                "grid": {
                    "description": "Widgets grid as a 2D array.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "label": {
                                            "description": "Widget label.",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 120
                                        },
                                        "description": {
                                            "description": "Widget description.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "type": {
                                            "description": "Widget type.",
                                            "type": "string"
                                        },
                                        "probe_id": {
                                            "description": "Source probe ID.",
                                            "type": "string"
                                        },
                                        "stage_name": {
                                            "description": "Stage name whose data to be displayed.",
                                            "type": "string"
                                        },
                                        "filter": {
                                            "description": "Set of words that should be present in stage item properties.",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "visible_columns": {
                                            "description": "Columns in stage output to be displayed.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "orderby": {
                                            "description": "Query as a string \"{field}:{ASC/DESC}\"",
                                            "type": "string",
                                            "default": ""
                                        },
                                        "max_items": {
                                            "description": "The number of items to be displayed",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 100,
                                            "default": 10
                                        },
                                        "anomalous_only": {
                                            "description": "Show only items with anomalies.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "show_context": {
                                            "description": "Show context information combined from multiple stages.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "spotlight_mode": {
                                            "description": "Show an extended view of a single stage item.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "data_source": {
                                            "description": "Indicates what data source should be used for the stage: real time or time-series. The latter one can be used only when metric logging is enabled for the stage.",
                                            "enum": [
                                                "real_time",
                                                "time_series"
                                            ],
                                            "type": "string",
                                            "default": "real_time"
                                        },
                                        "time_series_duration": {
                                            "description": "Show only last samples limited by duration in seconds.",
                                            "type": "integer",
                                            "minimum": 1,
                                            "default": 86400
                                        },
                                        "aggregation_period": {
                                            "description": "Accumulate samples within this period of time and show their average as a single item.",
                                            "type": "integer",
                                            "minimum": 0,
                                            "default": 300
                                        },
                                        "aggregation_type": {
                                            "description": "Aggregation method applied to samples for each period",
                                            "enum": [
                                                "all_of",
                                                "any_of",
                                                "average",
                                                "last",
                                                "max",
                                                "min",
                                                "none",
                                                "unset"
                                            ],
                                            "type": "string",
                                            "default": "unset"
                                        },
                                        "combine_graphs": {
                                            "description": "Mode of displaying multiple graphs",
                                            "enum": [
                                                "linear",
                                                "none",
                                                "stacked"
                                            ],
                                            "type": "string",
                                            "default": "none"
                                        }
                                    },
                                    "required": [
                                        "label",
                                        "probe_id",
                                        "stage_name",
                                        "type"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "minItems": 1
                },
                "default": {
                    "description": "Should this dashboard be displayed on the main page of the blueprint.",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "grid",
                "label"
            ],
            "additionalProperties": false
        },
        "PostApiBlueprintsBlueprintIdIbaDashboardsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the dashboard",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiBlueprintsBlueprintIdIbaPredefinedDashboardsPredefinedDashboardRequest": {
            "description": "Set of parameters dependent on the dashboard type",
            "type": "object",
            "additionalProperties": {},
            "maxProperties": 0
        },
        "PostApiBlueprintsBlueprintIdIbaPredefinedProbesPredefinedProbeRequest": {
            "description": "A set of parameters dependent on the probe type",
            "type": "object",
            "additionalProperties": {},
            "maxProperties": 0
        },
        "PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalRequest": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Optional context for incremental rendering, overrides the default deployed blueprint device context used during config rendering.",
                    "type": "string",
                    "default": null
                },
                "config_string": {
                    "description": "Optional config_string for configuration to be compared against in generating incremental rendering. Overrides context.",
                    "type": "string",
                    "default": null
                },
                "pristine_config_string": {
                    "description": "Optional pristine_config_string to be compared against in generating incremental pristine config.",
                    "type": "string",
                    "default": null
                }
            }
        },
        "PostApiBlueprintsBlueprintIdNodesNodeIdConfigIncrementalResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Device context for incremental rendering. If present, this will be used to diff between staging and deployed blueprints",
                    "type": "string"
                },
                "config": {
                    "description": "Incremental configuration between staging and deployed blueprints",
                    "type": "string"
                },
                "pristine_config": {
                    "description": "Pristine configuration difference pre/post upgrade",
                    "type": "string",
                    "default": null
                },
                "supports_diff_config": {
                    "description": "True if device supports incremental-based diff configuration",
                    "type": "boolean"
                }
            },
            "required": [
                "config",
                "context",
                "supports_diff_config"
            ]
        },
        "PostApiBlueprintsBlueprintIdNodesRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "additionalProperties": true
        },
        "PostApiBlueprintsBlueprintIdNodesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "default": null
                },
                "type": {
                    "type": "string",
                    "default": null
                },
                "task_id": {
                    "type": "string",
                    "default": null
                }
            }
        },
        "PostApiBlueprintsBlueprintIdPredefinedReportReportNameRequest": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "predefined_probes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "default": null
                    },
                    "default": null
                }
            },
            "required": [
                "parameters"
            ],
            "additionalProperties": false
        },
        "PostApiBlueprintsBlueprintIdPredefinedReportReportNameResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Reference-design-specific report ID, e.g. \"device_health\"",
                    "type": "string"
                },
                "label": {
                    "description": "Report label",
                    "type": "string"
                },
                "description": {
                    "description": "Report description",
                    "type": "string",
                    "default": null
                },
                "report": {
                    "description": "Widget's structure.\n\n    Recursive structure: report[\"items\"] = [<section>, <section>, ...],\n\n    section = {\n        'type': 'section',\n        'title': <title>,\n        'items': [<section_element>, <section_element>, ...],\n    }\n\n    <section_element> is one of\n    1. widget data\n    2. <section> (maximal supported depth is 7)\n    ",
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "description": "It is a constant \"section\"",
                                        "const": "section"
                                    },
                                    "title": {
                                        "description": "Section title",
                                        "type": "string"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/definitions/TypeDump13"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump21"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump22"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump23"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump24"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump25"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump26"
                                                },
                                                {
                                                    "$ref": "#/definitions/TypeDump27"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "description": "It is a constant \"section\"",
                                                            "const": "section"
                                                        },
                                                        "title": {
                                                            "description": "Section title",
                                                            "type": "string"
                                                        },
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "anyOf": [
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump13"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump21"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump22"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump23"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump24"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump25"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump26"
                                                                    },
                                                                    {
                                                                        "$ref": "#/definitions/TypeDump27"
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "description": "It is a constant \"section\"",
                                                                                "const": "section"
                                                                            },
                                                                            "title": {
                                                                                "description": "Section title",
                                                                                "type": "string"
                                                                            },
                                                                            "items": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump13"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump21"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump22"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump23"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump24"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump25"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump26"
                                                                                        },
                                                                                        {
                                                                                            "$ref": "#/definitions/TypeDump27"
                                                                                        },
                                                                                        {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "description": "It is a constant \"section\"",
                                                                                                    "const": "section"
                                                                                                },
                                                                                                "title": {
                                                                                                    "description": "Section title",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "items": {
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "anyOf": [
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump13"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump21"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump22"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump23"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump24"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump25"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump26"
                                                                                                            },
                                                                                                            {
                                                                                                                "$ref": "#/definitions/TypeDump27"
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "description": "It is a constant \"section\"",
                                                                                                                        "const": "section"
                                                                                                                    },
                                                                                                                    "title": {
                                                                                                                        "description": "Section title",
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "items": {
                                                                                                                        "type": "array",
                                                                                                                        "items": {
                                                                                                                            "anyOf": [
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump13"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump21"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump22"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump23"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump24"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump25"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump26"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "$ref": "#/definitions/TypeDump27"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "description": "It is a constant \"section\"",
                                                                                                                                            "const": "section"
                                                                                                                                        },
                                                                                                                                        "title": {
                                                                                                                                            "description": "Section title",
                                                                                                                                            "type": "string"
                                                                                                                                        },
                                                                                                                                        "items": {
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "anyOf": [
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump13"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump21"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump22"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump23"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump24"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump25"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump26"
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "$ref": "#/definitions/TypeDump27"
                                                                                                                                                    }
                                                                                                                                                ]
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "items",
                                                                                                                                        "title",
                                                                                                                                        "type"
                                                                                                                                    ],
                                                                                                                                    "additionalProperties": false
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "items",
                                                                                                                    "title",
                                                                                                                    "type"
                                                                                                                ],
                                                                                                                "additionalProperties": false
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "items",
                                                                                                "title",
                                                                                                "type"
                                                                                            ],
                                                                                            "additionalProperties": false
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "items",
                                                                            "title",
                                                                            "type"
                                                                        ],
                                                                        "additionalProperties": false
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "items",
                                                        "title",
                                                        "type"
                                                    ],
                                                    "additionalProperties": false
                                                }
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "items",
                                    "title",
                                    "type"
                                ],
                                "additionalProperties": false
                            }
                        }
                    },
                    "required": [
                        "items"
                    ]
                }
            },
            "required": [
                "label",
                "name",
                "report"
            ]
        },
        "PostApiBlueprintsBlueprintIdProbesBatchDeleteRequest": {
            "description": "Probe IDs.",
            "type": "array",
            "items": {
                "type": "string",
                "minLength": 1
            },
            "minItems": 1
        },
        "PostApiBlueprintsBlueprintIdProbesBatchDeleteResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "dashboards": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "Dashboard ID.",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "Dashboard label.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "label"
                                    ]
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "message"
                        ]
                    },
                    "default": null
                }
            }
        },
        "PostApiBlueprintsBlueprintIdProbesProbeIdQueryRequest": {
            "type": "object",
            "properties": {
                "stage": {
                    "description": "Name of stage to be queried",
                    "type": "string"
                },
                "filter": {
                    "description": "Filter string to filter query results",
                    "type": "string",
                    "default": ""
                },
                "end_time": {
                    "$ref": "#/definitions/TypeLoad4",
                    "default": "1970-01-01T00:00:00.000000Z"
                },
                "begin_time": {
                    "$ref": "#/definitions/TypeLoad4",
                    "default": "1970-01-01T00:00:00.000000Z"
                },
                "order_by": {
                    "description": "Sort criteria for the stage results",
                    "type": "string",
                    "default": ""
                },
                "anomalous_only": {
                    "description": "Show only items that have associated anomalies",
                    "type": "boolean",
                    "default": null
                },
                "include_stage": {
                    "description": "Include items of specified preceding stage names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "aggregation": {
                    "description": "Mapping from a stage to its aggregation configuration",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "period": {
                                "description": "Aggregation period is seconds",
                                "type": "integer"
                            },
                            "metrics": {
                                "description": "Mapping of metrics to its aggregation type",
                                "type": "object",
                                "additionalProperties": {
                                    "enum": [
                                        "all_of",
                                        "any_of",
                                        "average",
                                        "last",
                                        "max",
                                        "min",
                                        "none"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "metrics",
                            "period"
                        ]
                    },
                    "default": null
                },
                "anomaly_context": {
                    "description": "Show context for anomaly",
                    "type": "boolean",
                    "default": false
                },
                "paging": {
                    "description": "Paging information, see endpoint description",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "page_size": {
                                "description": "Size of a page",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4000000,
                                "default": 180000
                            },
                            "page_number": {
                                "description": "The page number to return, a positive integer.",
                                "type": "integer",
                                "minimum": 1,
                                "default": null
                            },
                            "begin_time": {
                                "$ref": "#/definitions/TypeLoad4",
                                "default": "1970-01-01T00:00:00.000000Z"
                            },
                            "end_time": {
                                "$ref": "#/definitions/TypeLoad4",
                                "default": "1970-01-01T00:00:00.000000Z"
                            }
                        }
                    },
                    "default": null
                },
                "caching": {
                    "type": "object",
                    "properties": {
                        "timeout": {
                            "description": "Timeout in seconds for cache. The cache is invalidated if it is older than timeout.",
                            "type": "integer",
                            "minimum": 10,
                            "default": 60
                        },
                        "clear": {
                            "description": "Indicator to clear cache",
                            "type": "boolean",
                            "default": false
                        },
                        "keep_alive": {
                            "description": "Indicator to nudge timeout",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "default": {
                        "timeout": null,
                        "clear": null,
                        "keep_alive": null
                    }
                }
            },
            "required": [
                "stage"
            ]
        },
        "PostApiBlueprintsBlueprintIdProbesRequest": {
            "description": "Represents an analytics graph which consists of a set of processors which are connected through stages. One processor can consume one or more outputs (stages) of other processor(s). Some processors, called source processors, initiate collection of telemetry data from devices. Other processors (typically perform processing) aggregate and calculation the output of input stages providing other stages.",
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name provided by a user.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Description provided by a user.",
                    "type": "string",
                    "default": ""
                },
                "disabled": {
                    "description": "When disabled, probe does not provide any data, and does not use resources.",
                    "type": "boolean",
                    "default": false
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad2"
                },
                "processors": {
                    "description": "A set of processors",
                    "type": "array",
                    "items": {
                        "description": "Represents a single step of data processing in an analytics graph.",
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of a processor",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "type": {
                                "description": "Name of a processor type.",
                                "type": "string",
                                "minLength": 1
                            },
                            "properties": {
                                "description": "Represents a set of processor specific configuration.",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0,
                                "default": {}
                            },
                            "inputs": {
                                "description": "A dictionary which allows to specify names of other stages as inputs for the given stage by associating input names with the stage names, where keys are names of inputs which are defined for a particular processor type, values are names of input stages and the column names from that stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "stage": {
                                            "description": "The name of the input stage.",
                                            "type": "string"
                                        },
                                        "column": {
                                            "description": "The name of the input column.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stage"
                                    ],
                                    "additionalProperties": false
                                },
                                "default": {}
                            },
                            "outputs": {
                                "description": "A dictionary which allows to specify names of other stages as outputs for the given stage by associating output names with the stage names, where keys are names of outputs which are defined for a particular processor type, values are names of output stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "default": {}
                            },
                            "stages": {
                                "description": "Set of stages (DEPRECATED, use the top-level \"stages\" element instead)",
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TypeLoad3"
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "name",
                            "type"
                        ],
                        "additionalProperties": false
                    },
                    "minItems": 1
                },
                "stages": {
                    "description": "Set of stages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeLoad3"
                    },
                    "default": null
                },
                "id": {
                    "description": "Unique probe identifier.",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9._-]+$"
                }
            },
            "required": [
                "label",
                "processors",
                "tags"
            ],
            "additionalProperties": false
        },
        "PostApiBlueprintsBlueprintIdProbesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiBlueprintsBlueprintIdQeRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Internal DLS graph query",
                    "type": "string"
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiBlueprintsBlueprintIdQeResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "maxProperties": 0
                    }
                },
                "count": {
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "items"
            ]
        },
        "PostApiBlueprintsBlueprintIdQlReadonlyRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiBlueprintsBlueprintIdQlRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiBlueprintsBlueprintIdQueryArpRequest": {
            "title": "ArpQuery",
            "type": "object",
            "properties": {
                "ip_address": {
                    "description": "IP address or network filter",
                    "type": "string"
                },
                "mac_address": {
                    "description": "MAC address filter",
                    "type": "string"
                },
                "system_id": {
                    "description": "Filter by system ID",
                    "type": "string"
                },
                "query_filter": {
                    "description": "Additional query filter",
                    "type": "string"
                }
            }
        },
        "PostApiBlueprintsBlueprintIdQueryArpResponse": {
            "title": "ArpQueryResult",
            "type": "object",
            "properties": {
                "page": {
                    "description": "Current page number",
                    "type": "integer"
                },
                "per_page": {
                    "description": "Number of items per page",
                    "type": "integer"
                },
                "total_count": {
                    "description": "Total number of items",
                    "type": "integer"
                },
                "items": {
                    "description": "List of ARP query results",
                    "type": "array",
                    "items": {
                        "title": "ArpItems",
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "Unique identifier for the system",
                                "type": "string",
                                "minLength": 4
                            },
                            "mac_address": {
                                "description": "MAC address",
                                "type": "string",
                                "minLength": 17
                            },
                            "interface_name": {
                                "description": "Name of the interface",
                                "type": "string",
                                "minLength": 2
                            },
                            "last_modified_at": {
                                "description": "Timestamp of last modification",
                                "type": "string",
                                "minLength": 4
                            },
                            "ip_address": {
                                "description": "IP address",
                                "type": "string",
                                "minLength": 7
                            },
                            "vrf_name": {
                                "description": "Name of the VRF",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "interface_name",
                            "ip_address",
                            "last_modified_at",
                            "mac_address",
                            "system_id",
                            "vrf_name"
                        ]
                    }
                }
            },
            "required": [
                "items",
                "page",
                "per_page",
                "total_count"
            ]
        },
        "PostApiBlueprintsBlueprintIdQueryMacRequest": {
            "title": "MacQuery",
            "type": "object",
            "properties": {
                "mac_address": {
                    "description": "MAC address filter",
                    "type": "string"
                },
                "vlan": {
                    "description": "Comma-separated list of VLAN IDs (0-4095)",
                    "type": "string"
                },
                "vxlan": {
                    "description": "Comma-separated list of VXLAN IDs (4096-15999999)",
                    "type": "string"
                },
                "system_id": {
                    "description": "Filter by system ID",
                    "type": "string"
                },
                "exclude_interface": {
                    "description": "Interface to exclude from results",
                    "type": "string"
                },
                "query_filter": {
                    "description": "Additional query filter",
                    "type": "string"
                }
            }
        },
        "PostApiBlueprintsBlueprintIdQueryMacResponse": {
            "title": "MacQueryResult",
            "type": "object",
            "properties": {
                "page": {
                    "description": "Current page number",
                    "type": "integer"
                },
                "per_page": {
                    "description": "Number of items per page",
                    "type": "integer"
                },
                "total_count": {
                    "description": "Total number of items",
                    "type": "integer"
                },
                "items": {
                    "description": "List of MAC query results",
                    "type": "array",
                    "items": {
                        "title": "MacItems",
                        "type": "object",
                        "properties": {
                            "system_id": {
                                "description": "Unique identifier for the system",
                                "type": "string",
                                "minLength": 4
                            },
                            "mac_address": {
                                "description": "MAC address",
                                "type": "string",
                                "minLength": 17
                            },
                            "interface_name": {
                                "description": "Name of the interface",
                                "type": "string",
                                "minLength": 2
                            },
                            "last_modified_at": {
                                "description": "Timestamp of last modification",
                                "type": "string",
                                "minLength": 4
                            },
                            "type": {
                                "description": "Type of the MAC entry",
                                "type": "string",
                                "minLength": 4
                            },
                            "vlan": {
                                "description": "VLAN ID",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "interface_name",
                            "last_modified_at",
                            "mac_address",
                            "system_id",
                            "type",
                            "vlan"
                        ]
                    }
                }
            },
            "required": [
                "items",
                "page",
                "per_page",
                "total_count"
            ]
        },
        "PostApiBlueprintsBlueprintIdRelationshipsRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "target_id": {
                    "type": "string"
                }
            },
            "required": [
                "source_id",
                "target_id",
                "type"
            ],
            "additionalProperties": true
        },
        "PostApiBlueprintsBlueprintIdRevisionsPreviewDeletedRecentRequest": {
            "type": "object",
            "properties": {
                "new_max_most_recent_revisions": {
                    "description": "A potential new limit to the number of revisions saved automatically as recent revisions, as when using the max-most-recent endpoint.",
                    "type": "integer"
                }
            },
            "required": [
                "new_max_most_recent_revisions"
            ]
        },
        "PostApiBlueprintsBlueprintIdRevisionsRevisionIdKeepRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 4094,
                    "default": null
                }
            }
        },
        "PostApiBlueprintsBlueprintIdRollbackRequest": {
            "type": "object",
            "properties": {
                "revision_id": {
                    "type": "string"
                }
            },
            "required": [
                "revision_id"
            ]
        },
        "PostApiBlueprintsBlueprintIdSearchRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Search query string. Following formats are supported (query is after \">\" mark): \n> svi \n> type:interface \n> \"quoted string\" \n> type:system AND deploy_mode:deploy \n> (type:system AND deploy_mode:deploy) OR interface \n",
                    "type": "string"
                },
                "size": {
                    "description": "Amount of matches to return",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000,
                    "default": null
                },
                "skip": {
                    "description": "Amount of matches to skip when returning results. Allows to implement results paging",
                    "type": "integer",
                    "minimum": 0,
                    "default": null
                },
                "highlight": {
                    "description": "Flag that allows to request/suppress highlights being returned with the matches",
                    "type": "boolean",
                    "default": true
                },
                "type": {
                    "description": "Type of the Blueprint to search in",
                    "enum": [
                        "operation",
                        "staging"
                    ],
                    "type": "string",
                    "default": "staging"
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiBlueprintsBlueprintIdSearchResponse": {
            "type": "object",
            "properties": {
                "total_hits": {
                    "description": "Total amount of matches in the Blueprint",
                    "type": "integer"
                },
                "hits": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "ID of the document that matched",
                                "type": "string"
                            },
                            "type": {
                                "description": "Type of the document that matched",
                                "type": "string"
                            },
                            "score": {
                                "description": "Number that shows how good of the match we find. Results are generally ordered by the decreasing the score.",
                                "type": "number"
                            },
                            "document": {
                                "description": "Full content of matched document",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0
                            },
                            "highlights": {
                                "type": "array",
                                "items": {
                                    "description": "Structure that describes where the match happened inside the document fields",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string"
                                        },
                                        "start_idx": {
                                            "type": "integer"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "element_idx": {
                                            "type": "integer",
                                            "default": null
                                        }
                                    },
                                    "required": [
                                        "field",
                                        "length",
                                        "start_idx"
                                    ]
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "document",
                            "id",
                            "score",
                            "type"
                        ]
                    }
                }
            },
            "required": [
                "hits",
                "total_hits"
            ]
        },
        "PostApiBlueprintsBlueprintIdTraceQueryRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Internal DLS graph query",
                    "type": "string"
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiBlueprintsBlueprintIdTraceQueryResponse": {
            "type": "object",
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "paths": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "node"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "type"
                                                ]
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "const": "relationship"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "type"
                                                ]
                                            }
                                        ],
                                        "default": null
                                    }
                                }
                            }
                        },
                        "required": [
                            "label",
                            "paths"
                        ]
                    }
                }
            },
            "required": [
                "steps"
            ]
        },
        "PostApiBlueprintsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "default": null
                },
                "label": {
                    "type": "string",
                    "default": null
                },
                "design": {
                    "enum": [
                        "freeform",
                        "two_stage_l3clos"
                    ],
                    "type": "string"
                },
                "init_type": {
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "design"
            ]
        },
        "PostApiBlueprintsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "task_id": {
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiChassisProfilesRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Chassis Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the chassis profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "dual_routing_engine": {
                    "$ref": "#/definitions/TypeLoad14"
                },
                "physical_device": {
                    "$ref": "#/definitions/TypeLoad15"
                },
                "selector": {
                    "$ref": "#/definitions/TypeLoad16"
                },
                "hardware_capabilities": {
                    "$ref": "#/definitions/TypeLoad18"
                },
                "software_capabilities": {
                    "$ref": "#/definitions/TypeLoad19"
                },
                "reference_design_capabilities": {
                    "$ref": "#/definitions/TypeLoad17",
                    "default": {
                        "datacenter": "full_support",
                        "freeform": "full_support"
                    }
                },
                "linecard_slot_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "minItems": 1,
                    "uniqueItems": true
                }
            },
            "required": [
                "hardware_capabilities",
                "label",
                "linecard_slot_ids",
                "selector",
                "software_capabilities"
            ]
        },
        "PostApiClusterLicensesRequest": {
            "type": "object",
            "properties": {
                "license_key": {
                    "description": "Juniper Apstra license key",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "license_key"
            ]
        },
        "PostApiClusterMemleakRequest": {
            "type": "object",
            "properties": {
                "node_id": {
                    "description": "ID of the AOS cluster node",
                    "type": "string",
                    "default": null
                },
                "container_name": {
                    "description": "Name of the container",
                    "type": "string",
                    "default": null
                }
            }
        },
        "PostApiClusterMemleakResponse": {
            "type": "object",
            "properties": {
                "memory_leak_agent": {
                    "description": "Memory leaked agents info",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "node_id": {
                                "type": "string"
                            },
                            "container_name": {
                                "type": "string"
                            },
                            "timeline": {
                                "description": "Memory utilization of the agent for a selected period of time with a default aggregation interval of 300 seconds",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        },
                        "required": [
                            "container_name",
                            "name",
                            "node_id",
                            "timeline"
                        ]
                    }
                }
            },
            "required": [
                "memory_leak_agent"
            ]
        },
        "PostApiClusterNodesRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name of the AOS cluster node",
                    "type": "string",
                    "default": null
                },
                "address": {
                    "description": "IP address or FQDN of the cluster node",
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "description": "Username to access the AOS cluster node",
                    "type": "string"
                },
                "password": {
                    "description": "Password to access the AOS cluster node",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags applicable for the cluster node",
                    "type": "array",
                    "items": {
                        "enum": [
                            "iba",
                            "offbox"
                        ],
                        "type": "string"
                    },
                    "default": [
                        "offbox",
                        "iba"
                    ]
                }
            },
            "required": [
                "address",
                "password",
                "username"
            ]
        },
        "PostApiClusterNodesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiConfigSyslogsRequest": {
            "description": "Configuration of the syslog receiver, including its address, port, used protocol, etc",
            "type": "object",
            "properties": {
                "protocol": {
                    "description": "Protocol used for syslog forwarding",
                    "enum": [
                        "tcp",
                        "udp"
                    ],
                    "type": "string"
                },
                "address": {
                    "description": "IP address of the server receiving forwarded syslog messages",
                    "type": "string"
                },
                "port": {
                    "title": "Port",
                    "description": "A single integer port number in range 1-65535",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "timezone": {
                    "enum": [
                        "Africa/Abidjan",
                        "Africa/Accra",
                        "Africa/Addis_Ababa",
                        "Africa/Algiers",
                        "Africa/Asmara",
                        "Africa/Asmera",
                        "Africa/Bamako",
                        "Africa/Bangui",
                        "Africa/Banjul",
                        "Africa/Bissau",
                        "Africa/Blantyre",
                        "Africa/Brazzaville",
                        "Africa/Bujumbura",
                        "Africa/Cairo",
                        "Africa/Casablanca",
                        "Africa/Ceuta",
                        "Africa/Conakry",
                        "Africa/Dakar",
                        "Africa/Dar_es_Salaam",
                        "Africa/Djibouti",
                        "Africa/Douala",
                        "Africa/El_Aaiun",
                        "Africa/Freetown",
                        "Africa/Gaborone",
                        "Africa/Harare",
                        "Africa/Johannesburg",
                        "Africa/Juba",
                        "Africa/Kampala",
                        "Africa/Khartoum",
                        "Africa/Kigali",
                        "Africa/Kinshasa",
                        "Africa/Lagos",
                        "Africa/Libreville",
                        "Africa/Lome",
                        "Africa/Luanda",
                        "Africa/Lubumbashi",
                        "Africa/Lusaka",
                        "Africa/Malabo",
                        "Africa/Maputo",
                        "Africa/Maseru",
                        "Africa/Mbabane",
                        "Africa/Mogadishu",
                        "Africa/Monrovia",
                        "Africa/Nairobi",
                        "Africa/Ndjamena",
                        "Africa/Niamey",
                        "Africa/Nouakchott",
                        "Africa/Ouagadougou",
                        "Africa/Porto-Novo",
                        "Africa/Sao_Tome",
                        "Africa/Timbuktu",
                        "Africa/Tripoli",
                        "Africa/Tunis",
                        "Africa/Windhoek",
                        "America/Adak",
                        "America/Anchorage",
                        "America/Anguilla",
                        "America/Antigua",
                        "America/Araguaina",
                        "America/Argentina/Buenos_Aires",
                        "America/Argentina/Catamarca",
                        "America/Argentina/ComodRivadavia",
                        "America/Argentina/Cordoba",
                        "America/Argentina/Jujuy",
                        "America/Argentina/La_Rioja",
                        "America/Argentina/Mendoza",
                        "America/Argentina/Rio_Gallegos",
                        "America/Argentina/Salta",
                        "America/Argentina/San_Juan",
                        "America/Argentina/San_Luis",
                        "America/Argentina/Tucuman",
                        "America/Argentina/Ushuaia",
                        "America/Aruba",
                        "America/Asuncion",
                        "America/Atikokan",
                        "America/Atka",
                        "America/Bahia",
                        "America/Bahia_Banderas",
                        "America/Barbados",
                        "America/Belem",
                        "America/Belize",
                        "America/Blanc-Sablon",
                        "America/Boa_Vista",
                        "America/Bogota",
                        "America/Boise",
                        "America/Buenos_Aires",
                        "America/Cambridge_Bay",
                        "America/Campo_Grande",
                        "America/Cancun",
                        "America/Caracas",
                        "America/Catamarca",
                        "America/Cayenne",
                        "America/Cayman",
                        "America/Chicago",
                        "America/Chihuahua",
                        "America/Ciudad_Juarez",
                        "America/Coral_Harbour",
                        "America/Cordoba",
                        "America/Costa_Rica",
                        "America/Creston",
                        "America/Cuiaba",
                        "America/Curacao",
                        "America/Danmarkshavn",
                        "America/Dawson",
                        "America/Dawson_Creek",
                        "America/Denver",
                        "America/Detroit",
                        "America/Dominica",
                        "America/Edmonton",
                        "America/Eirunepe",
                        "America/El_Salvador",
                        "America/Ensenada",
                        "America/Fort_Nelson",
                        "America/Fort_Wayne",
                        "America/Fortaleza",
                        "America/Glace_Bay",
                        "America/Godthab",
                        "America/Goose_Bay",
                        "America/Grand_Turk",
                        "America/Grenada",
                        "America/Guadeloupe",
                        "America/Guatemala",
                        "America/Guayaquil",
                        "America/Guyana",
                        "America/Halifax",
                        "America/Havana",
                        "America/Hermosillo",
                        "America/Indiana/Indianapolis",
                        "America/Indiana/Knox",
                        "America/Indiana/Marengo",
                        "America/Indiana/Petersburg",
                        "America/Indiana/Tell_City",
                        "America/Indiana/Vevay",
                        "America/Indiana/Vincennes",
                        "America/Indiana/Winamac",
                        "America/Indianapolis",
                        "America/Inuvik",
                        "America/Iqaluit",
                        "America/Jamaica",
                        "America/Jujuy",
                        "America/Juneau",
                        "America/Kentucky/Louisville",
                        "America/Kentucky/Monticello",
                        "America/Knox_IN",
                        "America/Kralendijk",
                        "America/La_Paz",
                        "America/Lima",
                        "America/Los_Angeles",
                        "America/Louisville",
                        "America/Lower_Princes",
                        "America/Maceio",
                        "America/Managua",
                        "America/Manaus",
                        "America/Marigot",
                        "America/Martinique",
                        "America/Matamoros",
                        "America/Mazatlan",
                        "America/Mendoza",
                        "America/Menominee",
                        "America/Merida",
                        "America/Metlakatla",
                        "America/Mexico_City",
                        "America/Miquelon",
                        "America/Moncton",
                        "America/Monterrey",
                        "America/Montevideo",
                        "America/Montreal",
                        "America/Montserrat",
                        "America/Nassau",
                        "America/New_York",
                        "America/Nipigon",
                        "America/Nome",
                        "America/Noronha",
                        "America/North_Dakota/Beulah",
                        "America/North_Dakota/Center",
                        "America/North_Dakota/New_Salem",
                        "America/Nuuk",
                        "America/Ojinaga",
                        "America/Panama",
                        "America/Pangnirtung",
                        "America/Paramaribo",
                        "America/Phoenix",
                        "America/Port-au-Prince",
                        "America/Port_of_Spain",
                        "America/Porto_Acre",
                        "America/Porto_Velho",
                        "America/Puerto_Rico",
                        "America/Punta_Arenas",
                        "America/Rainy_River",
                        "America/Rankin_Inlet",
                        "America/Recife",
                        "America/Regina",
                        "America/Resolute",
                        "America/Rio_Branco",
                        "America/Rosario",
                        "America/Santa_Isabel",
                        "America/Santarem",
                        "America/Santiago",
                        "America/Santo_Domingo",
                        "America/Sao_Paulo",
                        "America/Scoresbysund",
                        "America/Shiprock",
                        "America/Sitka",
                        "America/St_Barthelemy",
                        "America/St_Johns",
                        "America/St_Kitts",
                        "America/St_Lucia",
                        "America/St_Thomas",
                        "America/St_Vincent",
                        "America/Swift_Current",
                        "America/Tegucigalpa",
                        "America/Thule",
                        "America/Thunder_Bay",
                        "America/Tijuana",
                        "America/Toronto",
                        "America/Tortola",
                        "America/Vancouver",
                        "America/Virgin",
                        "America/Whitehorse",
                        "America/Winnipeg",
                        "America/Yakutat",
                        "America/Yellowknife",
                        "Antarctica/Casey",
                        "Antarctica/Davis",
                        "Antarctica/DumontDUrville",
                        "Antarctica/Macquarie",
                        "Antarctica/Mawson",
                        "Antarctica/McMurdo",
                        "Antarctica/Palmer",
                        "Antarctica/Rothera",
                        "Antarctica/South_Pole",
                        "Antarctica/Syowa",
                        "Antarctica/Troll",
                        "Antarctica/Vostok",
                        "Arctic/Longyearbyen",
                        "Asia/Aden",
                        "Asia/Almaty",
                        "Asia/Amman",
                        "Asia/Anadyr",
                        "Asia/Aqtau",
                        "Asia/Aqtobe",
                        "Asia/Ashgabat",
                        "Asia/Ashkhabad",
                        "Asia/Atyrau",
                        "Asia/Baghdad",
                        "Asia/Bahrain",
                        "Asia/Baku",
                        "Asia/Bangkok",
                        "Asia/Barnaul",
                        "Asia/Beirut",
                        "Asia/Bishkek",
                        "Asia/Brunei",
                        "Asia/Calcutta",
                        "Asia/Chita",
                        "Asia/Choibalsan",
                        "Asia/Chongqing",
                        "Asia/Chungking",
                        "Asia/Colombo",
                        "Asia/Dacca",
                        "Asia/Damascus",
                        "Asia/Dhaka",
                        "Asia/Dili",
                        "Asia/Dubai",
                        "Asia/Dushanbe",
                        "Asia/Famagusta",
                        "Asia/Gaza",
                        "Asia/Harbin",
                        "Asia/Hebron",
                        "Asia/Ho_Chi_Minh",
                        "Asia/Hong_Kong",
                        "Asia/Hovd",
                        "Asia/Irkutsk",
                        "Asia/Istanbul",
                        "Asia/Jakarta",
                        "Asia/Jayapura",
                        "Asia/Jerusalem",
                        "Asia/Kabul",
                        "Asia/Kamchatka",
                        "Asia/Karachi",
                        "Asia/Kashgar",
                        "Asia/Kathmandu",
                        "Asia/Katmandu",
                        "Asia/Khandyga",
                        "Asia/Kolkata",
                        "Asia/Krasnoyarsk",
                        "Asia/Kuala_Lumpur",
                        "Asia/Kuching",
                        "Asia/Kuwait",
                        "Asia/Macao",
                        "Asia/Macau",
                        "Asia/Magadan",
                        "Asia/Makassar",
                        "Asia/Manila",
                        "Asia/Muscat",
                        "Asia/Nicosia",
                        "Asia/Novokuznetsk",
                        "Asia/Novosibirsk",
                        "Asia/Omsk",
                        "Asia/Oral",
                        "Asia/Phnom_Penh",
                        "Asia/Pontianak",
                        "Asia/Pyongyang",
                        "Asia/Qatar",
                        "Asia/Qostanay",
                        "Asia/Qyzylorda",
                        "Asia/Rangoon",
                        "Asia/Riyadh",
                        "Asia/Saigon",
                        "Asia/Sakhalin",
                        "Asia/Samarkand",
                        "Asia/Seoul",
                        "Asia/Shanghai",
                        "Asia/Singapore",
                        "Asia/Srednekolymsk",
                        "Asia/Taipei",
                        "Asia/Tashkent",
                        "Asia/Tbilisi",
                        "Asia/Tehran",
                        "Asia/Tel_Aviv",
                        "Asia/Thimbu",
                        "Asia/Thimphu",
                        "Asia/Tokyo",
                        "Asia/Tomsk",
                        "Asia/Ujung_Pandang",
                        "Asia/Ulaanbaatar",
                        "Asia/Ulan_Bator",
                        "Asia/Urumqi",
                        "Asia/Ust-Nera",
                        "Asia/Vientiane",
                        "Asia/Vladivostok",
                        "Asia/Yakutsk",
                        "Asia/Yangon",
                        "Asia/Yekaterinburg",
                        "Asia/Yerevan",
                        "Atlantic/Azores",
                        "Atlantic/Bermuda",
                        "Atlantic/Canary",
                        "Atlantic/Cape_Verde",
                        "Atlantic/Faeroe",
                        "Atlantic/Faroe",
                        "Atlantic/Jan_Mayen",
                        "Atlantic/Madeira",
                        "Atlantic/Reykjavik",
                        "Atlantic/South_Georgia",
                        "Atlantic/St_Helena",
                        "Atlantic/Stanley",
                        "Australia/ACT",
                        "Australia/Adelaide",
                        "Australia/Brisbane",
                        "Australia/Broken_Hill",
                        "Australia/Canberra",
                        "Australia/Currie",
                        "Australia/Darwin",
                        "Australia/Eucla",
                        "Australia/Hobart",
                        "Australia/LHI",
                        "Australia/Lindeman",
                        "Australia/Lord_Howe",
                        "Australia/Melbourne",
                        "Australia/NSW",
                        "Australia/North",
                        "Australia/Perth",
                        "Australia/Queensland",
                        "Australia/South",
                        "Australia/Sydney",
                        "Australia/Tasmania",
                        "Australia/Victoria",
                        "Australia/West",
                        "Australia/Yancowinna",
                        "Brazil/Acre",
                        "Brazil/DeNoronha",
                        "Brazil/East",
                        "Brazil/West",
                        "CET",
                        "CST6CDT",
                        "Canada/Atlantic",
                        "Canada/Central",
                        "Canada/Eastern",
                        "Canada/Mountain",
                        "Canada/Newfoundland",
                        "Canada/Pacific",
                        "Canada/Saskatchewan",
                        "Canada/Yukon",
                        "Chile/Continental",
                        "Chile/EasterIsland",
                        "Cuba",
                        "EET",
                        "EST",
                        "EST5EDT",
                        "Egypt",
                        "Eire",
                        "Etc/GMT",
                        "Etc/GMT+0",
                        "Etc/GMT+1",
                        "Etc/GMT+10",
                        "Etc/GMT+11",
                        "Etc/GMT+12",
                        "Etc/GMT+2",
                        "Etc/GMT+3",
                        "Etc/GMT+4",
                        "Etc/GMT+5",
                        "Etc/GMT+6",
                        "Etc/GMT+7",
                        "Etc/GMT+8",
                        "Etc/GMT+9",
                        "Etc/GMT-0",
                        "Etc/GMT-1",
                        "Etc/GMT-10",
                        "Etc/GMT-11",
                        "Etc/GMT-12",
                        "Etc/GMT-13",
                        "Etc/GMT-14",
                        "Etc/GMT-2",
                        "Etc/GMT-3",
                        "Etc/GMT-4",
                        "Etc/GMT-5",
                        "Etc/GMT-6",
                        "Etc/GMT-7",
                        "Etc/GMT-8",
                        "Etc/GMT-9",
                        "Etc/GMT0",
                        "Etc/Greenwich",
                        "Etc/UCT",
                        "Etc/UTC",
                        "Etc/Universal",
                        "Etc/Zulu",
                        "Europe/Amsterdam",
                        "Europe/Andorra",
                        "Europe/Astrakhan",
                        "Europe/Athens",
                        "Europe/Belfast",
                        "Europe/Belgrade",
                        "Europe/Berlin",
                        "Europe/Bratislava",
                        "Europe/Brussels",
                        "Europe/Bucharest",
                        "Europe/Budapest",
                        "Europe/Busingen",
                        "Europe/Chisinau",
                        "Europe/Copenhagen",
                        "Europe/Dublin",
                        "Europe/Gibraltar",
                        "Europe/Guernsey",
                        "Europe/Helsinki",
                        "Europe/Isle_of_Man",
                        "Europe/Istanbul",
                        "Europe/Jersey",
                        "Europe/Kaliningrad",
                        "Europe/Kiev",
                        "Europe/Kirov",
                        "Europe/Kyiv",
                        "Europe/Lisbon",
                        "Europe/Ljubljana",
                        "Europe/London",
                        "Europe/Luxembourg",
                        "Europe/Madrid",
                        "Europe/Malta",
                        "Europe/Mariehamn",
                        "Europe/Minsk",
                        "Europe/Monaco",
                        "Europe/Moscow",
                        "Europe/Nicosia",
                        "Europe/Oslo",
                        "Europe/Paris",
                        "Europe/Podgorica",
                        "Europe/Prague",
                        "Europe/Riga",
                        "Europe/Rome",
                        "Europe/Samara",
                        "Europe/San_Marino",
                        "Europe/Sarajevo",
                        "Europe/Saratov",
                        "Europe/Simferopol",
                        "Europe/Skopje",
                        "Europe/Sofia",
                        "Europe/Stockholm",
                        "Europe/Tallinn",
                        "Europe/Tirane",
                        "Europe/Tiraspol",
                        "Europe/Ulyanovsk",
                        "Europe/Uzhgorod",
                        "Europe/Vaduz",
                        "Europe/Vatican",
                        "Europe/Vienna",
                        "Europe/Vilnius",
                        "Europe/Volgograd",
                        "Europe/Warsaw",
                        "Europe/Zagreb",
                        "Europe/Zaporozhye",
                        "Europe/Zurich",
                        "GB",
                        "GB-Eire",
                        "GMT",
                        "GMT+0",
                        "GMT-0",
                        "GMT0",
                        "Greenwich",
                        "HST",
                        "Hongkong",
                        "Iceland",
                        "Indian/Antananarivo",
                        "Indian/Chagos",
                        "Indian/Christmas",
                        "Indian/Cocos",
                        "Indian/Comoro",
                        "Indian/Kerguelen",
                        "Indian/Mahe",
                        "Indian/Maldives",
                        "Indian/Mauritius",
                        "Indian/Mayotte",
                        "Indian/Reunion",
                        "Iran",
                        "Israel",
                        "Jamaica",
                        "Japan",
                        "Kwajalein",
                        "Libya",
                        "MET",
                        "MST",
                        "MST7MDT",
                        "Mexico/BajaNorte",
                        "Mexico/BajaSur",
                        "Mexico/General",
                        "NZ",
                        "NZ-CHAT",
                        "Navajo",
                        "PRC",
                        "PST8PDT",
                        "Pacific/Apia",
                        "Pacific/Auckland",
                        "Pacific/Bougainville",
                        "Pacific/Chatham",
                        "Pacific/Chuuk",
                        "Pacific/Easter",
                        "Pacific/Efate",
                        "Pacific/Enderbury",
                        "Pacific/Fakaofo",
                        "Pacific/Fiji",
                        "Pacific/Funafuti",
                        "Pacific/Galapagos",
                        "Pacific/Gambier",
                        "Pacific/Guadalcanal",
                        "Pacific/Guam",
                        "Pacific/Honolulu",
                        "Pacific/Johnston",
                        "Pacific/Kanton",
                        "Pacific/Kiritimati",
                        "Pacific/Kosrae",
                        "Pacific/Kwajalein",
                        "Pacific/Majuro",
                        "Pacific/Marquesas",
                        "Pacific/Midway",
                        "Pacific/Nauru",
                        "Pacific/Niue",
                        "Pacific/Norfolk",
                        "Pacific/Noumea",
                        "Pacific/Pago_Pago",
                        "Pacific/Palau",
                        "Pacific/Pitcairn",
                        "Pacific/Pohnpei",
                        "Pacific/Ponape",
                        "Pacific/Port_Moresby",
                        "Pacific/Rarotonga",
                        "Pacific/Saipan",
                        "Pacific/Samoa",
                        "Pacific/Tahiti",
                        "Pacific/Tarawa",
                        "Pacific/Tongatapu",
                        "Pacific/Truk",
                        "Pacific/Wake",
                        "Pacific/Wallis",
                        "Pacific/Yap",
                        "Poland",
                        "Portugal",
                        "ROC",
                        "ROK",
                        "Singapore",
                        "Turkey",
                        "UCT",
                        "US/Alaska",
                        "US/Aleutian",
                        "US/Arizona",
                        "US/Central",
                        "US/East-Indiana",
                        "US/Eastern",
                        "US/Hawaii",
                        "US/Indiana-Starke",
                        "US/Michigan",
                        "US/Mountain",
                        "US/Pacific",
                        "US/Samoa",
                        "UTC",
                        "Universal",
                        "W-SU",
                        "WET",
                        "Zulu"
                    ],
                    "type": "string",
                    "default": "UTC"
                },
                "facility": {
                    "description": "Facility (e.g. operating system daemon or process) of the syslog messages",
                    "enum": [
                        "auth",
                        "authpriv",
                        "cron",
                        "daemon",
                        "ftp",
                        "kern",
                        "local0",
                        "local1",
                        "local2",
                        "local3",
                        "local4",
                        "local5",
                        "local6",
                        "local7",
                        "lpr",
                        "mail",
                        "news",
                        "syslog",
                        "user",
                        "uucp"
                    ],
                    "type": "string"
                },
                "anomaly_forwarding": {
                    "description": "Flag showing whether anomaly forwarding is enabled or not",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "address",
                "facility",
                "port",
                "protocol"
            ]
        },
        "PostApiConfigSyslogsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiDesignAiMlTemplateCalculatorCalculateL3ClosRequest": {
            "type": "object",
            "properties": {
                "server_count": {
                    "description": "Total amount of servers to be connected to the fabric",
                    "type": "integer"
                },
                "gpu_per_server_count": {
                    "description": "Amount of GPUs per server. By definition also drives the amount of Rails in the fabric which in turn drives the amount of leafs in each Stripe under the assumption that each leaf terminates a single Rail.",
                    "type": "integer"
                },
                "servers_per_stripe_count": {
                    "description": "Amount of servers in a single Stripe.",
                    "type": "integer"
                },
                "leaf_server_link_speed": {
                    "$ref": "#/definitions/PortSpeedLoad"
                },
                "leaf_spine_link_speed": {
                    "$ref": "#/definitions/PortSpeedLoad"
                },
                "oversubscription_ratio": {
                    "description": "Target oversubscription ratio for the fabric calculated as a ratio of southbound bandwidth to northbound bandwidth measured on the leaf switches layer",
                    "type": "number",
                    "minimum": 1.0,
                    "maximum": 1000.0
                },
                "spine_device_profile_ids": {
                    "description": "List of device profile IDs inside the global catalog allowed to be used as spine devices (when not specified full Global Catalog is used)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "default": null
                },
                "leaf_device_profile_ids": {
                    "description": "List of device profile IDs inside the global catalog allowed to be used as leaf devices (when not specified full Global Catalog is used)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "default": null
                },
                "spine_logical_device_ids": {
                    "description": "List of logical device IDs to be used for spine devices",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "default": null
                },
                "leaf_logical_device_ids": {
                    "description": "List of logical device IDs to be used for leaf devices",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "default": null
                },
                "offset": {
                    "description": "Amount of solutions to skip (for pagination)",
                    "type": "integer",
                    "default": 0
                },
                "limit": {
                    "description": "Amount of solutions to return (for pagination)",
                    "type": "integer",
                    "default": 10
                }
            },
            "required": [
                "gpu_per_server_count",
                "leaf_server_link_speed",
                "leaf_spine_link_speed",
                "oversubscription_ratio",
                "server_count",
                "servers_per_stripe_count"
            ]
        },
        "PostApiDesignAiMlTemplateCalculatorCalculateL3ClosResponse": {
            "type": "object",
            "properties": {
                "solutions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "template": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump71"
                                    },
                                    "display_name": {
                                        "$ref": "#/definitions/TypeDump72"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump73"
                                    },
                                    "capability": {
                                        "$ref": "#/definitions/TypeDump74"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump75"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump76"
                                    },
                                    "rack_type_counts": {
                                        "$ref": "#/definitions/TypeDump77"
                                    },
                                    "rack_types": {
                                        "$ref": "#/definitions/TypeDump78"
                                    },
                                    "dhcp_service_intent": {
                                        "$ref": "#/definitions/DHCPServiceIntentDump"
                                    },
                                    "virtual_network_policy": {
                                        "$ref": "#/definitions/VirtualNetworkPolicyDump",
                                        "default": {
                                            "overlay_control_protocol": null
                                        }
                                    },
                                    "spine": {
                                        "type": "object",
                                        "properties": {
                                            "logical_device": {
                                                "$ref": "#/definitions/LogicalDeviceStatusDump"
                                            },
                                            "tags": {
                                                "$ref": "#/definitions/TypeDump87"
                                            },
                                            "count": {
                                                "description": "Number of spines per rack",
                                                "type": "integer",
                                                "minimum": 1
                                            },
                                            "link_per_superspine_count": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "default": 0
                                            },
                                            "link_per_superspine_speed": {
                                                "$ref": "#/definitions/PortSpeedDump",
                                                "default": null
                                            }
                                        },
                                        "required": [
                                            "count",
                                            "logical_device"
                                        ]
                                    },
                                    "asn_allocation_policy": {
                                        "title": "AsnAllocationPolicy",
                                        "type": "object",
                                        "properties": {
                                            "spine_asn_scheme": {
                                                "description": "Use same ASN number or distinct ones on spines in a pod",
                                                "enum": [
                                                    "distinct",
                                                    "single"
                                                ],
                                                "type": "string",
                                                "default": "distinct"
                                            }
                                        },
                                        "default": {
                                            "spine_asn_scheme": null
                                        }
                                    }
                                },
                                "required": [
                                    "created_at",
                                    "dhcp_service_intent",
                                    "display_name",
                                    "last_modified_at",
                                    "rack_type_counts",
                                    "rack_types",
                                    "spine"
                                ]
                            },
                            "spine_logical_device_id": {
                                "type": "string"
                            },
                            "leaf_logical_device_id": {
                                "type": "string"
                            },
                            "server_logical_device_id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "leaf_logical_device_id",
                            "server_logical_device_id",
                            "spine_logical_device_id",
                            "template"
                        ]
                    }
                },
                "possible_spine_logical_device_ids": {
                    "description": "Potentially usable spine logical device IDs given the input parameters after minimal validation (it is not guaranteed that all of them actually have any solutions)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "possible_leaf_logical_device_ids": {
                    "description": "Potentially usable leaf logical device IDs given the input parameters after minimal validation (it is not guaranteed that all of them actually have any solutions)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "possible_leaf_logical_device_ids",
                "possible_spine_logical_device_ids",
                "solutions"
            ]
        },
        "PostApiDesignAiMlTemplateCalculatorCalculateRailCollapsedRequest": {
            "type": "object",
            "properties": {
                "server_count": {
                    "description": "Total amount of servers to be connected to the fabric",
                    "type": "integer"
                },
                "gpu_per_server_count": {
                    "description": "Amount of GPUs per server. By definition also drives the amount of Rails in the fabric which in turn drives the amount of leafs in each Stripe under the assumption that each leaf terminates a single Rail.",
                    "type": "integer"
                },
                "leaf_server_link_speed": {
                    "$ref": "#/definitions/PortSpeedLoad"
                },
                "leaf_device_profile_ids": {
                    "description": "List of device profile IDs inside the global catalog allowed to be used as leaf devices (when not specified full Global Catalog is used)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "default": null
                },
                "leaf_logical_device_ids": {
                    "description": "List of logical device IDs to be used for leaf devices",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "default": null
                },
                "offset": {
                    "description": "Amount of solutions to skip (for pagination)",
                    "type": "integer",
                    "default": 0
                },
                "limit": {
                    "description": "Amount of solutions to return (for pagination)",
                    "type": "integer",
                    "default": 10
                }
            },
            "required": [
                "gpu_per_server_count",
                "leaf_server_link_speed",
                "server_count"
            ]
        },
        "PostApiDesignAiMlTemplateCalculatorCalculateRailCollapsedResponse": {
            "type": "object",
            "properties": {
                "solutions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "template": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeDump71"
                                    },
                                    "display_name": {
                                        "$ref": "#/definitions/TypeDump72"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeDump73"
                                    },
                                    "capability": {
                                        "$ref": "#/definitions/TypeDump74"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeDump75"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeDump76"
                                    },
                                    "rack_type_counts": {
                                        "$ref": "#/definitions/TypeDump77"
                                    },
                                    "rack_types": {
                                        "$ref": "#/definitions/TypeDump78"
                                    },
                                    "dhcp_service_intent": {
                                        "$ref": "#/definitions/DHCPServiceIntentDump"
                                    },
                                    "virtual_network_policy": {
                                        "$ref": "#/definitions/VirtualNetworkPolicyDump",
                                        "default": {
                                            "overlay_control_protocol": null
                                        }
                                    }
                                },
                                "required": [
                                    "created_at",
                                    "dhcp_service_intent",
                                    "display_name",
                                    "last_modified_at",
                                    "rack_type_counts",
                                    "rack_types"
                                ]
                            },
                            "leaf_logical_device_id": {
                                "type": "string"
                            },
                            "server_logical_device_id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "leaf_logical_device_id",
                            "server_logical_device_id",
                            "template"
                        ]
                    }
                },
                "possible_leaf_logical_device_ids": {
                    "description": "Potentially usable leaf logical device IDs given the input parameters after minimal validation (it is not guaranteed that all of them actually have any solutions)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "possible_leaf_logical_device_ids",
                "solutions"
            ]
        },
        "PostApiDesignConfigTemplatesRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "The name of the template. This name will be included in template loaderso user can refer to it with \"include\" stanzas. This name mustcontain only ASCII characters (+ underscore and dash) and be max 64 character long. Also, it has to have a file extension of .jinja",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "text": {
                    "description": "Configuration Jinja2 template",
                    "type": "string"
                },
                "id": {
                    "description": "ID of configuration template",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "label",
                "text"
            ]
        },
        "PostApiDesignConfigletsRequest": {
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "This value is a configlet display name",
                    "type": "string",
                    "minLength": 1
                },
                "generators": {
                    "description": "List of configlet descriptions, one per style",
                    "type": "array",
                    "items": {
                        "title": "Configlet Generator",
                        "type": "object",
                        "properties": {
                            "config_style": {
                                "description": "OS Style that this configlet renders for",
                                "enum": [
                                    "cumulus",
                                    "eos",
                                    "junos",
                                    "nxos",
                                    "sonic"
                                ],
                                "type": "string"
                            },
                            "template_text": {
                                "description": "Template text",
                                "type": "string",
                                "minLength": 1
                            },
                            "negation_template_text": {
                                "description": "Negation template text",
                                "type": "string",
                                "default": ""
                            },
                            "filename": {
                                "description": "Filename for linux-based configlets",
                                "type": "string",
                                "default": ""
                            },
                            "section": {
                                "description": "Section for which the configlet may be applied",
                                "enum": [
                                    "delete_based_interface",
                                    "file",
                                    "frr",
                                    "interface",
                                    "ospf",
                                    "set_based_interface",
                                    "set_based_system",
                                    "system",
                                    "system_top"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "config_style",
                            "section",
                            "template_text"
                        ]
                    },
                    "minItems": 1
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "ref_archs": {
                    "description": "Reference architectures applicable to the configlet",
                    "type": "array",
                    "items": {
                        "enum": [
                            "two_stage_l3clos"
                        ],
                        "type": "string"
                    },
                    "minItems": 1
                }
            },
            "required": [
                "display_name",
                "generators",
                "ref_archs"
            ]
        },
        "PostApiDesignGraphQueriesRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of graph query",
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Label of the query",
                    "type": "string"
                },
                "query": {
                    "description": "QE-syntax expression",
                    "type": "string"
                }
            },
            "required": [
                "label",
                "query"
            ]
        },
        "PostApiDesignInterfaceMapsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "device_profile_id": {
                    "description": "The ID of the Device Profile which this interface map is built from",
                    "type": "string",
                    "minLength": 1
                },
                "logical_device_id": {
                    "description": "The ID of the logical device this interface map is built from",
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Interface Map as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "interfaces": {
                    "description": "List of interfaces available as part of this interface map",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Interface name",
                                "type": "string",
                                "minLength": 1
                            },
                            "roles": {
                                "description": "Roles the interface can participate in",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "position": {
                                "description": "1-based index that corresponds to an absolute position of a logical port irrespective of a panel it belongs to",
                                "type": "integer"
                            },
                            "state": {
                                "description": "Is the interface active or inactive",
                                "enum": [
                                    "active",
                                    "inactive"
                                ],
                                "type": "string"
                            },
                            "speed": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "description": "scalar multiplier for the speed of the interface",
                                        "type": "integer"
                                    },
                                    "unit": {
                                        "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                        "enum": [
                                            "",
                                            "G",
                                            "M"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "unit",
                                    "value"
                                ],
                                "default": null
                            },
                            "setting": {
                                "type": "object",
                                "properties": {
                                    "param": {
                                        "description": "Indicates interface interface setting parameters",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "param"
                                ]
                            },
                            "mapping": {
                                "description": "This list of 5 integers represent which (port ID, transformation ID and interface ID) in the device profile and which (panel ID, port ID) in the logical device is this interface coming from",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "default": null
                                },
                                "minItems": 5,
                                "maxItems": 5
                            }
                        },
                        "required": [
                            "mapping",
                            "name",
                            "position",
                            "roles",
                            "setting",
                            "state"
                        ]
                    },
                    "minItems": 1
                }
            },
            "required": [
                "device_profile_id",
                "interfaces",
                "label",
                "logical_device_id"
            ]
        },
        "PostApiDesignLogicalDevicesRequest": {
            "title": "LogicalDeviceConfig",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "panels": {
                    "description": "Panels of this logical device",
                    "type": "array",
                    "items": {
                        "title": "LogicalPanel",
                        "type": "object",
                        "properties": {
                            "port_groups": {
                                "description": "Port groups in this panel",
                                "type": "array",
                                "items": {
                                    "title": "PortGroup",
                                    "type": "object",
                                    "properties": {
                                        "roles": {
                                            "description": "Possible roles for ports in this group",
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "access",
                                                    "generic",
                                                    "leaf",
                                                    "peer",
                                                    "spine",
                                                    "superspine",
                                                    "unused"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "count": {
                                            "description": "Number of ports in this group",
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "speed": {
                                            "description": "Speed of the ports in this group",
                                            "type": "object",
                                            "properties": {
                                                "value": {
                                                    "description": "Scalar multiplier for the speed of the port",
                                                    "enum": [
                                                        0,
                                                        1,
                                                        2,
                                                        5,
                                                        10,
                                                        25,
                                                        40,
                                                        50,
                                                        100,
                                                        150,
                                                        200,
                                                        400,
                                                        800
                                                    ],
                                                    "type": "integer"
                                                },
                                                "unit": {
                                                    "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                    "enum": [
                                                        "",
                                                        "G",
                                                        "M"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "unit",
                                                "value"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "count",
                                        "roles",
                                        "speed"
                                    ]
                                }
                            },
                            "port_indexing": {
                                "description": "Indexing schema for port groups in this panel",
                                "type": "object",
                                "properties": {
                                    "schema": {
                                        "description": "Must always be 'absolute'",
                                        "enum": [
                                            "absolute"
                                        ],
                                        "type": "string"
                                    },
                                    "order": {
                                        "description": "Indicates how incrementing a port index changes port position across columns first or rows first",
                                        "enum": [
                                            "L-R, T-B",
                                            "T-B, L-R"
                                        ],
                                        "type": "string"
                                    },
                                    "start_index": {
                                        "description": "Starting index of this panel",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "order",
                                    "schema",
                                    "start_index"
                                ]
                            },
                            "panel_layout": {
                                "description": "Layout of this panel",
                                "type": "object",
                                "properties": {
                                    "row_count": {
                                        "description": "Number of rows in this panel",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "column_count": {
                                        "description": "Number of columns in this panel",
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                },
                                "required": [
                                    "column_count",
                                    "row_count"
                                ]
                            }
                        },
                        "required": [
                            "panel_layout",
                            "port_groups",
                            "port_indexing"
                        ]
                    }
                },
                "id": {
                    "description": "Unique id of this logical device",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "display_name",
                "panels"
            ]
        },
        "PostApiDesignRackTypesRequest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/TypeLoad24"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeLoad25"
                },
                "id": {
                    "description": "ID of the rack type",
                    "type": "string",
                    "default": null
                },
                "display_name": {
                    "description": "Rack type name",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 17
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "fabric_connectivity_design": {
                    "description": "Fabric connectivity design. Rack does not have spines in case of \"l3collapsed\" and \"rail_collapsed\" designs",
                    "enum": [
                        "l3clos",
                        "l3collapsed",
                        "rail_collapsed"
                    ],
                    "type": "string",
                    "default": "l3clos"
                },
                "status": {
                    "description": "As a result of flexible fabric expansion, a rack type of a blueprint rack may become inconsistent. Such rack type will be marked with inconsistent status in the blueprint. This field is accepted for global rack type as a guardrail against UI exporting inconsistent rack type from blueprint to the global catalog. The field itself will not be stored in the rack type, as it is assumed that every rack type in global catalog is consistent",
                    "enum": [
                        "inconsistent",
                        "ok"
                    ],
                    "type": "string",
                    "default": null
                },
                "leafs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Leaf type label",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "logical_device": {
                                "description": "ID of logical device",
                                "type": "string",
                                "minLength": 1
                            },
                            "leaf_leaf_link_count": {
                                "type": "integer",
                                "minimum": 0,
                                "default": 0
                            },
                            "leaf_leaf_link_speed": {
                                "$ref": "#/definitions/PortSpeedLoad",
                                "default": null
                            },
                            "leaf_leaf_l3_link_count": {
                                "type": "integer",
                                "minimum": 0,
                                "default": 0
                            },
                            "leaf_leaf_l3_link_speed": {
                                "$ref": "#/definitions/PortSpeedLoad",
                                "default": null
                            },
                            "link_per_spine_count": {
                                "type": "integer",
                                "minimum": 0,
                                "default": 0
                            },
                            "link_per_spine_speed": {
                                "$ref": "#/definitions/PortSpeedLoad",
                                "default": null
                            },
                            "redundancy_protocol": {
                                "enum": [
                                    "esi",
                                    "mlag"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "leaf_leaf_link_port_channel_id": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4096,
                                "default": 0
                            },
                            "leaf_leaf_l3_link_port_channel_id": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4096,
                                "default": 0
                            },
                            "mlag_vlan_id": {
                                "description": "MLAG VLAN ID",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4094,
                                "default": 0
                            },
                            "tags": {
                                "$ref": "#/definitions/TypeLoad30",
                                "default": []
                            }
                        },
                        "required": [
                            "label",
                            "logical_device"
                        ]
                    },
                    "minItems": 1
                },
                "access_switches": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Access switch label, which also needs to be unique among leaf labels.",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "logical_device": {
                                "description": "ID of logical device",
                                "type": "string",
                                "minLength": 1
                            },
                            "instance_count": {
                                "type": "integer",
                                "minimum": 1,
                                "default": 1
                            },
                            "links": {
                                "description": "L2 links from access switches to TOR leafs",
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TypeLoad31"
                                },
                                "minItems": 1
                            },
                            "access_access_link_count": {
                                "type": "integer",
                                "minimum": 0,
                                "default": 0
                            },
                            "access_access_link_speed": {
                                "$ref": "#/definitions/PortSpeedLoad",
                                "default": null
                            },
                            "redundancy_protocol": {
                                "enum": [
                                    "esi"
                                ],
                                "type": "string",
                                "default": null
                            },
                            "access_access_link_port_channel_id_min": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4096,
                                "default": 0
                            },
                            "access_access_link_port_channel_id_max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4096,
                                "default": 0
                            },
                            "tags": {
                                "$ref": "#/definitions/TypeLoad30",
                                "default": []
                            }
                        },
                        "required": [
                            "label",
                            "links",
                            "logical_device"
                        ]
                    },
                    "default": []
                },
                "generic_systems": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "description": "Generic system type label",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64
                            },
                            "logical_device": {
                                "description": "ID of logical device",
                                "type": "string",
                                "minLength": 1
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TypeLoad31"
                                },
                                "minItems": 1
                            },
                            "count": {
                                "type": "integer",
                                "minimum": 1,
                                "default": 1
                            },
                            "port_channel_id_min": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4096,
                                "default": 0
                            },
                            "port_channel_id_max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4096,
                                "default": 0
                            },
                            "management_level": {
                                "enum": [
                                    "full_control",
                                    "telemetry_only",
                                    "unmanaged"
                                ],
                                "type": "string"
                            },
                            "loopback": {
                                "description": "Indicates whether loopback interface should be immediately created",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "type": "string",
                                "default": "disabled"
                            },
                            "asn_domain": {
                                "description": "Indicates whether ASN domain should be immediately created",
                                "enum": [
                                    "disabled",
                                    "enabled"
                                ],
                                "type": "string",
                                "default": "disabled"
                            },
                            "tags": {
                                "$ref": "#/definitions/TypeLoad30",
                                "default": []
                            }
                        },
                        "required": [
                            "label",
                            "links",
                            "logical_device",
                            "management_level"
                        ]
                    },
                    "default": []
                },
                "logical_devices": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "display_name": {
                                "$ref": "#/definitions/TypeLoad32"
                            },
                            "panels": {
                                "$ref": "#/definitions/TypeLoad33"
                            },
                            "id": {
                                "$ref": "#/definitions/TypeLoad34"
                            }
                        },
                        "required": [
                            "display_name",
                            "id",
                            "panels"
                        ]
                    },
                    "default": []
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad35",
                    "default": []
                },
                "preferences": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "Contains UI metadata to assist in visualization of the rack type or other UI-specific key-value storages"
                    },
                    "default": {}
                }
            },
            "required": [
                "created_at",
                "display_name",
                "last_modified_at",
                "leafs"
            ]
        },
        "PostApiDesignTagsRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Tag name, case-insensitive, must be unique across all tags",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^(\\S+(\\s+\\S+)*)*$"
                },
                "description": {
                    "description": "Optional field to add any details",
                    "type": "string"
                },
                "id": {
                    "description": "ID of tag",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9._-]+$"
                }
            },
            "required": [
                "label"
            ]
        },
        "PostApiDesignTemplatesRequest": {
            "title": "DesignTemplatePOST",
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeLoad20"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeLoad21"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeLoad22"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeLoad23"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeLoad24"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeLoad25"
                        },
                        "rack_type_counts": {
                            "$ref": "#/definitions/TypeLoad26"
                        },
                        "rack_types": {
                            "$ref": "#/definitions/TypeLoad27"
                        },
                        "dhcp_service_intent": {
                            "$ref": "#/definitions/DHCPServiceIntentLoad"
                        },
                        "virtual_network_policy": {
                            "$ref": "#/definitions/VirtualNetworkPolicyLoad"
                        },
                        "type": {
                            "enum": [
                                "rack_based"
                            ],
                            "type": "string"
                        },
                        "spine": {
                            "$ref": "#/definitions/TypeLoad36"
                        },
                        "asn_allocation_policy": {
                            "$ref": "#/definitions/AsnAllocationPolicyLoad"
                        }
                    },
                    "required": [
                        "created_at",
                        "dhcp_service_intent",
                        "display_name",
                        "last_modified_at",
                        "rack_type_counts",
                        "rack_types",
                        "spine",
                        "type"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeLoad20"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeLoad21"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeLoad22"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeLoad23"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeLoad24"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeLoad25"
                        },
                        "type": {
                            "enum": [
                                "pod_based"
                            ],
                            "type": "string"
                        },
                        "rack_based_template_counts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "rack_based_template_id": {
                                        "description": "ID of rack based template",
                                        "type": "string"
                                    },
                                    "count": {
                                        "title": "Number of templates with `rack_based_template_id` in template or blueprint",
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                },
                                "required": [
                                    "count",
                                    "rack_based_template_id"
                                ]
                            },
                            "minItems": 1
                        },
                        "rack_based_templates": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/TypeLoad20"
                                    },
                                    "display_name": {
                                        "$ref": "#/definitions/TypeLoad21"
                                    },
                                    "status": {
                                        "$ref": "#/definitions/TypeLoad22"
                                    },
                                    "capability": {
                                        "$ref": "#/definitions/TypeLoad23"
                                    },
                                    "created_at": {
                                        "$ref": "#/definitions/TypeLoad24"
                                    },
                                    "last_modified_at": {
                                        "$ref": "#/definitions/TypeLoad25"
                                    },
                                    "rack_type_counts": {
                                        "$ref": "#/definitions/TypeLoad26"
                                    },
                                    "rack_types": {
                                        "$ref": "#/definitions/TypeLoad27"
                                    },
                                    "dhcp_service_intent": {
                                        "$ref": "#/definitions/DHCPServiceIntentLoad"
                                    },
                                    "virtual_network_policy": {
                                        "$ref": "#/definitions/VirtualNetworkPolicyLoad"
                                    },
                                    "type": {
                                        "enum": [
                                            "rack_based"
                                        ],
                                        "type": "string",
                                        "default": null
                                    },
                                    "spine": {
                                        "$ref": "#/definitions/TypeLoad36"
                                    },
                                    "asn_allocation_policy": {
                                        "$ref": "#/definitions/AsnAllocationPolicyLoad"
                                    }
                                },
                                "required": [
                                    "created_at",
                                    "dhcp_service_intent",
                                    "display_name",
                                    "last_modified_at",
                                    "rack_type_counts",
                                    "rack_types",
                                    "spine"
                                ]
                            },
                            "minItems": 1
                        },
                        "superspine": {
                            "type": "object",
                            "properties": {
                                "logical_device": {
                                    "$ref": "#/definitions/LogicalDeviceStatusLoad"
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeLoad37"
                                },
                                "plane_count": {
                                    "description": "Number of planes",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "superspine_per_plane": {
                                    "description": "Number of superspines per plane",
                                    "type": "integer",
                                    "minimum": 1
                                }
                            },
                            "required": [
                                "logical_device",
                                "plane_count",
                                "superspine_per_plane"
                            ]
                        }
                    },
                    "required": [
                        "created_at",
                        "display_name",
                        "last_modified_at",
                        "rack_based_template_counts",
                        "rack_based_templates",
                        "superspine",
                        "type"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeLoad20"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeLoad21"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeLoad22"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeLoad23"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeLoad24"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeLoad25"
                        },
                        "rack_type_counts": {
                            "$ref": "#/definitions/TypeLoad26"
                        },
                        "rack_types": {
                            "$ref": "#/definitions/TypeLoad27"
                        },
                        "dhcp_service_intent": {
                            "$ref": "#/definitions/DHCPServiceIntentLoad"
                        },
                        "virtual_network_policy": {
                            "$ref": "#/definitions/VirtualNetworkPolicyLoad1",
                            "default": {
                                "overlay_control_protocol": null
                            }
                        },
                        "type": {
                            "enum": [
                                "l3_collapsed"
                            ],
                            "type": "string"
                        },
                        "mesh_link_count": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 64
                        },
                        "mesh_link_speed": {
                            "$ref": "#/definitions/PortSpeedLoad"
                        }
                    },
                    "required": [
                        "created_at",
                        "dhcp_service_intent",
                        "display_name",
                        "last_modified_at",
                        "mesh_link_count",
                        "mesh_link_speed",
                        "rack_type_counts",
                        "rack_types",
                        "type"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/TypeLoad20"
                        },
                        "display_name": {
                            "$ref": "#/definitions/TypeLoad21"
                        },
                        "status": {
                            "$ref": "#/definitions/TypeLoad22"
                        },
                        "capability": {
                            "$ref": "#/definitions/TypeLoad23"
                        },
                        "created_at": {
                            "$ref": "#/definitions/TypeLoad24"
                        },
                        "last_modified_at": {
                            "$ref": "#/definitions/TypeLoad25"
                        },
                        "rack_type_counts": {
                            "$ref": "#/definitions/TypeLoad26"
                        },
                        "rack_types": {
                            "$ref": "#/definitions/TypeLoad27"
                        },
                        "dhcp_service_intent": {
                            "$ref": "#/definitions/DHCPServiceIntentLoad"
                        },
                        "virtual_network_policy": {
                            "$ref": "#/definitions/VirtualNetworkPolicyLoad1",
                            "default": {
                                "overlay_control_protocol": null
                            }
                        },
                        "type": {
                            "enum": [
                                "rail_collapsed"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "created_at",
                        "dhcp_service_intent",
                        "display_name",
                        "last_modified_at",
                        "rack_type_counts",
                        "rack_types",
                        "type"
                    ]
                }
            ]
        },
        "PostApiDeviceOsImagesExternalRequest": {
            "type": "object",
            "properties": {
                "platform": {
                    "description": "Device OS platform. Supported platforms are: ['EOS', 'NXOS', 'CUMULUS', 'JUNOS', 'SONIC']",
                    "enum": [
                        "CUMULUS",
                        "EOS",
                        "JUNOS",
                        "NXOS",
                        "SONIC"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Device OS image description",
                    "type": "string",
                    "minLength": 1
                },
                "image_url": {
                    "description": "External URL to the device OS image file",
                    "type": "string",
                    "minLength": 1
                },
                "checksum": {
                    "description": "String representation of the SHA512/SHA256/MD5 checksum. ",
                    "type": "string",
                    "default": null
                },
                "checksum_type": {
                    "enum": [
                        "MD5",
                        "SHA256",
                        "SHA512"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "description",
                "image_url",
                "platform"
            ]
        },
        "PostApiDeviceOsValidateImageRequest": {
            "type": "object",
            "properties": {
                "platform": {
                    "description": "Device OS platform. Supported platforms are: ['EOS', 'NXOS', 'CUMULUS', 'JUNOS', 'SONIC']",
                    "enum": [
                        "CUMULUS",
                        "EOS",
                        "JUNOS",
                        "NXOS",
                        "SONIC"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Device OS image description",
                    "type": "string",
                    "minLength": 1
                },
                "image_name": {
                    "description": "File name of the uploaded image",
                    "type": "string",
                    "default": null
                },
                "image_size": {
                    "description": "File size in bytes",
                    "type": "integer",
                    "default": null
                },
                "checksum": {
                    "description": "String representation of the SHA512/SHA256/MD5 checksum. ",
                    "type": "string",
                    "default": null
                },
                "checksum_type": {
                    "enum": [
                        "MD5",
                        "SHA256",
                        "SHA512"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "description",
                "platform"
            ]
        },
        "PostApiDeviceProfileCloneRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "clone_interface_maps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "original_id": {
                                "description": "ID of existing interface map referencing the device profile and selected for cloning.",
                                "type": "string",
                                "minLength": 1
                            },
                            "clone_label": {
                                "description": "User provided label for the clone of this interface map.",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "clone_label",
                            "original_id"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "label": {
                    "description": "Human friendly name for the Device Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the device profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "dual_routing_engine": {
                    "$ref": "#/definitions/TypeLoad14"
                },
                "physical_device": {
                    "$ref": "#/definitions/TypeLoad15"
                },
                "device_profile_type": {
                    "enum": [
                        "modular",
                        "monolithic"
                    ],
                    "type": "string",
                    "default": "monolithic"
                },
                "selector": {
                    "$ref": "#/definitions/TypeLoad16",
                    "default": null
                },
                "reference_design_capabilities": {
                    "$ref": "#/definitions/TypeLoad17",
                    "default": {
                        "datacenter": "full_support",
                        "freeform": "full_support"
                    }
                },
                "slot_count": {
                    "type": "integer",
                    "default": null
                },
                "chassis_count": {
                    "description": "Applicable only when switch operates in virtual chassis mode.Device profile for switches operating in standalone modewill not have this field.",
                    "type": "integer",
                    "default": null
                },
                "chassis_info": {
                    "type": "object",
                    "properties": {
                        "chassis_profile_id": {
                            "type": "string",
                            "minLength": 1
                        },
                        "selector": {
                            "$ref": "#/definitions/TypeLoad16"
                        },
                        "hardware_capabilities": {
                            "$ref": "#/definitions/TypeLoad18"
                        },
                        "software_capabilities": {
                            "$ref": "#/definitions/TypeLoad19"
                        },
                        "reference_design_capabilities": {
                            "$ref": "#/definitions/TypeLoad17",
                            "default": {
                                "datacenter": "full_support",
                                "freeform": "full_support"
                            }
                        },
                        "dual_routing_engine": {
                            "$ref": "#/definitions/TypeLoad14"
                        },
                        "linecard_slot_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "minItems": 1,
                            "uniqueItems": true,
                            "default": null
                        },
                        "physical_device": {
                            "$ref": "#/definitions/TypeLoad15"
                        }
                    },
                    "required": [
                        "chassis_profile_id",
                        "hardware_capabilities",
                        "selector",
                        "software_capabilities"
                    ],
                    "default": null
                },
                "linecards_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.",
                                "type": "string",
                                "minLength": 1
                            },
                            "selector": {
                                "type": "object",
                                "properties": {
                                    "os": {
                                        "description": "OS of the modular device this linecard is going to be used with.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "model": {
                                        "description": "Hardware model of the linecard.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "version": {
                                        "description": "Hardware revision of the linecard.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "model",
                                    "os"
                                ]
                            },
                            "hardware_capabilities": {
                                "$ref": "#/definitions/TypeLoad18"
                            }
                        },
                        "required": [
                            "hardware_capabilities",
                            "linecard_profile_id",
                            "selector"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "hardware_capabilities": {
                    "$ref": "#/definitions/TypeLoad18",
                    "default": null
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "port_id": {
                                "description": "Port ID",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                            },
                            "display_id": {
                                "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": null
                            },
                            "row_id": {
                                "description": "The row this port belongs to",
                                "type": "integer"
                            },
                            "panel_id": {
                                "description": "The panel this port belongs to",
                                "type": "integer"
                            },
                            "column_id": {
                                "description": "The column this port belongs to",
                                "type": "integer"
                            },
                            "slot_id": {
                                "description": "The module/slot this port belongs to",
                                "type": "integer",
                                "minimum": 0
                            },
                            "failure_domain_id": {
                                "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "connector_type": {
                                "description": "Port transceiver type",
                                "type": "string",
                                "minLength": 1
                            },
                            "transformations": {
                                "description": "Available speed tranformations on this port",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "transformation_id": {
                                            "description": "Transformation ID",
                                            "type": "integer"
                                        },
                                        "is_default": {
                                            "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                            "type": "boolean"
                                        },
                                        "interfaces": {
                                            "description": "Interfaces available in this speedtransformation",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "interface_id": {
                                                        "description": "Interface ID",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Interface name",
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "state": {
                                                        "description": "Is the interface active or inactive",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "setting": {
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "speed": {
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "description": "scalar multiplier for the speed of the interface",
                                                                "type": "integer"
                                                            },
                                                            "unit": {
                                                                "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                "enum": [
                                                                    "",
                                                                    "G",
                                                                    "M"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "value"
                                                        ],
                                                        "default": null
                                                    }
                                                },
                                                "required": [
                                                    "interface_id",
                                                    "name",
                                                    "state"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "interfaces",
                                        "is_default",
                                        "transformation_id"
                                    ]
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "column_id",
                            "connector_type",
                            "failure_domain_id",
                            "panel_id",
                            "port_id",
                            "row_id",
                            "slot_id",
                            "transformations"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "software_capabilities": {
                    "$ref": "#/definitions/TypeLoad19",
                    "default": null
                },
                "chassis_profile_id": {
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "slot_configuration": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "slot_id": {
                                "description": "Slot number of the linecard in the physical device. Must be a non-negative integer.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.The ID must be present in an entry in the device profile's linecards_info list.",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "linecard_profile_id",
                            "slot_id"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "PostApiDeviceProfilesRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Device Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the device profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "dual_routing_engine": {
                    "$ref": "#/definitions/TypeLoad14"
                },
                "physical_device": {
                    "$ref": "#/definitions/TypeLoad15"
                },
                "device_profile_type": {
                    "enum": [
                        "modular",
                        "monolithic"
                    ],
                    "type": "string",
                    "default": "monolithic"
                },
                "selector": {
                    "$ref": "#/definitions/TypeLoad16",
                    "default": null
                },
                "reference_design_capabilities": {
                    "$ref": "#/definitions/TypeLoad17",
                    "default": {
                        "datacenter": "full_support",
                        "freeform": "full_support"
                    }
                },
                "slot_count": {
                    "type": "integer",
                    "default": null
                },
                "chassis_count": {
                    "description": "Applicable only when switch operates in virtual chassis mode.Device profile for switches operating in standalone modewill not have this field.",
                    "type": "integer",
                    "default": null
                },
                "chassis_info": {
                    "type": "object",
                    "properties": {
                        "chassis_profile_id": {
                            "type": "string",
                            "minLength": 1
                        },
                        "selector": {
                            "$ref": "#/definitions/TypeLoad16"
                        },
                        "hardware_capabilities": {
                            "$ref": "#/definitions/TypeLoad18"
                        },
                        "software_capabilities": {
                            "$ref": "#/definitions/TypeLoad19"
                        },
                        "reference_design_capabilities": {
                            "$ref": "#/definitions/TypeLoad17",
                            "default": {
                                "datacenter": "full_support",
                                "freeform": "full_support"
                            }
                        },
                        "dual_routing_engine": {
                            "$ref": "#/definitions/TypeLoad14"
                        },
                        "linecard_slot_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "minItems": 1,
                            "uniqueItems": true,
                            "default": null
                        },
                        "physical_device": {
                            "$ref": "#/definitions/TypeLoad15"
                        }
                    },
                    "required": [
                        "chassis_profile_id",
                        "hardware_capabilities",
                        "selector",
                        "software_capabilities"
                    ],
                    "default": null
                },
                "linecards_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.",
                                "type": "string",
                                "minLength": 1
                            },
                            "selector": {
                                "type": "object",
                                "properties": {
                                    "os": {
                                        "description": "OS of the modular device this linecard is going to be used with.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "model": {
                                        "description": "Hardware model of the linecard.",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "version": {
                                        "description": "Hardware revision of the linecard.",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "model",
                                    "os"
                                ]
                            },
                            "hardware_capabilities": {
                                "$ref": "#/definitions/TypeLoad18"
                            }
                        },
                        "required": [
                            "hardware_capabilities",
                            "linecard_profile_id",
                            "selector"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "hardware_capabilities": {
                    "$ref": "#/definitions/TypeLoad18",
                    "default": null
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "port_id": {
                                "description": "Port ID",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                            },
                            "display_id": {
                                "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": null
                            },
                            "row_id": {
                                "description": "The row this port belongs to",
                                "type": "integer"
                            },
                            "panel_id": {
                                "description": "The panel this port belongs to",
                                "type": "integer"
                            },
                            "column_id": {
                                "description": "The column this port belongs to",
                                "type": "integer"
                            },
                            "slot_id": {
                                "description": "The module/slot this port belongs to",
                                "type": "integer",
                                "minimum": 0
                            },
                            "failure_domain_id": {
                                "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "connector_type": {
                                "description": "Port transceiver type",
                                "type": "string",
                                "minLength": 1
                            },
                            "transformations": {
                                "description": "Available speed tranformations on this port",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "transformation_id": {
                                            "description": "Transformation ID",
                                            "type": "integer"
                                        },
                                        "is_default": {
                                            "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                            "type": "boolean"
                                        },
                                        "interfaces": {
                                            "description": "Interfaces available in this speedtransformation",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "interface_id": {
                                                        "description": "Interface ID",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Interface name",
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "state": {
                                                        "description": "Is the interface active or inactive",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "setting": {
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "speed": {
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "description": "scalar multiplier for the speed of the interface",
                                                                "type": "integer"
                                                            },
                                                            "unit": {
                                                                "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                "enum": [
                                                                    "",
                                                                    "G",
                                                                    "M"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "value"
                                                        ],
                                                        "default": null
                                                    }
                                                },
                                                "required": [
                                                    "interface_id",
                                                    "name",
                                                    "state"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "interfaces",
                                        "is_default",
                                        "transformation_id"
                                    ]
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "column_id",
                            "connector_type",
                            "failure_domain_id",
                            "panel_id",
                            "port_id",
                            "row_id",
                            "slot_id",
                            "transformations"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "software_capabilities": {
                    "$ref": "#/definitions/TypeLoad19",
                    "default": null
                },
                "chassis_profile_id": {
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "slot_configuration": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "slot_id": {
                                "description": "Slot number of the linecard in the physical device. Must be a non-negative integer.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "linecard_profile_id": {
                                "description": "ID of the linecard profile in global catalog.The ID must be present in an entry in the device profile's linecards_info list.",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "linecard_profile_id",
                            "slot_id"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "PostApiIbaUnitConfigRequest": {
            "type": "object",
            "properties": {
                "PROBES_NUM": {
                    "description": "Maximum number of probes per IBA unit",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "required": [
                "PROBES_NUM"
            ]
        },
        "PostApiLinecardProfilesRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "minLength": 1
                },
                "label": {
                    "description": "Human friendly name for the Device Profile as read on UI",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "predefined": {
                    "description": "Indicates whether the linecard profile is predefined and therefore intended to be immutable. If True, the profile must not be updated by user.",
                    "type": "boolean",
                    "default": false
                },
                "selector": {
                    "type": "object",
                    "properties": {
                        "os": {
                            "description": "OS of the modular device this linecard is going to be used with.",
                            "type": "string",
                            "minLength": 1
                        },
                        "model": {
                            "description": "Hardware model of the linecard.",
                            "type": "string",
                            "minLength": 1
                        },
                        "version": {
                            "description": "Hardware revision of the linecard.",
                            "type": "string",
                            "default": null
                        }
                    },
                    "required": [
                        "model",
                        "os"
                    ]
                },
                "hardware_capabilities": {
                    "type": "object",
                    "properties": {
                        "userland": {
                            "description": "What type of userland (application binary/kernel) does the device support.",
                            "type": "integer"
                        },
                        "form_factor": {
                            "description": "How much rack space does the device need.",
                            "type": "string",
                            "minLength": 1
                        },
                        "ecmp_limit": {
                            "description": "What is the maximum number of Equal Cost Multi Path routes. This field changes BGP configuration on the device (ecmp max-paths).",
                            "type": "integer"
                        },
                        "asic": {
                            "description": "Type of Chipset (ASIC) on the device.",
                            "type": "string"
                        },
                        "cpu": {
                            "description": "What is the CPU architecture of the device.",
                            "type": "string",
                            "minLength": 1
                        },
                        "ram": {
                            "description": "How much memory does the device have.",
                            "type": "integer"
                        },
                        "vxlan_supported": {
                            "description": "Does the device support vxlan.",
                            "type": "boolean",
                            "default": null
                        },
                        "copp_strict": {
                            "description": "when set to True, generate strict copp profile config for NXOS",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "$ref": "#/definitions/TypeLoad13"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "breakout_capable": {
                            "description": "when set to True for a module, indicates that the ports of this module are breakout capable",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "module": {
                                        "type": "integer"
                                    },
                                    "version": {
                                        "$ref": "#/definitions/TypeLoad13"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "module",
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "as_seq_num_supported": {
                            "description": "when set to False, skips  rendering anything due to the inability to sequence the AS entry",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "$ref": "#/definitions/TypeLoad13"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "routing_instance_supported": {
                            "description": "The flag indicates whether the device supports\"routing instance\" command. This field is furtherused for AAA server related configurationon Junos. When set to True,routing instance command is used withpre-configured mgmt_junos interface; Otherwise,source address is used with the management IPaddress.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "$ref": "#/definitions/TypeLoad13"
                                    },
                                    "value": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "value",
                                    "version"
                                ]
                            },
                            "minItems": 1,
                            "default": null
                        },
                        "bfd_supported": {
                            "description": "Does the device support BFD.",
                            "type": "boolean",
                            "default": null
                        },
                        "vrf_limit": {
                            "description": "VRF range supported by the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "vtep_limit": {
                            "description": "Number of VTEPs supported by the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "vtep_flood_limit": {
                            "description": "Number of flood lists supported per VTEP on the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "max_l2_mtu": {
                            "description": "Maximum L2 MTU supported on the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        },
                        "max_l3_mtu": {
                            "description": "Maximum L3 MTU supported on the device.",
                            "type": "integer",
                            "minimum": 1,
                            "default": null
                        }
                    },
                    "required": [
                        "asic",
                        "cpu",
                        "ecmp_limit",
                        "form_factor",
                        "ram",
                        "userland"
                    ]
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "port_id": {
                                "description": "Port ID",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535
                            },
                            "display_id": {
                                "description": "Number to be displayed in the visualization of this port. Unlike port ID, multiple ports can have same display ID. When linecard profile ports are added to a modular device profile, their display IDs are retained. This enables a simple way of visualizing port numbers grouped by slot. When creating or updating a monolithic device profile, or a linecard profile, if display_id is not given, then the value of port_id is used.",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "default": null
                            },
                            "row_id": {
                                "description": "The row this port belongs to",
                                "type": "integer"
                            },
                            "panel_id": {
                                "description": "The panel this port belongs to",
                                "type": "integer"
                            },
                            "column_id": {
                                "description": "The column this port belongs to",
                                "type": "integer"
                            },
                            "slot_id": {
                                "oneOf": [
                                    {
                                        "description": "The module/slot this port belongs to",
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    {
                                        "description": "The module/slot this port belongs to",
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                ]
                            },
                            "failure_domain_id": {
                                "description": "This information may be used later when doing the cabling plan to ensure that 2 uplinks are not attached to the same failure domain.",
                                "type": "integer",
                                "minimum": 0
                            },
                            "connector_type": {
                                "description": "Port transceiver type",
                                "type": "string",
                                "minLength": 1
                            },
                            "transformations": {
                                "description": "Available speed tranformations on this port",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "transformation_id": {
                                            "description": "Transformation ID",
                                            "type": "integer"
                                        },
                                        "is_default": {
                                            "description": "Is the speed this transformation respresents, the primary/default speed that the port can run in",
                                            "type": "boolean"
                                        },
                                        "interfaces": {
                                            "description": "Interfaces available in this speedtransformation",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "interface_id": {
                                                        "description": "Interface ID",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Interface name",
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "state": {
                                                        "description": "Is the interface active or inactive",
                                                        "enum": [
                                                            "active",
                                                            "inactive"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "setting": {
                                                        "type": "string",
                                                        "default": ""
                                                    },
                                                    "speed": {
                                                        "type": "object",
                                                        "properties": {
                                                            "value": {
                                                                "description": "scalar multiplier for the speed of the interface",
                                                                "type": "integer"
                                                            },
                                                            "unit": {
                                                                "description": "Indicates if 'value' is in units of Gbps or Mbps",
                                                                "enum": [
                                                                    "",
                                                                    "G",
                                                                    "M"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "unit",
                                                            "value"
                                                        ],
                                                        "default": null
                                                    }
                                                },
                                                "required": [
                                                    "interface_id",
                                                    "name",
                                                    "state"
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [
                                        "interfaces",
                                        "is_default",
                                        "transformation_id"
                                    ]
                                },
                                "minItems": 1
                            }
                        },
                        "required": [
                            "column_id",
                            "connector_type",
                            "failure_domain_id",
                            "panel_id",
                            "port_id",
                            "row_id",
                            "slot_id",
                            "transformations"
                        ]
                    },
                    "minItems": 1
                },
                "compatible_chassis": {
                    "description": "Models the chassis profiles which support instances of this linecard profile. Each key is an ID of a chassis profile. The value is a list of slot IDs in that chassis profile into which an instance of this linecard can be plugged. If the value is an empty list or null, then the linecard can be plugged into all slots of the chassis.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "uniqueItems": true,
                        "default": null
                    }
                }
            },
            "required": [
                "compatible_chassis",
                "hardware_capabilities",
                "label",
                "ports",
                "selector"
            ]
        },
        "PostApiMetricdbQueryRequest": {
            "type": "object",
            "properties": {
                "application": {
                    "description": "Application utilizing metric log",
                    "enum": [
                        "anomaly",
                        "cluster_health_info",
                        "iba",
                        "memory_troubleshooter"
                    ],
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the metric",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the metric",
                    "type": "string"
                },
                "filter": {
                    "description": "Filter string to filter query results",
                    "type": "string",
                    "default": ""
                },
                "begin_time": {
                    "$ref": "#/definitions/TypeLoad4"
                },
                "end_time": {
                    "$ref": "#/definitions/TypeLoad4"
                },
                "aggregation": {
                    "type": "object",
                    "properties": {
                        "period": {
                            "description": "Aggregation period is seconds",
                            "type": "integer"
                        },
                        "metrics": {
                            "description": "Mapping of metrics to its aggregation type",
                            "type": "object",
                            "additionalProperties": {
                                "enum": [
                                    "all_of",
                                    "any_of",
                                    "average",
                                    "last",
                                    "max",
                                    "min",
                                    "none"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    "required": [
                        "metrics",
                        "period"
                    ],
                    "default": null
                },
                "caching": {
                    "type": "object",
                    "properties": {
                        "timeout": {
                            "description": "Timeout in seconds for cache. The cache is invalidated if it is older than timeout.",
                            "type": "integer",
                            "minimum": 10,
                            "default": 60
                        },
                        "clear": {
                            "description": "Indicator to clear cache",
                            "type": "boolean",
                            "default": false
                        },
                        "keep_alive": {
                            "description": "Indicator to nudge timeout",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "default": {
                        "timeout": null,
                        "clear": null,
                        "keep_alive": null
                    }
                }
            },
            "required": [
                "application",
                "begin_time",
                "end_time",
                "name",
                "namespace"
            ]
        },
        "PostApiMetricdbQueryResponse": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "$ref": "#/definitions/TypeDump118"
                                    }
                                },
                                "required": [
                                    "timestamp"
                                ],
                                "additionalProperties": {}
                            }
                        },
                        "status": {
                            "type": "object",
                            "properties": {
                                "result_code": {
                                    "enum": [
                                        "nil",
                                        "success_complete",
                                        "success_more"
                                    ],
                                    "type": "string"
                                },
                                "total_count": {
                                    "description": "Total number of results",
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "last_timestamp": {
                                    "$ref": "#/definitions/TypeDump118"
                                },
                                "begin_time": {
                                    "$ref": "#/definitions/TypeDump118"
                                },
                                "end_time": {
                                    "$ref": "#/definitions/TypeDump118"
                                }
                            },
                            "required": [
                                "begin_time",
                                "end_time",
                                "last_timestamp",
                                "result_code",
                                "total_count"
                            ]
                        },
                        "cached_since": {
                            "$ref": "#/definitions/TypeDump118",
                            "default": null
                        },
                        "cached_till": {
                            "$ref": "#/definitions/TypeDump118",
                            "default": null
                        }
                    },
                    "required": [
                        "items",
                        "status"
                    ]
                },
                {
                    "type": "object",
                    "maxProperties": 0
                }
            ]
        },
        "PostApiPortAliasesRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Port alias label",
                    "type": "string",
                    "pattern": "^.*[a-zA-Z]+.*$"
                },
                "value": {
                    "title": "PortSetOrAny",
                    "description": "Multiple port ranges separated by comma or \"any\"",
                    "type": "string"
                }
            },
            "required": [
                "label",
                "value"
            ]
        },
        "PostApiPortAliasesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Port alias ID",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiProductUsageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the job",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiPropertySetsRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Property set label",
                    "type": "string"
                },
                "values": {
                    "description": "Dictionary of property key-value pairs",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "values_yaml": {
                    "description": "YAML representation of property set values",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "PostApiPropertySetsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiQbaQueryRequest": {
            "oneOf": [
                {
                    "$ref": "#/definitions/TypeLoad42"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeLoad42"
                    }
                }
            ]
        },
        "PostApiQbaQueryResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "object",
                    "properties": {
                        "total_count": {
                            "description": "Total number of rows",
                            "type": "integer",
                            "minimum": 0
                        },
                        "columns": {
                            "description": "List of column definitions: (name, element_type, column_type)",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": [
                                    {
                                        "description": "Column name",
                                        "type": "string"
                                    },
                                    {
                                        "description": "Element type, one of \"String\", \"Boolean\" or \"Numeric\"",
                                        "type": "string"
                                    },
                                    {
                                        "description": "Column type, one of \"Array\" or \"Scalar\"",
                                        "type": "string"
                                    }
                                ]
                            },
                            "default": null
                        },
                        "begin_time": {
                            "$ref": "#/definitions/TypeDump119",
                            "default": null
                        },
                        "end_time": {
                            "$ref": "#/definitions/TypeDump119",
                            "default": null
                        }
                    },
                    "required": [
                        "total_count"
                    ]
                },
                "items": {
                    "description": "Result data as a list of rows",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                }
            },
            "required": [
                "items",
                "status"
            ]
        },
        "PostApiRciInstancesRciIdImpactRequest": {
            "type": "object",
            "properties": {
                "impact": {
                    "description": "Impact name",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "impact"
            ]
        },
        "PostApiRciInstancesRciIdImpactResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Impact name",
                    "type": "string"
                },
                "rcfs": {
                    "description": "List of RCF names that could potentially cause the given impact",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "rcfs"
            ]
        },
        "PostApiRciInstancesRciIdRcfRequest": {
            "type": "object",
            "properties": {
                "rcf": {
                    "description": "Requested RCF (Root Cause Fault)",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "rcf"
            ]
        },
        "PostApiRciInstancesRciIdRcfResponse": {
            "type": "object",
            "properties": {
                "rcfs": {
                    "description": "Found root cause faults",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "RCF name",
                                "type": "string"
                            },
                            "context": {
                                "description": "Reference-design-specific context data of the symptom",
                                "type": "string"
                            },
                            "description": {
                                "description": "Human readable description of the root cause",
                                "type": "string"
                            },
                            "symptoms": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "context": {
                                            "description": "Reference-design-specific context data of the symptom",
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "Human readable description of the symptom",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "context",
                                        "description",
                                        "name"
                                    ]
                                }
                            },
                            "impacts": {
                                "description": "List of impacts which caused this RCF",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "context",
                            "description",
                            "impacts",
                            "name",
                            "symptoms"
                        ]
                    }
                }
            },
            "required": [
                "rcfs"
            ]
        },
        "PostApiRciInstancesRequest": {
            "type": "object",
            "properties": {
                "trigger_period": {
                    "description": "Time between executions of this RCI instance (seconds)",
                    "type": "number",
                    "minimum": 10.0
                },
                "blueprints": {
                    "description": "Multiple blueprints for the same RCI instance are not  supported",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "minItems": 1
                },
                "processors": {
                    "description": "List of enabled RCI processors. Available processors: physical_connectivity, underlay_reachability, external_reachability. See also: /rci/processors",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    },
                    "minItems": 1
                },
                "replay": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "Whether a replay config is enabled.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "enabled"
                    ],
                    "default": null
                },
                "label": {
                    "description": "Instance label",
                    "type": "string",
                    "default": ""
                }
            },
            "required": [
                "blueprints",
                "processors",
                "trigger_period"
            ]
        },
        "PostApiResourcesAsnPoolsRequest": {
            "title": "AsnPoolConfigSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of ASN ranges",
                    "type": "array",
                    "items": {
                        "title": "AsnRange",
                        "description": "range of AS numbers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First ASN in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            },
                            "last": {
                                "description": "Last ASN in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PostApiResourcesIntegerPoolsRequest": {
            "title": "IntegerPoolConfigSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of integer ranges",
                    "type": "array",
                    "items": {
                        "title": "IntegerRange",
                        "description": "range of integers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First integer in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            },
                            "last": {
                                "description": "Last integer in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PostApiResourcesIpPoolsRequest": {
            "title": "IP PoolConfigSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "subnets": {
                    "description": "List of IP subnets",
                    "type": "array",
                    "items": {
                        "title": "Ipv4Network",
                        "description": "An IPv4 network (with status)",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "network": {
                                "description": "CIDR notation of IPv4 subnet",
                                "type": "string"
                            }
                        },
                        "required": [
                            "network",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                }
            },
            "required": [
                "display_name",
                "subnets",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PostApiResourcesIpv6PoolsRequest": {
            "title": "IPv6 PoolConfigSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "subnets": {
                    "description": "List of IP subnets",
                    "type": "array",
                    "items": {
                        "title": "Ipv6Network",
                        "description": "An IPv6 network (with status)",
                        "type": "object",
                        "properties": {
                            "network": {
                                "description": "CIDR notation of IPv6 subnet",
                                "type": "string"
                            }
                        },
                        "required": [
                            "network"
                        ]
                    }
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                }
            },
            "required": [
                "display_name",
                "subnets"
            ]
        },
        "PostApiResourcesVlanPoolsRequest": {
            "title": "VlanPoolConfigSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of integer ranges",
                    "type": "array",
                    "items": {
                        "title": "VlanRange",
                        "description": "range of Vlans",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First VLAN in this range, inclusive",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4095
                            },
                            "last": {
                                "description": "Last VLAN in this range, inclusive",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4095
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PostApiResourcesVniPoolsRequest": {
            "title": "VniPoolConfigSchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of VNI ranges",
                    "type": "array",
                    "items": {
                        "title": "VniRange",
                        "description": "range of VNIs numbers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First VNI in this range, inclusive",
                                "type": "integer",
                                "minimum": 4096,
                                "maximum": 16777214
                            },
                            "last": {
                                "description": "Last VNI in this range, inclusive",
                                "type": "integer",
                                "minimum": 4096,
                                "maximum": 16777214
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                },
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PostApiShowTechBatchDeleteRequest": {
            "type": "array",
            "items": {
                "description": "Show tech job ID",
                "type": "string"
            }
        },
        "PostApiShowTechClusterNodeRequest": {
            "type": "object",
            "properties": {
                "cluster_node_id": {
                    "description": "ID of the cluster node",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "cluster_node_id"
            ]
        },
        "PostApiShowTechControllerRequest": {
            "type": "object",
            "properties": {
                "backup_mode": {
                    "description": "The backup mode is on or off in show tech job",
                    "enum": [
                        "off",
                        "on"
                    ],
                    "type": "string",
                    "default": "off"
                }
            }
        },
        "PostApiShowTechFlowDataCollectorRequest": {
            "type": "object",
            "properties": {
                "flow_data_collector_id": {
                    "description": "ID of the flow data collector",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "flow_data_collector_id"
            ]
        },
        "PostApiStreamingCertificatesRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "User-defined certificate record's label",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Optional user-defined certificate record's description",
                    "type": "string",
                    "maxLength": 120,
                    "default": ""
                },
                "pem_b64": {
                    "description": "Base64 encoded PEM-data",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20000
                }
            },
            "required": [
                "label",
                "pem_b64"
            ],
            "additionalProperties": false
        },
        "PostApiStreamingCertificatesResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "description": "ID of certificate record",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                }
            },
            "required": [
                "id"
            ],
            "additionalProperties": false
        },
        "PostApiStreamingConfigRequest": {
            "title": "StreamingConfig",
            "description": "Configuration of new streaming endpoint",
            "type": "object",
            "properties": {
                "hostname": {
                    "title": "HostnameOrIpAddressType",
                    "description": "hostname or IP address of endpoint",
                    "oneOf": [
                        {
                            "title": "IPv4 address of endpoint",
                            "type": "string"
                        },
                        {
                            "title": "Hostname of endpoint",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32,
                            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                        }
                    ]
                },
                "port": {
                    "description": "port number of endpoint",
                    "type": "integer"
                },
                "protocol": {
                    "enum": [
                        "protoBufOverTcp"
                    ],
                    "type": "string"
                },
                "streaming_type": {
                    "description": "type of data streaming to this endpoint",
                    "enum": [
                        "alerts",
                        "events",
                        "perfmon"
                    ],
                    "type": "string"
                },
                "sequencing_mode": {
                    "description": "stream sequencing mode for this endpoint",
                    "enum": [
                        "sequenced",
                        "unsequenced"
                    ],
                    "type": "string",
                    "default": null
                },
                "tls_enabled": {
                    "description": "Whether TLS is enabled",
                    "type": "boolean",
                    "default": false
                },
                "tls_bypass_validation": {
                    "description": "Whether to bypass TLS chain of trust validation procedures",
                    "type": "boolean",
                    "default": false
                },
                "tls_trusted_certificate_ids": {
                    "description": "List of IDs of trusted certificate records",
                    "type": "array",
                    "items": {
                        "title": "ID",
                        "description": "ID of certificate record",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^[a-zA-Z0-9_-]+$"
                    },
                    "uniqueItems": true,
                    "default": []
                }
            },
            "required": [
                "hostname",
                "port",
                "protocol",
                "streaming_type"
            ],
            "additionalProperties": true
        },
        "PostApiStreamingConfigResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of this object",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiSystemAgentProfilesProfileIdAssignRequest": {
            "type": "object",
            "properties": {
                "system_agents": {
                    "description": "List of system-agents to which profile needs to be assigned",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9._-]+$"
                    }
                },
                "clear_packages": {
                    "description": "True means clear packages in the user-config as part of assign operation",
                    "type": "boolean",
                    "default": false
                },
                "clear_open_options": {
                    "description": "True means clear open-options in the user-config as part of assign operation",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "system_agents"
            ]
        },
        "PostApiSystemAgentProfilesRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique ID of the system agent profile. If not given, one is generated automatically",
                    "type": "string",
                    "minLength": 1,
                    "default": null
                },
                "label": {
                    "description": "Descriptive name of the system agent profile",
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Set of key value pairs that are passed to the device entry point in the package corresponding to platform",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "platform": {
                    "description": "Device platform name. Corresponds to the OS family value in HCL entries",
                    "type": "string",
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages needed",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "PostApiSystemAgentsAgentIdDosUpgradeRequest": {
            "type": "object",
            "properties": {
                "image_id": {
                    "description": "ID of the device OS image that devices are upgraded to",
                    "type": "string"
                }
            },
            "required": [
                "image_id"
            ],
            "additionalProperties": false
        },
        "PostApiSystemAgentsRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label for the system agent",
                    "type": "string",
                    "default": null
                },
                "management_ip": {
                    "description": "IP address or hostname of the managed system. This is the address to which the system agent connects to interact with the managed system",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                },
                "agent_type": {
                    "description": "Indicates if agent to manage the device is running locally on the device (onbox) or remotely on the AOS controller (offbox)",
                    "enum": [
                        "offbox",
                        "onbox"
                    ],
                    "type": "string"
                },
                "operation_mode": {
                    "description": "AOS agent operation mode, including full_control and telemetry_only. Note: telemetry_only mode is deprecated for both onbox and offbox. Any request with telemetry_only mode for onbox will be rejected. Default value is full_control",
                    "enum": [
                        "full_control",
                        "telemetry_only"
                    ],
                    "type": "string",
                    "default": "full_control"
                },
                "profile": {
                    "description": "System agent profile ID. The system agent profile provides various operational parameters for the system agent: username, password, platform, open_options, packages. These parameters may be overridden by values specific to the system agent while configuring the agent",
                    "type": "string",
                    "default": null
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system. When configuring a system agent, username must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system. When configuring a system agent, password must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Specific options used by the device driver when it attempts to open a connection to the device. When configuring a system agent, option_options may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "platform": {
                    "description": "Device platform name corresponding to the OS family in hardware compatibility list entries. When configuring a system agent, platform must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages installed in the system agent runtime environment. When configuring a system agent, packages may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                },
                "force_package_install": {
                    "description": "True means always reinstall packages even package is same as before. False is normal pip install behavior, i.e., will not reinstall packages with the same version",
                    "type": "boolean",
                    "default": null
                },
                "install_requirements": {
                    "description": "Deprecated field. AOS resets the field to False if set",
                    "const": false,
                    "default": null
                },
                "job_on_create": {
                    "description": "On creating system-agent, automatically trigger a job",
                    "enum": [
                        "check",
                        "install"
                    ],
                    "type": "string",
                    "default": null
                },
                "enable_monitor": {
                    "description": "If enabled, a check on device is run regularly (default 3 hours)",
                    "type": "boolean",
                    "default": null
                },
                "id": {
                    "description": "Unique ID for the system agent",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9._-]+$",
                    "default": null
                }
            },
            "required": [
                "agent_type",
                "management_ip"
            ],
            "additionalProperties": false
        },
        "PostApiSystemAgentsResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Systen agent ID",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiSystemsBatchCreateRequest": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "user_config": {
                        "type": "object",
                        "properties": {
                            "aos_hcl_model": {
                                "description": "The hardware model of the device as defined by the AOS Hardware Compatibility List (HCL)",
                                "type": "string",
                                "minLength": 1
                            },
                            "location": {
                                "description": "Information that assists the User find the physical location of the device; generally room, rack, rack-unit.This field is free-form text.",
                                "type": "string",
                                "default": null
                            },
                            "admin_state": {
                                "description": "normalIntended device state by the user. Possible values are: maintIntended device state by the user. Possible values are: decomm",
                                "enum": [
                                    "decomm",
                                    "maint",
                                    "normal"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "admin_state",
                            "aos_hcl_model"
                        ]
                    }
                },
                "required": [
                    "user_config"
                ]
            }
        },
        "PostApiSystemsBatchCreateResponse": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "description": "This value specifically identifies the device to AOS. The value is dependent on the type of device under management. For switch devices, this value is the device serial number",
                        "type": "string",
                        "minLength": 1
                    }
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TypeDump109"
                    }
                }
            },
            "required": [
                "errors",
                "ids"
            ]
        },
        "PostApiSystemsBatchDeleteRequest": {
            "type": "array",
            "items": {
                "description": "This value specifically identifies the device to AOS. The value is dependent on the type of device under management. For switch devices, this value is the device serial number",
                "type": "string",
                "minLength": 1
            },
            "uniqueItems": true
        },
        "PostApiSystemsBatchUpdateRequest": {
            "type": "object",
            "additionalProperties": {
                "description": "Device user config attributes such as location, hcl model and admin state",
                "type": "object",
                "properties": {
                    "user_config": {
                        "type": "object",
                        "properties": {
                            "aos_hcl_model": {
                                "description": "The hardware model of the device as defined by the AOS Hardware Compatibility List (HCL)",
                                "type": "string",
                                "minLength": 1
                            },
                            "location": {
                                "description": "Information that assists the User find the physical location of the device; generally room, rack, rack-unit.This field is free-form text.",
                                "type": "string",
                                "default": null
                            },
                            "admin_state": {
                                "description": "normalIntended device state by the user. Possible values are: maintIntended device state by the user. Possible values are: decomm",
                                "enum": [
                                    "decomm",
                                    "maint",
                                    "normal"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "admin_state",
                            "aos_hcl_model"
                        ]
                    }
                },
                "required": [
                    "user_config"
                ]
            }
        },
        "PostApiSystemsRequest": {
            "type": "object",
            "properties": {
                "device_key": {
                    "description": "This value specifically identifies the device to AOS. The value is dependent on the type of device under management. For switch devices, this value is the device serial number",
                    "type": "string",
                    "minLength": 1
                },
                "user_config": {
                    "type": "object",
                    "properties": {
                        "aos_hcl_model": {
                            "description": "The hardware model of the device as defined by the AOS Hardware Compatibility List (HCL)",
                            "type": "string",
                            "minLength": 1
                        },
                        "location": {
                            "description": "Information that assists the User find the physical location of the device; generally room, rack, rack-unit.This field is free-form text.",
                            "type": "string",
                            "default": null
                        },
                        "admin_state": {
                            "description": "normalIntended device state by the user. Possible values are: maintIntended device state by the user. Possible values are: decomm",
                            "enum": [
                                "decomm",
                                "maint",
                                "normal"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "admin_state",
                        "aos_hcl_model"
                    ]
                }
            },
            "required": [
                "device_key",
                "user_config"
            ]
        },
        "PostApiSystemsSystemIdCommitCheckRequest": {
            "type": "object",
            "properties": {
                "config_string": {
                    "description": "(Optional) device configuration to commit-check (arbitrary per-device format)",
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "default": null
        },
        "PostApiSystemsSystemIdPristineConfigRequest": {
            "type": "object",
            "properties": {
                "platform": {
                    "description": "Platform name for the pristine data",
                    "type": "string",
                    "default": ""
                },
                "pristine_data": {
                    "description": "List of pristine configuration files to be updated",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of the pristine configuration file",
                                "type": "string"
                            },
                            "content": {
                                "description": "Pristine config string",
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "required": [
                            "content",
                            "name"
                        ]
                    }
                },
                "force_update": {
                    "description": "Force the update of pristine configuration",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "pristine_data"
            ]
        },
        "PostApiSystemsSystemIdServicesRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the system service",
                    "type": "string"
                },
                "input": {
                    "description": "Input for the system service",
                    "type": "string",
                    "default": null
                },
                "collection_type": {
                    "description": "The type of telemetry collection, as defined by the available enumeration values",
                    "enum": [
                        "any",
                        "gRPCOnChange",
                        "gRPCPeriodic",
                        "polling"
                    ],
                    "type": "string",
                    "default": "any"
                },
                "interval": {
                    "description": "Interval in seconds at which the service should run. Must be at least 1 second",
                    "type": "number",
                    "minimum": 1,
                    "default": null
                },
                "execution_count": {
                    "description": "Number of times the service should execute. A value of -1 indicates unlimited execution",
                    "type": "integer",
                    "minimum": -1,
                    "default": null
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "title": "Ingestion filter",
                        "description": "Defines what metric keys should be reported by a collector",
                        "type": "object",
                        "additionalProperties": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "const": "any"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "const": "equals"
                                        },
                                        "value": {
                                            "$ref": "#/definitions/TypeLoad7"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "value"
                                    ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "const": "pattern"
                                        },
                                        "value": {
                                            "$ref": "#/definitions/TypeLoad7"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "value"
                                    ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "const": "range"
                                        },
                                        "value": {
                                            "type": "object",
                                            "properties": {
                                                "min": {
                                                    "$ref": "#/definitions/TypeLoad8",
                                                    "default": null
                                                },
                                                "max": {
                                                    "$ref": "#/definitions/TypeLoad8",
                                                    "default": null
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "value"
                                    ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "const": "prefix"
                                        },
                                        "value": {
                                            "type": "object",
                                            "properties": {
                                                "prefix": {
                                                    "title": "Prefix",
                                                    "description": "IPv4 or IPV6 network address, specified in the form of network/prefixlen.",
                                                    "type": "string"
                                                },
                                                "le_mask": {
                                                    "title": "More-specific prefixes mask",
                                                    "description": "Match more-specific prefixes from a parent prefix, up until le_mask prefix len. Range is 0-32 for IPv4, 0-128 for IPv6. If not specified, implies the prefix-list entry should be an exact match. This option can be optionally be used in combination with ge_mask.  le_mask must be longer than the subnetprefix length.  If le_mask and ge_mask are both specified, then le_mask must be greater than ge_mask.",
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 128
                                                },
                                                "ge_mask": {
                                                    "title": "Less-specific prefixes mask",
                                                    "description": "Match less-specific prefixes from a parent prefix, up from ge_mask to the prefix length of the route. Range is 0-32 for IPv4, 0-128 for IPv6. If not specified, implies the prefix-list entry should be an exact match. This option can be optionally be used in combination with le_mask. ge_mask must be longer than the subnet prefix length. If le_mask and  ge_mask are both specified, then le_mask must be greater than ge_mask.",
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 128
                                                }
                                            },
                                            "required": [
                                                "prefix"
                                            ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "value"
                                    ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    },
                    "default": []
                }
            },
            "required": [
                "name"
            ]
        },
        "PostApiTelemetryCollectorsRequest": {
            "type": "object",
            "properties": {
                "service_name": {
                    "description": "Service name",
                    "type": "string"
                },
                "collectors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "type": "object",
                                "properties": {
                                    "os_type": {
                                        "enum": [
                                            "junos",
                                            "junos_evo"
                                        ],
                                        "type": "string"
                                    },
                                    "os_version": {
                                        "description": "os version",
                                        "type": "string"
                                    },
                                    "family": {
                                        "description": "schema family",
                                        "type": "string"
                                    },
                                    "model": {
                                        "title": "model pattern",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "family",
                                    "os_type",
                                    "os_version"
                                ]
                            },
                            "source_type": {
                                "enum": [
                                    "cli"
                                ],
                                "type": "string"
                            },
                            "cli": {
                                "description": "cli command text",
                                "type": "string"
                            },
                            "query": {
                                "type": "object",
                                "properties": {
                                    "accessors": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "xpath of the element",
                                            "type": "string"
                                        }
                                    },
                                    "keys": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/definitions/TypeLoad9"
                                        }
                                    },
                                    "values": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/definitions/TypeLoad9"
                                        }
                                    },
                                    "filter": {
                                        "description": "expression to be evaluated on keys and/or value, returning true if entry should be accepted",
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "required": [
                                    "accessors",
                                    "keys",
                                    "values"
                                ]
                            },
                            "relaxed_schema_validation": {
                                "description": "relaxed RPC schema validation check",
                                "type": "boolean",
                                "default": null
                            }
                        },
                        "required": [
                            "cli",
                            "platform",
                            "query",
                            "source_type"
                        ]
                    }
                },
                "relaxed_schema_validation": {
                    "description": "relax RPC schema validation check",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "collectors",
                "service_name"
            ]
        },
        "PostApiTelemetryCollectorsResponse": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string"
                }
            },
            "required": [
                "service_name"
            ]
        },
        "PostApiTelemetryFetchcmdRequest": {
            "type": "object",
            "properties": {
                "system_id": {
                    "description": "Id of the system on which to execute the command",
                    "type": "string"
                },
                "command_text": {
                    "description": "Command to execute on the system",
                    "type": "string"
                },
                "output_format": {
                    "description": "Format of the command output",
                    "enum": [
                        "json",
                        "text",
                        "xml"
                    ],
                    "type": "string",
                    "default": "text"
                }
            },
            "required": [
                "command_text",
                "system_id"
            ]
        },
        "PostApiTelemetryFetchcmdRequestIdQueryRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "object",
                    "properties": {
                        "accessors": {
                            "type": "object",
                            "additionalProperties": {
                                "description": "xpath of the element",
                                "type": "string"
                            }
                        },
                        "keys": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/TypeLoad6"
                            }
                        },
                        "values": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/TypeLoad6"
                            }
                        },
                        "filter": {
                            "description": "expression to be evaluated on keys and/or value, returning true if entry should be accepted",
                            "type": "string",
                            "default": ""
                        }
                    },
                    "required": [
                        "accessors",
                        "keys",
                        "values"
                    ]
                },
                "keep": {
                    "description": "Keep response for later reuse, for a limited time",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "query"
            ]
        },
        "PostApiTelemetryFetchcmdRequestIdQueryResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "description": "success - device's command shell accepted executing the command; commandShellError - attempt was made to execute the command on device, but the device's command shell returned an error  (eg: syntax error); processingError - error occured while processing the command (eg: command type validation, too many pending requests)",
                    "enum": [
                        "commandShellError",
                        "processingError",
                        "success"
                    ],
                    "type": "string"
                },
                "error_message": {
                    "type": "string",
                    "default": null
                },
                "query_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {},
                        "maxProperties": 0
                    },
                    "default": null
                }
            },
            "required": [
                "result"
            ]
        },
        "PostApiTelemetryFetchcmdRequestIdValidateRequest": {
            "type": "object",
            "properties": {
                "os_type": {
                    "enum": [
                        "junos",
                        "junos_evo"
                    ],
                    "type": "string"
                },
                "os_version": {
                    "description": "os version",
                    "type": "string"
                },
                "family": {
                    "description": "schema family",
                    "type": "string"
                },
                "cmd": {
                    "description": "cli command text",
                    "type": "string"
                },
                "keep": {
                    "description": "Keep response for later reuse, for a limited time",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "cmd",
                "family",
                "os_type",
                "os_version"
            ]
        },
        "PostApiTelemetryFetchcmdRequestIdValidateResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "description": "success - device's command shell accepted executing the command; commandShellError - attempt was made to execute the command on device, but the device's command shell returned an error  (eg: syntax error); processingError - error occured while processing the command (eg: command type validation, too many pending requests)",
                    "enum": [
                        "commandShellError",
                        "processingError",
                        "success"
                    ],
                    "type": "string"
                },
                "error_message": {
                    "type": "string",
                    "default": null
                },
                "output_fields": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TypeDump58"
                    }
                },
                "schema_fields_present": {
                    "$ref": "#/definitions/TypeDump58"
                },
                "schema_fields_not_present": {
                    "$ref": "#/definitions/TypeDump58"
                }
            },
            "required": [
                "output_fields",
                "result",
                "schema_fields_not_present",
                "schema_fields_present"
            ]
        },
        "PostApiTelemetryFetchcmdResponse": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string"
                }
            },
            "required": [
                "request_id"
            ]
        },
        "PostApiTelemetryFlowDataCollectorsRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "description": "IP address or hostname of flow data collector",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                },
                "label": {
                    "description": "Name of the flow data collector",
                    "type": "string"
                },
                "ssh_username": {
                    "description": "Username used to authenticate with flow data collector",
                    "type": "string",
                    "minLength": 1
                },
                "ssh_password": {
                    "description": "Password used to authenticate with flow data collector",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "label",
                "management_ip",
                "ssh_password",
                "ssh_username"
            ]
        },
        "PostApiTelemetryServiceRegistryRequest": {
            "type": "object",
            "properties": {
                "service_name": {
                    "description": "Name of the service",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^[^\\s/+#^\\[\\]{}\"\\\\<>?]+$"
                },
                "application_schema": {
                    "description": "Schema for each data unit returned by the collector. Represented using Json Schema draft 4 version",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "storage_schema_path": {
                    "description": "File system path to Python module with storage schemadefinition. Definition is made using lollipop Python Package",
                    "enum": [
                        "aos.sdk.telemetry.schemas.generic",
                        "aos.sdk.telemetry.schemas.graph",
                        "aos.sdk.telemetry.schemas.iba_data",
                        "aos.sdk.telemetry.schemas.iba_integer_data",
                        "aos.sdk.telemetry.schemas.iba_string_data"
                    ],
                    "type": "string",
                    "default": "aos.sdk.telemetry.schemas.generic"
                },
                "version": {
                    "description": "Represents the application schema version",
                    "type": "string",
                    "default": "version_0"
                },
                "description": {
                    "description": "Service description",
                    "type": "string",
                    "default": ""
                }
            },
            "required": [
                "application_schema",
                "service_name"
            ]
        },
        "PostApiTelemetryServiceRegistryResponse": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string"
                }
            },
            "required": [
                "service_name"
            ]
        },
        "PostApiUserLoginRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^[a-zA-Z0-9@._-]*$"
                },
                "password": {
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "password",
                "username"
            ]
        },
        "PostApiUserLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "Session token. Provide it in AuthToken header for following requests",
                    "type": "string"
                },
                "id": {
                    "description": "The user ID",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "token"
            ]
        },
        "PostApiVersionsDeviceRequest": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "The version of the device software.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "serial_number": {
                    "description": "The unique serial number of the device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "platform": {
                    "description": "The hardware or software platform of the device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "checksum": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                }
            },
            "required": [
                "platform",
                "serial_number",
                "version"
            ]
        },
        "PostApiVersionsDeviceResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The status of the version check, indicating whether the device version is compatible or not.",
                    "enum": [
                        "Incompatible",
                        "OK"
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "An optional URL providing more information or updates related to the version check.",
                    "type": "string",
                    "default": null
                },
                "chksum": {
                    "description": "An optional checksum for the version data provided in the response.",
                    "type": "string",
                    "default": null
                },
                "retry_timeout": {
                    "description": "The optional timeout period in seconds before retrying the version check.",
                    "type": "integer",
                    "default": null
                }
            },
            "required": [
                "status"
            ]
        },
        "PostApiVersionsIbaRequest": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Version reported by IBA unit",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "system_id": {
                    "description": "AOS system id of the IBA unit",
                    "type": "string"
                }
            },
            "required": [
                "system_id",
                "version"
            ]
        },
        "PostApiVersionsNodeRequest": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Version reported by Node",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "system_id": {
                    "description": "Identifier for the cluster node",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9_-]+$"
                },
                "ip_address": {
                    "description": "Management IP of the cluster node",
                    "type": "string"
                }
            },
            "required": [
                "ip_address",
                "system_id",
                "version"
            ]
        },
        "PostApiVersionsNodeResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the version check",
                    "enum": [
                        "ConflictingNodeId",
                        "Incompatible",
                        "OK"
                    ],
                    "type": "string"
                },
                "retry_timeout": {
                    "description": "Interval after which version check should be redone",
                    "type": "integer",
                    "default": null
                }
            },
            "required": [
                "status"
            ]
        },
        "PostApiVirtualInfraManagersManagerIdVcentersRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Agent ID of vcenter",
                    "type": "string",
                    "default": null
                },
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10"
                },
                "username": {
                    "$ref": "#/definitions/TypeLoad11"
                },
                "password": {
                    "$ref": "#/definitions/TypeLoad12"
                }
            },
            "required": [
                "management_ip",
                "password",
                "username"
            ]
        },
        "PostApiVirtualInfraManagersManagerIdVcentersResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiVirtualInfraManagersRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10"
                },
                "virtual_infra_type": {
                    "description": "Virtual infra manager type",
                    "enum": [
                        "nsx",
                        "vcenter"
                    ],
                    "type": "string"
                },
                "username": {
                    "$ref": "#/definitions/TypeLoad11"
                },
                "password": {
                    "$ref": "#/definitions/TypeLoad12"
                },
                "vcenter_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "management_ip": {
                                "$ref": "#/definitions/TypeLoad10"
                            },
                            "username": {
                                "$ref": "#/definitions/TypeLoad11"
                            },
                            "password": {
                                "$ref": "#/definitions/TypeLoad12"
                            }
                        },
                        "required": [
                            "management_ip",
                            "password",
                            "username"
                        ]
                    },
                    "default": null
                },
                "id": {
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "management_ip",
                "password",
                "username",
                "virtual_infra_type"
            ]
        },
        "PostApiVirtualInfraManagersResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Agent ID of the virtual infra manager",
                    "type": "string"
                },
                "vcenter_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "management_ip": {
                                "description": "IP address or hostname of the vcenter",
                                "type": "string"
                            },
                            "id": {
                                "description": "Agent ID of the vcenter",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "management_ip"
                        ]
                    },
                    "default": null
                }
            },
            "required": [
                "id"
            ]
        },
        "PostApiZtpCreateAgentRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label for the system agent",
                    "type": "string",
                    "default": null
                },
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10"
                },
                "agent_type": {
                    "description": "Indicates if agent to manage the device is running locally on the device (onbox) or remotely on the AOS controller (offbox)",
                    "enum": [
                        "offbox",
                        "onbox"
                    ],
                    "type": "string"
                },
                "operation_mode": {
                    "description": "AOS agent operation mode, including full_control and telemetry_only. Note: telemetry_only mode is deprecated for both onbox and offbox. Any request with telemetry_only mode for onbox will be rejected. Default value is full_control",
                    "enum": [
                        "full_control",
                        "telemetry_only"
                    ],
                    "type": "string",
                    "default": "full_control"
                },
                "profile": {
                    "description": "System agent profile ID. The system agent profile provides various operational parameters for the system agent: username, password, platform, open_options, packages. These parameters may be overridden by values specific to the system agent while configuring the agent",
                    "type": "string",
                    "default": null
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system. When configuring a system agent, username must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system. When configuring a system agent, password must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Specific options used by the device driver when it attempts to open a connection to the device. When configuring a system agent, option_options may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "platform": {
                    "description": "Device platform name corresponding to the OS family in hardware compatibility list entries. When configuring a system agent, platform must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages installed in the system agent runtime environment. When configuring a system agent, packages may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                },
                "force_package_install": {
                    "description": "True means always reinstall packages even package is same as before. False is normal pip install behavior, i.e., will not reinstall packages with the same version",
                    "type": "boolean",
                    "default": null
                },
                "install_requirements": {
                    "description": "Deprecated field. AOS resets the field to False if set",
                    "const": false,
                    "default": null
                },
                "job_on_create": {
                    "description": "On creating system-agent, automatically trigger a job",
                    "enum": [
                        "check",
                        "install"
                    ],
                    "type": "string",
                    "default": null
                },
                "enable_monitor": {
                    "description": "If enabled, a check on device is run regularly (default 3 hours)",
                    "type": "boolean",
                    "default": null
                },
                "id": {
                    "description": "Unique ID for the system agent",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9._-]+$",
                    "default": null
                }
            },
            "required": [
                "agent_type",
                "management_ip"
            ],
            "additionalProperties": false
        },
        "PostApiZtpDeviceRequest": {
            "type": "object",
            "properties": {
                "ip_addr": {
                    "description": "Leased IP address from the DHCP Server",
                    "type": "string"
                },
                "system_id": {
                    "description": "System ID of the device",
                    "type": "string"
                },
                "task": {
                    "description": "The latest task reported by the device",
                    "type": "string",
                    "default": null
                },
                "last_log": {
                    "description": "The last log posted into the ztp log file",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "ip_addr",
                "system_id"
            ]
        },
        "PostApiZtpDeviceResponse": {
            "type": "object",
            "properties": {
                "ip_addr": {
                    "description": "Leased IP address from the DHCP Server",
                    "type": "string"
                }
            },
            "required": [
                "ip_addr"
            ]
        },
        "PostApiZtpServiceRequest": {
            "type": "object",
            "properties": {
                "service": {
                    "description": "The ZTP service name",
                    "type": "string"
                },
                "ip_addr": {
                    "description": "IP Address of the ztp service",
                    "type": "string"
                },
                "status": {
                    "description": "ZTP service status",
                    "enum": [
                        "down",
                        "up"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "ip_addr",
                "service"
            ]
        },
        "PostApiZtpServiceResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "description": "The ZTP service name",
                    "type": "string"
                }
            },
            "required": [
                "service"
            ]
        },
        "PutApiAaaGroupRoleMappingsRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "provider_group": {
                                "description": "Role name on remote side",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32
                            },
                            "aos_role": {
                                "description": "Role name on local side",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32
                            }
                        },
                        "required": [
                            "aos_role",
                            "provider_group"
                        ]
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "PutApiAaaPasswordComplexityRequest": {
            "type": "object",
            "properties": {
                "validators": {
                    "type": "object",
                    "properties": {
                        "regex_list": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "regex": {
                                        "description": "Regular expression that will be used to validate password",
                                        "type": "string"
                                    },
                                    "error_message": {
                                        "description": "Error message that will be shown if password doesn't suit regex",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 512
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "enabled",
                                    "error_message",
                                    "regex"
                                ]
                            }
                        },
                        "no_username": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "enabled"
                            ]
                        },
                        "no_repeat": {
                            "type": "object",
                            "properties": {
                                "allowed_length": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "allowed_length",
                                "enabled"
                            ]
                        },
                        "no_alphanumeric": {
                            "type": "object",
                            "properties": {
                                "allowed_length": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "allowed_length",
                                "enabled"
                            ]
                        },
                        "no_adjacent": {
                            "type": "object",
                            "properties": {
                                "allowed_length": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "allowed_length",
                                "enabled"
                            ]
                        }
                    },
                    "required": [
                        "no_adjacent",
                        "no_alphanumeric",
                        "no_repeat",
                        "no_username",
                        "regex_list"
                    ],
                    "default": null
                },
                "password_history_size": {
                    "description": "Number of last used passwords that are forbidden to reuse. 0 means all passwords are allowed to reuse.",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "default": null
                },
                "days_until_password_expires": {
                    "description": "The amount of days that password may be used without changing.0 means passwords do not expire.",
                    "type": "integer",
                    "minimum": 0,
                    "default": null
                }
            }
        },
        "PutApiAaaProvidersProviderIdRequest": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "active": {
                    "description": "Activate this provider. Default: False. Only one provider can be active, activating this provider will deactivate others.",
                    "type": "boolean",
                    "default": null
                },
                "hostname_fqdn_ip": {
                    "description": "The fully qualified domain name (FQDN) or IP address of the LDAP server. If the first server cannot be reached, connections to succeeding ones are attempted in order.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "encryption": {
                    "description": "LDAP encryption mode. The permitted values are: None, SSL/TLS, or STARTTLS. Default: None",
                    "enum": [
                        "None",
                        "SSL/TLS",
                        "STARTTLS"
                    ],
                    "type": "string",
                    "default": null
                },
                "port": {
                    "title": "Port",
                    "description": "A single integer port number in range 1-65535",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                },
                "groups_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Groups Organizational Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "users_search_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the RBAC Users Organization Unit (OU)",
                    "type": "string",
                    "default": null
                },
                "bind_dn": {
                    "description": "The LDAP Distinguished Name (DN) path for the active server user that the Apstra server will connect",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "The LDAP server user password for Apstra server to connect ",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "shared_key": {
                    "description": "Shared key. RADIUS or TACACS+ Only",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "auth_mode": {
                    "description": "Auth mode. The permitted values are: PAP, CHAP, or ASCII. TACACS+ Only. Default: ASCII",
                    "enum": [
                        "ASCII",
                        "CHAP",
                        "PAP"
                    ],
                    "type": "string",
                    "default": null
                },
                "ca_cert": {
                    "description": "CA cert to use with STARTTLS or SSL/TLS encryption. LDAP only",
                    "type": "string",
                    "pattern": "(-----BEGIN CERTIFICATE-----[a-zA-Z0-9/+\\n\\r#,+\"<>=;]+-----END CERTIFICATE-----)",
                    "default": null
                },
                "is_verify_cert": {
                    "description": "Validate peer cert chain and host name. LDAP Only. Default: False",
                    "type": "boolean",
                    "default": null
                },
                "timeout": {
                    "description": "This will be used for both network timeout and operation timeout. Default: 30 secs",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 120,
                    "default": 30
                },
                "query_scope": {
                    "description": "This will be used to control the scope level of data presented (search only the first level or search an entire sub-tree). LDAP Only. Default: sub_tree",
                    "enum": [
                        "one_level",
                        "sub_tree"
                    ],
                    "type": "string",
                    "default": null
                },
                "user_object_class_attribute_name": {
                    "description": "User Object class. LDAP Only. Default: inetOrgPerson",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_firstname_attribute_name": {
                    "description": "User Firstname. LDAP Only. Default: givenName",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_lastname_attribute_name": {
                    "description": "User Lastname. LDAP Only. Default: sn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_email_attribute_name": {
                    "description": "User Email. LDAP Only. Default: mail",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_search_attribute_name": {
                    "description": "User Search Field. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "user_member_attribute_name": {
                    "description": "User Member Attribute. LDAP Only. Default: memberOf",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "username_attribute_name": {
                    "description": "User Name Attribute. LDAP Only. Default: uid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_object_class_attribute_name": {
                    "description": "Group Object class. LDAP Only. Default: posixGroup",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_name_attribute_name": {
                    "description": "Group Name Field. LDAP and RADIUS Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_search_attribute_name": {
                    "description": "Group Search Field. LDAP Only. Default: cn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_attribute_name": {
                    "description": "Group Member User Attribute. LDAP Only. Default: entryDn",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_member_mapping_attribute_name": {
                    "description": "Group Member Mapping Attribute. LDAP Only. Default: memberUid",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "group_dn_attribute_name": {
                    "description": "Group DN Field. LDAP Only. Default: entryDN",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "default": null
                },
                "vendor": {
                    "description": "Vendor type. The permitted values are: LDAP, AD, RADIUS or TACACS+Default: LDAP",
                    "enum": [
                        "AD",
                        "LDAP",
                        "RADIUS",
                        "TACACS+"
                    ],
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "hostname_fqdn_ip",
                "port"
            ]
        },
        "PutApiAaaRolesRoleIdRequest": {
            "type": "object",
            "properties": {
                "permissions": {
                    "description": "Global permissions act all-over AOS and all blueprints.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": null
                },
                "granular_permissions": {
                    "description": "Granular permissions act only inside a blueprint or a set of blueprints.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "description": "Defines for which blueprints and tenants these permissions take effect. Examples are \"blueprint_id in [any]\", \"blueprint_id in ['bp_id'], \"blueprint_id in ['bp_id'] and tenant in ['tenant_label']\"",
                                "type": "string",
                                "minLength": 1
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "permissions",
                            "scope"
                        ]
                    },
                    "default": null
                },
                "description": {
                    "type": "string",
                    "default": null
                }
            }
        },
        "PutApiAaaUsersTargetUserIdChangePasswordRequest": {
            "type": "object",
            "properties": {
                "current_password": {
                    "type": "string",
                    "default": null
                },
                "new_password": {
                    "description": "New user password. Password requirements can be changed by administrator. Call GET /aaa/password_complexity to view current password requirements.",
                    "type": "string"
                }
            },
            "required": [
                "new_password"
            ]
        },
        "PutApiAaaUsersTargetUserIdRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 32
                },
                "last_name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 32
                },
                "email": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 64
                },
                "roles": {
                    "description": "A list of role names defining the set of user permissions. The user is allowed to perform an action if at least one role has suitable permission.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    }
                },
                "is_active": {
                    "description": "Activates or deactivates user account. If current deactivate_at is in the past and new deactivate_at is not explicitly provided, setting is_active to true resets deactivate_at to its default value.",
                    "type": "boolean"
                }
            },
            "required": [
                "email",
                "first_name",
                "is_active",
                "last_name",
                "roles"
            ]
        },
        "PutApiAaaUsersTargetUserIdRolesRequest": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    }
                }
            },
            "required": [
                "roles"
            ]
        },
        "PutApiBlueprintsBlueprintIdArcaArcaIdRequest": {
            "type": "object",
            "properties": {
                "trigger_period": {
                    "description": "Time between executions of this ARCA instance (seconds)",
                    "type": "number",
                    "minimum": 10.0
                }
            },
            "required": [
                "trigger_period"
            ]
        },
        "PutApiBlueprintsBlueprintIdDeployRequest": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "version"
            ]
        },
        "PutApiBlueprintsBlueprintIdProbesProbeIdRequest": {
            "description": "Represents an analytics graph which consists of a set of processors which are connected through stages. One processor can consume one or more outputs (stages) of other processor(s). Some processors, called source processors, initiate collection of telemetry data from devices. Other processors (typically perform processing) aggregate and calculation the output of input stages providing other stages.",
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name provided by a user.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 120
                },
                "description": {
                    "description": "Description provided by a user.",
                    "type": "string",
                    "default": ""
                },
                "disabled": {
                    "description": "When disabled, probe does not provide any data, and does not use resources.",
                    "type": "boolean",
                    "default": false
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad2"
                },
                "processors": {
                    "description": "A set of processors",
                    "type": "array",
                    "items": {
                        "description": "Represents a single step of data processing in an analytics graph.",
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name of a processor",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 120
                            },
                            "type": {
                                "description": "Name of a processor type.",
                                "type": "string",
                                "minLength": 1
                            },
                            "properties": {
                                "description": "Represents a set of processor specific configuration.",
                                "type": "object",
                                "additionalProperties": {},
                                "maxProperties": 0,
                                "default": {}
                            },
                            "inputs": {
                                "description": "A dictionary which allows to specify names of other stages as inputs for the given stage by associating input names with the stage names, where keys are names of inputs which are defined for a particular processor type, values are names of input stages and the column names from that stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "stage": {
                                            "description": "The name of the input stage.",
                                            "type": "string"
                                        },
                                        "column": {
                                            "description": "The name of the input column.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "stage"
                                    ],
                                    "additionalProperties": false
                                },
                                "default": {}
                            },
                            "outputs": {
                                "description": "A dictionary which allows to specify names of other stages as outputs for the given stage by associating output names with the stage names, where keys are names of outputs which are defined for a particular processor type, values are names of output stages.",
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "default": {}
                            },
                            "stages": {
                                "description": "Set of stages (DEPRECATED, use the top-level \"stages\" element instead)",
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/TypeLoad3"
                                },
                                "default": null
                            }
                        },
                        "required": [
                            "name",
                            "type"
                        ],
                        "additionalProperties": false
                    },
                    "minItems": 1
                },
                "stages": {
                    "description": "Set of stages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeLoad3"
                    },
                    "default": null
                }
            },
            "required": [
                "label",
                "processors",
                "tags"
            ],
            "additionalProperties": false
        },
        "PutApiBlueprintsBlueprintIdRevisionsMaxMostRecentRequest": {
            "type": "object",
            "properties": {
                "new_max_most_recent_revisions": {
                    "description": "New maximum number of revisions automatically saved by AOS",
                    "type": "integer"
                },
                "retire_excess_revisions": {
                    "description": "This flag controls the behavior in case the number of automatically-saved revisions is greater than the new limit. If this flag is set, revisions that are recent are retired until the new limit can be satisfied, and so unsaved recent revisions may be deleted. If there are unsaved recent revisions that would be deleted but this flag is not set, the request results in an error.",
                    "type": "boolean"
                },
                "skip_resource_validation": {
                    "description": "Resource validation is the process of looking at the current resource usage, making an educated guess about what resources AOS would need to support the new limit, and refusing the request if the available resources are insufficient. Skipping this validation step increases the chance that AOS will run out of resources sometime later.",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "new_max_most_recent_revisions",
                "retire_excess_revisions"
            ]
        },
        "PutApiClusterApplicationWeightRequest": {
            "type": "object",
            "properties": {
                "offbox": {
                    "$ref": "#/definitions/TypeLoad1"
                },
                "iba": {
                    "$ref": "#/definitions/TypeLoad1"
                },
                "apstra_edge": {
                    "$ref": "#/definitions/TypeLoad1"
                }
            },
            "required": [
                "apstra_edge",
                "iba",
                "offbox"
            ]
        },
        "PutApiClusterApstraEdgeRequest": {
            "type": "object",
            "properties": {
                "registration_key": {
                    "description": "The registration key of the apstra-edge registered in the PAPI/UI.",
                    "type": "string"
                },
                "cloud_term": {
                    "description": "The hostname of the cloud endpoint, EPTerm.",
                    "type": "string"
                },
                "image_name": {
                    "description": "The name of the Apstra Edge container image in the form ``apstra-edge:<version>``.",
                    "type": "string",
                    "pattern": "^apstra-edge:[a-zA-Z0-9._-]+$",
                    "default": "apstra-edge:0.19.0"
                },
                "cpus": {
                    "description": "Specify how much of the available CPU resources a container can use.",
                    "type": "number",
                    "minimum": 0.0,
                    "default": 0.5
                },
                "cpu_shares": {
                    "description": "Set this to a value greater or less than the default of 1024 to increase or reduce the container's weight, and give it access to a greater or lesser proportion of the host machine's CPU cycles.",
                    "type": "integer",
                    "minimum": 2,
                    "default": 1024
                },
                "memory_limit": {
                    "description": "Memory limit. Accepts string with a units identification char (\"100000B\", \"1000KB\", \"128MB\", \"1GB\"). If a string is specified without a units character, bytes are assumed as an intended unit.",
                    "type": "string",
                    "default": "512MB"
                },
                "environment_variables": {
                    "description": "Environment variables for the Apstra Edge container.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": {}
                }
            },
            "required": [
                "cloud_term",
                "registration_key"
            ],
            "additionalProperties": false
        },
        "PutApiClusterNodesNodeIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Name of the AOS cluster node",
                    "type": "string",
                    "default": null
                },
                "username": {
                    "description": "Username to access the AOS cluster node",
                    "type": "string"
                },
                "password": {
                    "description": "Password to access the AOS cluster node",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags applicable for the cluster node",
                    "type": "array",
                    "items": {
                        "enum": [
                            "iba",
                            "offbox"
                        ],
                        "type": "string"
                    },
                    "default": [
                        "offbox",
                        "iba"
                    ]
                }
            },
            "required": [
                "password",
                "username"
            ]
        },
        "PutApiClusterOperationModeRequest": {
            "type": "object",
            "properties": {
                "operation_mode": {
                    "$ref": "#/definitions/TypeLoad",
                    "default": null
                },
                "profile": {
                    "$ref": "#/definitions/TypeLoad",
                    "default": null
                },
                "description": {
                    "description": "\"profile\" has higher precedence over \"operation_mode\" in case values are provided for both the fields. Note: \"operation_mode\" field is deprecated and will be removed in the future releases of Apstra",
                    "type": "string",
                    "default": null
                }
            }
        },
        "PutApiDesignConfigTemplatesIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "The name of the template. This name will be included in template loaderso user can refer to it with \"include\" stanzas. This name mustcontain only ASCII characters (+ underscore and dash) and be max 64 character long. Also, it has to have a file extension of .jinja",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "text": {
                    "description": "Configuration Jinja2 template",
                    "type": "string"
                }
            },
            "required": [
                "label",
                "text"
            ]
        },
        "PutApiDesignGraphQueriesIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label of the query",
                    "type": "string"
                },
                "query": {
                    "description": "QE-syntax expression",
                    "type": "string"
                }
            },
            "required": [
                "label",
                "query"
            ]
        },
        "PutApiDesignTagsIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Tag name, case-insensitive, must be unique across all tags",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "pattern": "^(\\S+(\\s+\\S+)*)*$"
                },
                "description": {
                    "description": "Optional field to add any details",
                    "type": "string"
                }
            },
            "required": [
                "label"
            ]
        },
        "PutApiPlatformSupportSsrnRequest": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "Juniper Apstra Software Support Reference Number (SSRN)",
                    "type": "string",
                    "maxLength": 50
                }
            },
            "required": [
                "value"
            ]
        },
        "PutApiPropertySetsPropertySetIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "New label for the property set",
                    "type": "string"
                },
                "values": {
                    "description": "Updated JSON representation of property set values",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0,
                    "default": null
                },
                "values_yaml": {
                    "description": "Updated YAML representation of property set values",
                    "type": "string",
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "PutApiResourcesAsnPoolsIdRequest": {
            "title": "AsnPoolModifySchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of ASN ranges",
                    "type": "array",
                    "items": {
                        "title": "AsnRange",
                        "description": "range of AS numbers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First ASN in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            },
                            "last": {
                                "description": "Last ASN in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PutApiResourcesIntegerPoolsIdRequest": {
            "title": "IntegerPoolModifySchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of integer ranges",
                    "type": "array",
                    "items": {
                        "title": "IntegerRange",
                        "description": "range of integers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First integer in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            },
                            "last": {
                                "description": "Last integer in range (inclusive)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 4294967295
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PutApiResourcesIpPoolsIdRequest": {
            "title": "IP PoolModifySchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "subnets": {
                    "description": "List of IP subnets",
                    "type": "array",
                    "items": {
                        "title": "Ipv4Network",
                        "description": "An IPv4 network (with status)",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "network": {
                                "description": "CIDR notation of IPv4 subnet",
                                "type": "string"
                            }
                        },
                        "required": [
                            "network",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "display_name",
                "subnets",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PutApiResourcesIpv6PoolsIdRequest": {
            "title": "IPv6 PoolModifySchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "subnets": {
                    "description": "List of IP subnets",
                    "type": "array",
                    "items": {
                        "title": "Ipv6Network",
                        "description": "An IPv6 network (with status)",
                        "type": "object",
                        "properties": {
                            "network": {
                                "description": "CIDR notation of IPv6 subnet",
                                "type": "string"
                            }
                        },
                        "required": [
                            "network"
                        ]
                    }
                }
            },
            "required": [
                "display_name",
                "subnets"
            ]
        },
        "PutApiResourcesVlanPoolsIdRequest": {
            "title": "VlanPoolModifySchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of integer ranges",
                    "type": "array",
                    "items": {
                        "title": "VlanRange",
                        "description": "range of Vlans",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First VLAN in this range, inclusive",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4095
                            },
                            "last": {
                                "description": "Last VLAN in this range, inclusive",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 4095
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PutApiResourcesVniPoolsIdRequest": {
            "title": "VniPoolModifySchema",
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "Display name of logical device.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "description": "This field is currently unused.",
                        "type": "string",
                        "minLength": 1
                    },
                    "default": []
                },
                "total": {
                    "$ref": "#/definitions/TypeLoad38"
                },
                "used": {
                    "$ref": "#/definitions/TypeLoad39"
                },
                "used_percentage": {
                    "$ref": "#/definitions/TypeLoad40"
                },
                "ranges": {
                    "description": "List of VNI ranges",
                    "type": "array",
                    "items": {
                        "title": "VniRange",
                        "description": "range of VNIs numbers",
                        "type": "object",
                        "properties": {
                            "total": {
                                "$ref": "#/definitions/TypeLoad38"
                            },
                            "used": {
                                "$ref": "#/definitions/TypeLoad39"
                            },
                            "used_percentage": {
                                "$ref": "#/definitions/TypeLoad40"
                            },
                            "first": {
                                "description": "First VNI in this range, inclusive",
                                "type": "integer",
                                "minimum": 4096,
                                "maximum": 16777214
                            },
                            "last": {
                                "description": "Last VNI in this range, inclusive",
                                "type": "integer",
                                "minimum": 4096,
                                "maximum": 16777214
                            }
                        },
                        "required": [
                            "first",
                            "last",
                            "total",
                            "used",
                            "used_percentage"
                        ]
                    }
                }
            },
            "required": [
                "display_name",
                "ranges",
                "total",
                "used",
                "used_percentage"
            ]
        },
        "PutApiSystemAgentProfilesProfileIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Descriptive name of the system agent profile",
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Set of key value pairs that are passed to the device entry point in the package corresponding to platform",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "platform": {
                    "description": "Device platform name. Corresponds to the OS family value in HCL entries",
                    "type": "string",
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages needed",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                }
            },
            "required": [
                "label"
            ]
        },
        "PutApiSystemAgentsAgentIdRequest": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label for the system agent",
                    "type": "string",
                    "default": null
                },
                "management_ip": {
                    "description": "IP address or hostname of the managed system. This is the address to which the system agent connects to interact with the managed system",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                    "default": null
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system. When configuring a system agent, username must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "password": {
                    "description": "Password used by system agent to authenticate with the managed system. When configuring a system agent, password must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "platform": {
                    "description": "Device platform name corresponding to the OS family in hardware compatibility list entries. When configuring a system agent, platform must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Specific options used by the device driver when it attempts to open a connection to the device. When configuring a system agent, option_options may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages installed in the system agent runtime environment. When configuring a system agent, packages may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                },
                "force_package_install": {
                    "description": "True means always reinstall packages even package is same as before. False is normal pip install behavior, i.e., will not reinstall packages with the same version",
                    "type": "boolean",
                    "default": null
                },
                "profile": {
                    "description": "System agent profile ID. The system agent profile provides various operational parameters for the system agent: username, password, platform, open_options, packages. These parameters may be overridden by values specific to the system agent while configuring the agent",
                    "type": "string",
                    "default": null
                },
                "install_requirements": {
                    "description": "Deprecated field. AOS resets the field to False if set",
                    "const": false,
                    "default": null
                },
                "operation_mode": {
                    "description": "AOS agent operation mode, including full_control and telemetry_only. Note: telemetry_only mode is deprecated for both onbox and offbox. Any request with telemetry_only mode for onbox will be rejected. Default value is full_control",
                    "enum": [
                        "full_control",
                        "telemetry_only"
                    ],
                    "type": "string",
                    "default": "full_control"
                },
                "enable_monitor": {
                    "description": "If enabled, a check on device is run regularly (default 3 hours)",
                    "type": "boolean",
                    "default": null
                }
            },
            "additionalProperties": false
        },
        "PutApiSystemsSystemIdRequest": {
            "description": "Device user config attributes such as location, hcl model and admin state",
            "type": "object",
            "properties": {
                "user_config": {
                    "type": "object",
                    "properties": {
                        "aos_hcl_model": {
                            "description": "The hardware model of the device as defined by the AOS Hardware Compatibility List (HCL)",
                            "type": "string",
                            "minLength": 1
                        },
                        "location": {
                            "description": "Information that assists the User find the physical location of the device; generally room, rack, rack-unit.This field is free-form text.",
                            "type": "string",
                            "default": null
                        },
                        "admin_state": {
                            "description": "normalIntended device state by the user. Possible values are: maintIntended device state by the user. Possible values are: decomm",
                            "enum": [
                                "decomm",
                                "maint",
                                "normal"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "admin_state",
                        "aos_hcl_model"
                    ]
                }
            },
            "required": [
                "user_config"
            ]
        },
        "PutApiTelemetryCollectorsServiceNameRequest": {
            "type": "object",
            "properties": {
                "collectors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "platform": {
                                "type": "object",
                                "properties": {
                                    "os_type": {
                                        "enum": [
                                            "junos",
                                            "junos_evo"
                                        ],
                                        "type": "string"
                                    },
                                    "os_version": {
                                        "description": "os version",
                                        "type": "string"
                                    },
                                    "family": {
                                        "description": "schema family",
                                        "type": "string"
                                    },
                                    "model": {
                                        "title": "model pattern",
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "family",
                                    "os_type",
                                    "os_version"
                                ]
                            },
                            "source_type": {
                                "enum": [
                                    "cli"
                                ],
                                "type": "string"
                            },
                            "cli": {
                                "description": "cli command text",
                                "type": "string"
                            },
                            "query": {
                                "type": "object",
                                "properties": {
                                    "accessors": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "description": "xpath of the element",
                                            "type": "string"
                                        }
                                    },
                                    "keys": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/definitions/TypeLoad9"
                                        }
                                    },
                                    "values": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/definitions/TypeLoad9"
                                        }
                                    },
                                    "filter": {
                                        "description": "expression to be evaluated on keys and/or value, returning true if entry should be accepted",
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "required": [
                                    "accessors",
                                    "keys",
                                    "values"
                                ]
                            },
                            "relaxed_schema_validation": {
                                "description": "relaxed RPC schema validation check",
                                "type": "boolean",
                                "default": null
                            }
                        },
                        "required": [
                            "cli",
                            "platform",
                            "query",
                            "source_type"
                        ]
                    }
                },
                "relaxed_schema_validation": {
                    "description": "relax RPC schema validation check",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "collectors"
            ]
        },
        "PutApiTelemetryServiceRegistryServiceNameRequest": {
            "type": "object",
            "properties": {
                "application_schema": {
                    "description": "Schema for each data unit returned by the collector. Represented using Json Schema draft 4 version",
                    "type": "object",
                    "additionalProperties": {},
                    "maxProperties": 0
                },
                "storage_schema_path": {
                    "description": "File system path to Python module with storage schemadefinition. Definition is made using lollipop Python Package",
                    "enum": [
                        "aos.sdk.telemetry.schemas.generic",
                        "aos.sdk.telemetry.schemas.graph",
                        "aos.sdk.telemetry.schemas.iba_data",
                        "aos.sdk.telemetry.schemas.iba_integer_data",
                        "aos.sdk.telemetry.schemas.iba_string_data"
                    ],
                    "type": "string",
                    "default": "aos.sdk.telemetry.schemas.generic"
                },
                "version": {
                    "description": "Represents the application schema version",
                    "type": "string",
                    "default": "version_0"
                },
                "description": {
                    "description": "Service description",
                    "type": "string",
                    "default": ""
                }
            },
            "required": [
                "application_schema"
            ]
        },
        "PutApiVirtualInfraManagersManagerIdRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10"
                },
                "username": {
                    "$ref": "#/definitions/TypeLoad11"
                },
                "password": {
                    "$ref": "#/definitions/TypeLoad12"
                },
                "vcenter_info": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "management_ip": {
                                "$ref": "#/definitions/TypeLoad10"
                            },
                            "username": {
                                "$ref": "#/definitions/TypeLoad11"
                            },
                            "password": {
                                "$ref": "#/definitions/TypeLoad12"
                            }
                        },
                        "required": [
                            "management_ip",
                            "password",
                            "username"
                        ]
                    },
                    "default": null
                }
            },
            "required": [
                "management_ip",
                "password",
                "username"
            ]
        },
        "PutApiVirtualInfraManagersManagerIdVcentersVcenterIdRequest": {
            "type": "object",
            "properties": {
                "management_ip": {
                    "$ref": "#/definitions/TypeLoad10"
                },
                "username": {
                    "$ref": "#/definitions/TypeLoad11"
                },
                "password": {
                    "$ref": "#/definitions/TypeLoad12"
                }
            },
            "required": [
                "management_ip",
                "password",
                "username"
            ]
        },
        "TypeDump": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            },
                            "default": null
                        },
                        "display_category": {
                            "type": "string"
                        },
                        "entity_type": {
                            "type": "string"
                        },
                        "error_type": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "resolutions": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "category": {
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "hint": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "required": [
                                    "category"
                                ]
                            }
                        },
                        "severity": {
                            "enum": [
                                "critical",
                                "error",
                                "warning"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "display_category",
                        "entity_type",
                        "error_type",
                        "message",
                        "resolutions",
                        "severity"
                    ]
                }
            }
        },
        "TypeDump1": {
            "description": "ID of the task, unique within blueprint scope",
            "type": "string"
        },
        "TypeDump10": null,
        "TypeDump100": {
            "type": "string"
        },
        "TypeDump101": {
            "type": "string"
        },
        "TypeDump102": {
            "type": "string"
        },
        "TypeDump103": {
            "enum": [
                "authAclDisable",
                "authAclEnable",
                "authAclRuleAdd",
                "authAclRuleDelete",
                "authAclRuleUpdate",
                "blueprintCommit",
                "blueprintDelete",
                "blueprintLock",
                "blueprintRevert",
                "blueprintRollback",
                "blueprintUnlock",
                "deviceConfigChange",
                "login",
                "logout",
                "migrationCheckpoint",
                "operationModeChangeToMaintenance",
                "operationModeChangeToNormal",
                "operationModeChangeToReadOnly",
                "ratelimitClear",
                "ratelimitExceptionAdd",
                "ratelimitExceptionDelete",
                "syslogCreate",
                "syslogDelete",
                "syslogUpdate",
                "systemChangeApiOperationModeToMaintenance",
                "systemChangeApiOperationModeToNormal",
                "userCreate",
                "userDelete",
                "userUpdate"
            ],
            "type": "string"
        },
        "TypeDump104": {
            "type": "string"
        },
        "TypeDump105": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/definitions/TypeDump100"
                },
                "user": {
                    "$ref": "#/definitions/TypeDump101"
                },
                "user_ip": {
                    "$ref": "#/definitions/TypeDump102"
                },
                "type": {
                    "$ref": "#/definitions/TypeDump103"
                },
                "result": {
                    "$ref": "#/definitions/TypeDump104"
                },
                "syslog_id": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "facility": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            },
            "required": [
                "address",
                "facility",
                "port",
                "protocol",
                "result",
                "syslog_id",
                "timestamp",
                "timezone",
                "type",
                "user",
                "user_ip"
            ]
        },
        "TypeDump106": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/definitions/TypeDump91"
                },
                "user": {
                    "$ref": "#/definitions/TypeDump92"
                },
                "user_ip": {
                    "$ref": "#/definitions/TypeDump93"
                },
                "type": {
                    "$ref": "#/definitions/TypeDump94"
                },
                "result": {
                    "$ref": "#/definitions/TypeDump95"
                }
            },
            "required": [
                "result",
                "timestamp",
                "type",
                "user",
                "user_ip"
            ]
        },
        "TypeDump107": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/definitions/TypeDump100"
                },
                "user": {
                    "$ref": "#/definitions/TypeDump101"
                },
                "user_ip": {
                    "$ref": "#/definitions/TypeDump102"
                },
                "type": {
                    "$ref": "#/definitions/TypeDump103"
                },
                "result": {
                    "$ref": "#/definitions/TypeDump104"
                },
                "subnet": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "comment",
                "result",
                "subnet",
                "timestamp",
                "type",
                "user",
                "user_ip"
            ]
        },
        "TypeDump108": null,
        "TypeDump109": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TypeDump109"
                    }
                }
            ]
        },
        "TypeDump11": {
            "type": "string"
        },
        "TypeDump110": {
            "description": "User config of the system agent",
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label for the system agent",
                    "type": "string"
                },
                "management_ip": {
                    "description": "IP address or hostname of the managed system. This is the address to which the system agent connects to interact with the managed system",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
                },
                "username": {
                    "description": "Username used by system agent to authenticate with the managed system. When configuring a system agent, username must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "platform": {
                    "description": "Device platform name corresponding to the OS family in hardware compatibility list entries. When configuring a system agent, platform must be either provided in the system agent profile or explicitly specified in the user config. User config provided value overrides the value from the system agent profile.",
                    "type": "string",
                    "default": null
                },
                "open_options": {
                    "description": "Specific options used by the device driver when it attempts to open a connection to the device. When configuring a system agent, option_options may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null
                },
                "packages": {
                    "description": "List of Python packages installed in the system agent runtime environment. When configuring a system agent, packages may be provided in the user config.  If no value is provided in the user config, then the value from system agent profile is used. Otherwise, the value from user config overrides the value from the system agent profile.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": null
                },
                "force_package_install": {
                    "description": "True means always reinstall packages even package is same as before. False is normal pip install behavior, i.e., will not reinstall packages with the same version",
                    "type": "boolean",
                    "default": null
                },
                "profile": {
                    "description": "System agent profile ID. The system agent profile provides various operational parameters for the system agent: username, password, platform, open_options, packages. These parameters may be overridden by values specific to the system agent while configuring the agent",
                    "type": "string",
                    "default": null
                },
                "operation_mode": {
                    "$ref": "#/definitions/TypeDump111",
                    "default": null
                },
                "install_requirements": {
                    "description": "Deprecated field. AOS resets the field to False if set",
                    "const": false,
                    "default": null
                },
                "allowed_job_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeDump112"
                    },
                    "default": null
                },
                "agent_type": {
                    "$ref": "#/definitions/TypeDump113",
                    "default": null
                }
            },
            "required": [
                "label",
                "management_ip"
            ]
        },
        "TypeDump111": {
            "description": "AOS agent operation mode: Onbox uses values unknown, not_installed, full_control and telemetry_only. Offbox uses values telemetry_only and full_control. Default value is full_control",
            "enum": [
                "full_control",
                "not_installed",
                "telemetry_only",
                "unknown"
            ],
            "type": "string"
        },
        "TypeDump112": {
            "description": "System Agent Job types",
            "enum": [
                "cancel",
                "check",
                "collectPristine",
                "install",
                "monitor",
                "none",
                "revertToPristine",
                "showTech",
                "uninstall",
                "updatePristine",
                "upgrade"
            ],
            "type": "string"
        },
        "TypeDump113": {
            "description": "Indicates if agent to manage the device is running locally on the device (onbox) or remotely on the AOS controller (offbox)",
            "enum": [
                "offbox",
                "onbox"
            ],
            "type": "string"
        },
        "TypeDump114": {
            "description": "Device platform name corresponding to the OS family",
            "type": "string"
        },
        "TypeDump115": {
            "description": "System Agent Job id ",
            "type": "integer"
        },
        "TypeDump116": {
            "description": "System Agent job state",
            "enum": [
                "canceled",
                "failed",
                "init",
                "inprogress",
                "pending",
                "success"
            ],
            "type": "string"
        },
        "TypeDump117": {
            "enum": [
                "bool_type",
                "f32_type",
                "f64_type",
                "null_type",
                "s16_type",
                "s32_type",
                "s64_type",
                "s8_type",
                "string_literal_type",
                "string_type",
                "u16_type",
                "u32_type",
                "u64_type",
                "u8_type"
            ],
            "type": "string"
        },
        "TypeDump118": null,
        "TypeDump119": null,
        "TypeDump12": {
            "enum": [
                "DELETE",
                "GET",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
            ],
            "type": "string"
        },
        "TypeDump120": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": {},
                "maxProperties": 0
            }
        },
        "TypeDump13": {
            "description": "Bar chart: combination of several vertical bars (individual bar traces on the same plot) representing the magnitude of each set of values",
            "type": "object",
            "properties": {
                "type": {
                    "const": "bar_chart"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "x_values": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/TypeDump14"
                                },
                                {
                                    "$ref": "#/definitions/TypeDump15"
                                },
                                {
                                    "$ref": "#/definitions/TypeDump16"
                                }
                            ]
                        },
                        "traces": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypeDump17"
                            }
                        }
                    },
                    "required": [
                        "traces",
                        "x_values"
                    ],
                    "additionalProperties": false
                },
                "x_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                },
                "y_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump14": {
            "description": "Array of numbers",
            "type": "array",
            "items": {
                "type": "number"
            },
            "minItems": 1
        },
        "TypeDump15": {
            "description": "Array of timestamps",
            "type": "array",
            "maxItems": 0
        },
        "TypeDump16": {
            "description": "Array of strings",
            "type": "array",
            "items": {
                "type": "string"
            },
            "minItems": 1
        },
        "TypeDump17": {
            "description": "Bar trace: vertical bars representing the magnitude of each value",
            "type": "object",
            "properties": {
                "label": {
                    "title": "User-defined label",
                    "type": "string"
                },
                "x_values": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        {
                            "$ref": "#/definitions/TypeDump15"
                        },
                        {
                            "$ref": "#/definitions/TypeDump16"
                        }
                    ],
                    "default": null
                },
                "y_values": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        {
                            "$ref": "#/definitions/TypeDump18"
                        }
                    ]
                },
                "color": {
                    "$ref": "#/definitions/TypeDump19",
                    "default": null
                }
            },
            "required": [
                "label",
                "y_values"
            ],
            "additionalProperties": false
        },
        "TypeDump18": {
            "description": "Array of integers",
            "type": "array",
            "items": {
                "type": "integer"
            },
            "minItems": 1
        },
        "TypeDump19": {
            "description": "Color",
            "enum": [
                "blue",
                "brown",
                "green",
                "grey",
                "olive",
                "orange",
                "pink",
                "purple",
                "red",
                "teal",
                "violet",
                "yellow"
            ],
            "type": "string"
        },
        "TypeDump2": {
            "description": "Task type, indicates requested action",
            "type": "string"
        },
        "TypeDump20": {
            "description": "Axis with ticks and optional labels",
            "type": "object",
            "properties": {
                "label": {
                    "description": "User-defined label",
                    "type": "string"
                },
                "ticks": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        {
                            "$ref": "#/definitions/TypeDump15"
                        }
                    ],
                    "default": null
                },
                "ticks_labels": {
                    "$ref": "#/definitions/TypeDump16",
                    "default": null
                },
                "units": {
                    "type": "string",
                    "default": null
                },
                "data_format": {
                    "description": "Supported data formats: 'none' - values should be used as is, 'timestamp' - values provided as strings in ISO8601 format and should be interpreted as timestamps.",
                    "enum": [
                        "none",
                        "timestamp"
                    ],
                    "type": "string",
                    "default": "none"
                }
            },
            "required": [
                "label"
            ],
            "additionalProperties": false
        },
        "TypeDump21": {
            "description": "Stacked bar chart: stacked vertical bars representing the magnitude of each set of values",
            "type": "object",
            "properties": {
                "type": {
                    "const": "stacked_bar_chart"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "x_values": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/TypeDump14"
                                },
                                {
                                    "$ref": "#/definitions/TypeDump15"
                                },
                                {
                                    "$ref": "#/definitions/TypeDump16"
                                }
                            ]
                        },
                        "traces": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypeDump17"
                            }
                        }
                    },
                    "required": [
                        "traces",
                        "x_values"
                    ],
                    "additionalProperties": false
                },
                "x_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                },
                "y_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump22": {
            "description": "Box chart: uses boxes and lines to depict the distributions of groups of numeric data",
            "type": "object",
            "properties": {
                "type": {
                    "const": "box_chart"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "lowerfence": {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        "q0": {
                            "$ref": "#/definitions/TypeDump14",
                            "default": null
                        },
                        "q1": {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        "q2": {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        "q3": {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        "q4": {
                            "$ref": "#/definitions/TypeDump14",
                            "default": null
                        },
                        "upperfence": {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        "values": {
                            "type": "array",
                            "items": {
                                "description": "2D-array of numbers",
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "minItems": 1
                            },
                            "default": null
                        },
                        "x_values": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/TypeDump14"
                                },
                                {
                                    "$ref": "#/definitions/TypeDump15"
                                }
                            ],
                            "default": null
                        }
                    },
                    "required": [
                        "lowerfence",
                        "q1",
                        "q2",
                        "q3",
                        "upperfence"
                    ],
                    "additionalProperties": false
                },
                "x_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                },
                "y_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump23": {
            "description": "Line chart: a combination of several scatter traces on the same plot with the same x_axis, and the default or the secondary y_axis",
            "type": "object",
            "properties": {
                "type": {
                    "const": "line_chart"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "x_values": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/TypeDump14"
                                },
                                {
                                    "$ref": "#/definitions/TypeDump15"
                                }
                            ]
                        },
                        "traces": {
                            "type": "array",
                            "items": {
                                "description": "Correlation chart that visually depicts the relationship between two variables: x_values and y_values",
                                "type": "object",
                                "properties": {
                                    "label": {
                                        "description": "User-defined label",
                                        "type": "string"
                                    },
                                    "x_values": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/definitions/TypeDump14"
                                            },
                                            {
                                                "$ref": "#/definitions/TypeDump15"
                                            }
                                        ],
                                        "default": null
                                    },
                                    "y_values": {
                                        "$ref": "#/definitions/TypeDump14"
                                    },
                                    "mode": {
                                        "description": "Type of lines",
                                        "enum": [
                                            "lines",
                                            "lines+markers",
                                            "markers"
                                        ],
                                        "type": "string",
                                        "default": null
                                    },
                                    "color": {
                                        "$ref": "#/definitions/TypeDump19",
                                        "default": null
                                    },
                                    "secondary_y": {
                                        "description": "Specifies whether the trace uses the default y-axis (left side) or the secondary y-axis (right side)",
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "label",
                                    "y_values"
                                ],
                                "additionalProperties": false
                            }
                        }
                    },
                    "required": [
                        "traces",
                        "x_values"
                    ],
                    "additionalProperties": false
                },
                "x_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                },
                "y_axis": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                },
                "y_axis_secondary": {
                    "$ref": "#/definitions/TypeDump20",
                    "default": null
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump24": {
            "type": "object",
            "properties": {
                "type": {
                    "const": "markdown"
                },
                "text": {
                    "description": "User-defined text, markdown syntax supported",
                    "type": "string"
                }
            },
            "required": [
                "text",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump25": {
            "description": "Pie chart: circular statistical chart, which is divided into sectors to illustrate numerical proportion",
            "type": "object",
            "properties": {
                "type": {
                    "const": "pie_chart"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "values": {
                            "$ref": "#/definitions/TypeDump14"
                        },
                        "labels": {
                            "$ref": "#/definitions/TypeDump16"
                        },
                        "colors": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TypeDump19"
                            },
                            "default": null
                        }
                    },
                    "required": [
                        "labels",
                        "values"
                    ],
                    "additionalProperties": false
                },
                "hole": {
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0,
                    "default": 0.0
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump26": {
            "description": "Sunburst chart diagram: nested circular statistical chart, one into another which is divided into sectors to illustrate numerical proportion",
            "type": "object",
            "properties": {
                "type": {
                    "const": "sunburst_chart"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "ids": {
                            "$ref": "#/definitions/TypeDump16",
                            "default": null
                        },
                        "labels": {
                            "$ref": "#/definitions/TypeDump16"
                        },
                        "parents": {
                            "$ref": "#/definitions/TypeDump16"
                        },
                        "values": {
                            "$ref": "#/definitions/TypeDump14"
                        }
                    },
                    "required": [
                        "labels",
                        "parents",
                        "values"
                    ],
                    "additionalProperties": false
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump27": {
            "description": "Table: rows and cells that contain specific values",
            "type": "object",
            "properties": {
                "type": {
                    "const": "table"
                },
                "title": {
                    "description": "User-defined title",
                    "type": "string",
                    "default": null
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "column_names": {
                            "$ref": "#/definitions/TypeDump16"
                        },
                        "columns": {
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/TypeDump18"
                                    },
                                    {
                                        "$ref": "#/definitions/TypeDump14"
                                    },
                                    {
                                        "$ref": "#/definitions/TypeDump16"
                                    }
                                ]
                            }
                        }
                    },
                    "required": [
                        "column_names",
                        "columns"
                    ],
                    "additionalProperties": false
                }
            },
            "required": [
                "data",
                "type"
            ],
            "additionalProperties": false
        },
        "TypeDump28": {
            "description": "OperationalProfile value must be one of the ['normal', 'maintenance', 'read_only']",
            "enum": [
                "maintenance",
                "normal",
                "read_only"
            ],
            "type": "string"
        },
        "TypeDump29": {
            "description": "Operation mode of the module: normal, maintenance",
            "enum": [
                "maintenance",
                "normal"
            ],
            "type": "string"
        },
        "TypeDump3": {
            "description": "\"init\" - task processing has not yet begun.\"in_progress\" - task processing has begun but incomplete.\"\"succeeded\" - task processing completed and is successful.\"\"failed\" - task processing completed and is unsuccessful.\"\"timeout\" - timed out waiting for task processing to complete.\"For all statuses other, you can get more details on API response and errors by issuing GET on the specific task ID.",
            "enum": [
                "cancelled",
                "failed",
                "in_progress",
                "init",
                "succeeded",
                "timeout"
            ],
            "type": "string"
        },
        "TypeDump30": {
            "type": "object",
            "properties": {
                "operation_mode": {
                    "$ref": "#/definitions/TypeDump29"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "operation_mode",
                "updated_at"
            ],
            "additionalProperties": false
        },
        "TypeDump31": {
            "description": "Summary on states of different containers",
            "type": "object",
            "properties": {
                "launched": {
                    "type": "integer"
                },
                "queued": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "restarting": {
                    "type": "integer"
                }
            },
            "required": [
                "failed",
                "launched",
                "queued",
                "restarting"
            ]
        },
        "TypeDump32": {
            "type": "object",
            "properties": {
                "num_succeeded": {
                    "description": "Number of succeeded deployments",
                    "type": "integer"
                },
                "num_failed": {
                    "description": "Number of failed deployments",
                    "type": "integer"
                },
                "num_pending": {
                    "description": "Number of pending deployments",
                    "type": "integer"
                }
            },
            "required": [
                "num_failed",
                "num_pending",
                "num_succeeded"
            ]
        },
        "TypeDump33": {
            "type": "object",
            "properties": {
                "state": {
                    "enum": [
                        "configuring",
                        "error",
                        "operational"
                    ],
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "detailed_error": {
                    "$ref": "#/definitions/TypeDump34"
                }
            },
            "required": [
                "detailed_error",
                "message",
                "state"
            ]
        },
        "TypeDump34": {
            "description": "This field can contain a detailed error if a probe is in the error state. If this field is set, it contains an object where error messages are attached to certain fields in a corresponding probe config, i.e. in the same way as API returns errors to invalid payloads."
        },
        "TypeDump35": {
            "type": "object",
            "properties": {
                "interval": {
                    "type": "number",
                    "minimum": 1
                },
                "input": {
                    "type": "string"
                },
                "execution_count": {
                    "type": "integer",
                    "minimum": -1
                }
            },
            "required": [
                "execution_count",
                "input",
                "interval"
            ]
        },
        "TypeDump36": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of a data format.",
                    "enum": [
                        "table"
                    ],
                    "type": "string"
                },
                "keys": {
                    "description": "Set of names and types of properties.",
                    "type": "object",
                    "additionalProperties": {
                        "enum": [
                            "any",
                            "bool",
                            "float",
                            "integer",
                            "string"
                        ],
                        "type": "string"
                    }
                },
                "primary_keys": {
                    "type": "array",
                    "items": {
                        "description": "List of primary keys for the given type",
                        "type": "string"
                    },
                    "default": null
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "description": "A value column type.",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "Name of a value.",
                                    "type": "string"
                                },
                                "title": {
                                    "description": "Displayable name of a value.",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Description of a value.",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Type of a value",
                                    "enum": [
                                        "bool",
                                        "f32",
                                        "f64",
                                        "s16",
                                        "s32",
                                        "s64",
                                        "s8",
                                        "string",
                                        "u16",
                                        "u32",
                                        "u64",
                                        "u8"
                                    ],
                                    "type": "string"
                                },
                                "possible_values": {
                                    "description": "A list of all possible discrete state values.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": null
                                }
                            },
                            "required": [
                                "description",
                                "name",
                                "title",
                                "type"
                            ]
                        }
                    }
                },
                "dynamic": {
                    "type": "boolean"
                },
                "meta": {
                    "type": "object",
                    "additionalProperties": {
                        "description": "Additional meta information about the given type"
                    },
                    "default": null
                }
            },
            "required": [
                "dynamic",
                "keys",
                "type",
                "values"
            ]
        },
        "TypeDump37": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "object",
                        "additionalProperties": {},
                        "maxProperties": 0
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {},
                        "maxProperties": 0
                    }
                },
                "required": [
                    "keys",
                    "values"
                ],
                "additionalProperties": false
            }
        },
        "TypeDump38": {
            "description": "Globally unique ID of this alert instance",
            "type": "string"
        },
        "TypeDump39": {
            "description": "Time the alert was last updated",
            "type": "string",
            "format": "date-time"
        },
        "TypeDump4": null,
        "TypeDump40": {
            "description": "Severity level of the anomaly alert",
            "enum": [
                "critical",
                "high",
                "low",
                "medium"
            ],
            "type": "string"
        },
        "TypeDump41": {
            "description": "Type of the anomaly",
            "type": "string"
        },
        "TypeDump42": {
            "description": "ID of the node that is mapped to this anomaly",
            "type": "string",
            "default": null
        },
        "TypeDump43": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "time in ISO8601",
                    "type": "string",
                    "format": "date-time",
                    "default": null
                },
                "message": {
                    "description": "log message",
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "TypeDump44": {
            "type": "string"
        },
        "TypeDump45": {
            "description": "Name of system (not the API id)",
            "type": "string",
            "minLength": 4
        },
        "TypeDump46": {
            "description": "Time at which this value was changed",
            "type": "string",
            "format": "date-time"
        },
        "TypeDump47": {
            "description": "Time at which the this value was updated",
            "type": "string",
            "format": "date-time"
        },
        "TypeDump48": {
            "type": "string"
        },
        "TypeDump49": {
            "description": "Status of BGP session",
            "enum": [
                "down",
                "missing",
                "toBytes",
                "unknown",
                "up"
            ],
            "type": "string"
        },
        "TypeDump5": null,
        "TypeDump50": {
            "description": "Interface status",
            "enum": [
                "down",
                "missing",
                "toBytes",
                "unknown",
                "up"
            ],
            "type": "string"
        },
        "TypeDump51": {
            "description": "Number of interfaces up in this LAG",
            "type": "integer"
        },
        "TypeDump52": {
            "description": "Interfaces that constitute this LAG",
            "type": "array",
            "items": {
                "$ref": "#/definitions/InterfaceStatusDump"
            }
        },
        "TypeDump53": {
            "description": "LLDP neighbor interface",
            "type": "string"
        },
        "TypeDump54": {
            "description": "LLDP neighbor name",
            "type": "string"
        },
        "TypeDump55": {
            "description": "LLDP neighbor chassis id",
            "type": "string"
        },
        "TypeDump56": {
            "description": "Next possible hops on this route",
            "type": "array",
            "items": {
                "title": "NextHop",
                "type": "object",
                "maxProperties": 0
            }
        },
        "TypeDump57": {
            "description": "Status of this route",
            "enum": [
                "missing",
                "partial",
                "unknown",
                "up"
            ],
            "type": "string"
        },
        "TypeDump58": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "TypeDump59": {
            "description": "A list of filter strings, with a minimum length of one string",
            "type": "array",
            "items": {
                "description": "A string representing an individual filter criteria",
                "type": "string"
            },
            "minItems": 1
        },
        "TypeDump6": null,
        "TypeDump60": {
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "number"
                }
            ]
        },
        "TypeDump61": {
            "type": "object",
            "properties": {
                "service_name": {
                    "description": "Name of the service",
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "description": "Name of the device the service is configured on",
                        "type": "string"
                    }
                }
            },
            "required": [
                "devices",
                "service_name"
            ]
        },
        "TypeDump62": {
            "description": "expression to be evaluated on accessors",
            "type": "string"
        },
        "TypeDump63": {
            "description": "versions which support the feature setting. The version is expressed a regex, the one with the most specific match selected.",
            "type": "string",
            "minLength": 1
        },
        "TypeDump64": {
            "description": "True if device is capable of dual routing engine (supervisor) cards",
            "type": "boolean",
            "default": false
        },
        "TypeDump65": {
            "description": "True if profile represents a physical device",
            "type": "boolean",
            "default": true
        },
        "TypeDump66": {
            "type": "object",
            "properties": {
                "os_version": {
                    "description": "OS version that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                },
                "model": {
                    "description": "Model info that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                },
                "os": {
                    "description": "OS info that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                },
                "manufacturer": {
                    "description": "Manufacturer info that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "manufacturer",
                "model",
                "os",
                "os_version"
            ]
        },
        "TypeDump67": {
            "type": "object",
            "properties": {
                "datacenter": {
                    "enum": [
                        "disabled",
                        "full_support"
                    ],
                    "type": "string",
                    "default": "full_support"
                },
                "freeform": {
                    "enum": [
                        "disabled",
                        "full_support"
                    ],
                    "type": "string",
                    "default": "full_support"
                }
            }
        },
        "TypeDump68": {
            "type": "object",
            "properties": {
                "userland": {
                    "description": "What type of userland (application binary/kernel) does the device support.",
                    "type": "integer"
                },
                "form_factor": {
                    "description": "How much rack space does the device need.",
                    "type": "string",
                    "minLength": 1
                },
                "ecmp_limit": {
                    "description": "What is the maximum number of Equal Cost Multi Path routes. This field changes BGP configuration on the device (ecmp max-paths).",
                    "type": "integer"
                },
                "asic": {
                    "description": "Type of Chipset (ASIC) on the device.",
                    "type": "string"
                },
                "cpu": {
                    "description": "What is the CPU architecture of the device.",
                    "type": "string",
                    "minLength": 1
                },
                "ram": {
                    "description": "How much memory does the device have.",
                    "type": "integer"
                },
                "vxlan_supported": {
                    "description": "Does the device support vxlan.",
                    "type": "boolean",
                    "default": null
                },
                "copp_strict": {
                    "description": "when set to True, generate strict copp profile config for NXOS",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "$ref": "#/definitions/TypeDump63"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "breakout_capable": {
                    "description": "when set to True for a module, indicates that the ports of this module are breakout capable",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "module": {
                                "type": "integer"
                            },
                            "version": {
                                "$ref": "#/definitions/TypeDump63"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "module",
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "as_seq_num_supported": {
                    "description": "when set to False, skips  rendering anything due to the inability to sequence the AS entry",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "$ref": "#/definitions/TypeDump63"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "routing_instance_supported": {
                    "description": "The flag indicates whether the device supports\"routing instance\" command. This field is furtherused for AAA server related configurationon Junos. When set to True,routing instance command is used withpre-configured mgmt_junos interface; Otherwise,source address is used with the management IPaddress.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "$ref": "#/definitions/TypeDump63"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "bfd_supported": {
                    "description": "Does the device support BFD.",
                    "type": "boolean",
                    "default": null
                },
                "vrf_limit": {
                    "description": "VRF range supported by the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "vtep_limit": {
                    "description": "Number of VTEPs supported by the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "vtep_flood_limit": {
                    "description": "Number of flood lists supported per VTEP on the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "max_l2_mtu": {
                    "description": "Maximum L2 MTU supported on the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "max_l3_mtu": {
                    "description": "Maximum L3 MTU supported on the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                }
            },
            "required": [
                "asic",
                "cpu",
                "ecmp_limit",
                "form_factor",
                "ram",
                "userland"
            ]
        },
        "TypeDump69": {
            "description": "This includes native capabilities of Device OS software and AOS management software for devices of this profile",
            "type": "object",
            "properties": {
                "onie": {
                    "description": "Does the device or device OS support onie",
                    "type": "boolean"
                },
                "lxc_support": {
                    "description": "Does the device support LXC containers",
                    "type": "boolean"
                },
                "config_apply_support": {
                    "description": "Enumeration describing what types of configuration can the device support. 1.complete_only: Every config push on the device is complete config push. 2.incremental: Every day2 config push on the device is incremental. Complete config push issupported.",
                    "enum": [
                        "complete_only",
                        "incremental"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "config_apply_support",
                "lxc_support",
                "onie"
            ]
        },
        "TypeDump7": {
            "description": "Name of the user who created the task",
            "type": "string",
            "default": null
        },
        "TypeDump70": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/TypeDump71"
                },
                "display_name": {
                    "$ref": "#/definitions/TypeDump72"
                },
                "status": {
                    "$ref": "#/definitions/TypeDump73"
                },
                "capability": {
                    "$ref": "#/definitions/TypeDump74"
                },
                "created_at": {
                    "$ref": "#/definitions/TypeDump75"
                },
                "last_modified_at": {
                    "$ref": "#/definitions/TypeDump76"
                },
                "rack_type_counts": {
                    "$ref": "#/definitions/TypeDump77"
                },
                "rack_types": {
                    "$ref": "#/definitions/TypeDump78"
                },
                "dhcp_service_intent": {
                    "$ref": "#/definitions/DHCPServiceIntentDump"
                },
                "virtual_network_policy": {
                    "$ref": "#/definitions/VirtualNetworkPolicyDump",
                    "default": {
                        "overlay_control_protocol": null
                    }
                },
                "spine": {
                    "type": "object",
                    "properties": {
                        "logical_device": {
                            "$ref": "#/definitions/LogicalDeviceStatusDump"
                        },
                        "tags": {
                            "$ref": "#/definitions/TypeDump87"
                        },
                        "count": {
                            "description": "Number of spines per rack",
                            "type": "integer",
                            "minimum": 1
                        },
                        "link_per_superspine_count": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0
                        },
                        "link_per_superspine_speed": {
                            "$ref": "#/definitions/PortSpeedDump",
                            "default": null
                        }
                    },
                    "required": [
                        "count",
                        "logical_device"
                    ]
                },
                "asn_allocation_policy": {
                    "title": "AsnAllocationPolicy",
                    "type": "object",
                    "properties": {
                        "spine_asn_scheme": {
                            "description": "Use same ASN number or distinct ones on spines in a pod",
                            "enum": [
                                "distinct",
                                "single"
                            ],
                            "type": "string",
                            "default": "distinct"
                        }
                    },
                    "default": {
                        "spine_asn_scheme": null
                    }
                }
            },
            "required": [
                "created_at",
                "dhcp_service_intent",
                "display_name",
                "last_modified_at",
                "rack_type_counts",
                "rack_types",
                "spine"
            ]
        },
        "TypeDump71": {
            "description": "ID of template",
            "type": "string",
            "minLength": 1,
            "default": null
        },
        "TypeDump72": {
            "description": "Display name of template",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
        },
        "TypeDump73": {
            "description": "As a result of flexible fabric expansion it could be impossible to infer correct rack type / template from blueprint. Such rack types / templates will be marked with inconsistent for the purpose of validations. This field will not be stored for rack types / templates in catalogue since it is supposed that they all are consistent.",
            "enum": [
                "inconsistent",
                "ok"
            ],
            "type": "string",
            "default": null
        },
        "TypeDump74": {
            "description": "Shows if template is able to create blueprint. \"blueprint\" means that this template can be used to create a blueprint and \"pod\" means that this template can't be used to create blueprint but can be used to define a pod in a pod-based template.",
            "enum": [
                "blueprint",
                "pod"
            ],
            "type": "string",
            "default": null
        },
        "TypeDump75": {
            "type": "string",
            "format": "date-time"
        },
        "TypeDump76": {
            "type": "string",
            "format": "date-time"
        },
        "TypeDump77": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "rack_type_id": {
                        "description": "ID of rack type",
                        "type": "string"
                    },
                    "count": {
                        "description": "Number of rack types with `rack_type_id` in template or blueprint",
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "count",
                    "rack_type_id"
                ]
            },
            "minItems": 1
        },
        "TypeDump78": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "$ref": "#/definitions/TypeDump75"
                    },
                    "last_modified_at": {
                        "$ref": "#/definitions/TypeDump76"
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "display_name": {
                        "description": "Rack type name",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 17
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    },
                    "fabric_connectivity_design": {
                        "description": "Fabric connectivity design. Rack does not have spines in case of \"l3collapsed\" and \"rail_collapsed\" designs",
                        "enum": [
                            "l3clos",
                            "l3collapsed",
                            "rail_collapsed"
                        ],
                        "type": "string",
                        "default": "l3clos"
                    },
                    "leafs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "description": "Leaf type label",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "logical_device": {
                                    "description": "ID of logical device",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "leaf_leaf_link_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "leaf_leaf_link_speed": {
                                    "$ref": "#/definitions/PortSpeedDump",
                                    "default": null
                                },
                                "leaf_leaf_l3_link_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "leaf_leaf_l3_link_speed": {
                                    "$ref": "#/definitions/PortSpeedDump",
                                    "default": null
                                },
                                "link_per_spine_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "link_per_spine_speed": {
                                    "$ref": "#/definitions/PortSpeedDump",
                                    "default": null
                                },
                                "redundancy_protocol": {
                                    "enum": [
                                        "esi",
                                        "mlag"
                                    ],
                                    "type": "string",
                                    "default": null
                                },
                                "leaf_leaf_link_port_channel_id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "leaf_leaf_l3_link_port_channel_id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "mlag_vlan_id": {
                                    "description": "MLAG VLAN ID",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4094,
                                    "default": 0
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeDump81",
                                    "default": []
                                }
                            },
                            "required": [
                                "label",
                                "logical_device"
                            ]
                        },
                        "minItems": 1
                    },
                    "access_switches": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "description": "Access switch label, which also needs to be unique among leaf labels.",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "logical_device": {
                                    "description": "ID of logical device",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "instance_count": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 1
                                },
                                "links": {
                                    "description": "L2 links from access switches to TOR leafs",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TypeDump82"
                                    },
                                    "minItems": 1
                                },
                                "access_access_link_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "access_access_link_speed": {
                                    "$ref": "#/definitions/PortSpeedDump",
                                    "default": null
                                },
                                "redundancy_protocol": {
                                    "enum": [
                                        "esi"
                                    ],
                                    "type": "string",
                                    "default": null
                                },
                                "access_access_link_port_channel_id_min": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "access_access_link_port_channel_id_max": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeDump81",
                                    "default": []
                                }
                            },
                            "required": [
                                "label",
                                "links",
                                "logical_device"
                            ]
                        },
                        "default": []
                    },
                    "generic_systems": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "description": "Generic system type label",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "logical_device": {
                                    "description": "ID of logical device",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TypeDump82"
                                    },
                                    "minItems": 1
                                },
                                "count": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 1
                                },
                                "port_channel_id_min": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "port_channel_id_max": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "management_level": {
                                    "enum": [
                                        "full_control",
                                        "telemetry_only",
                                        "unmanaged"
                                    ],
                                    "type": "string"
                                },
                                "loopback": {
                                    "description": "Indicates whether loopback interface should be immediately created",
                                    "enum": [
                                        "disabled",
                                        "enabled"
                                    ],
                                    "type": "string",
                                    "default": "disabled"
                                },
                                "asn_domain": {
                                    "description": "Indicates whether ASN domain should be immediately created",
                                    "enum": [
                                        "disabled",
                                        "enabled"
                                    ],
                                    "type": "string",
                                    "default": "disabled"
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeDump81",
                                    "default": []
                                }
                            },
                            "required": [
                                "label",
                                "links",
                                "logical_device",
                                "management_level"
                            ]
                        },
                        "default": []
                    },
                    "logical_devices": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "$ref": "#/definitions/TypeDump83"
                                },
                                "panels": {
                                    "$ref": "#/definitions/TypeDump84"
                                },
                                "id": {
                                    "$ref": "#/definitions/TypeDump85"
                                }
                            },
                            "required": [
                                "display_name",
                                "id",
                                "panels"
                            ]
                        },
                        "default": []
                    },
                    "tags": {
                        "$ref": "#/definitions/TypeDump86",
                        "default": []
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": {
                            "description": "Contains UI metadata to assist in visualization of the rack type or other UI-specific key-value storages"
                        },
                        "default": {}
                    }
                },
                "required": [
                    "created_at",
                    "display_name",
                    "id",
                    "last_modified_at",
                    "leafs"
                ]
            },
            "minItems": 1
        },
        "TypeDump79": {
            "description": "Scalar multiplier for the speed of the port",
            "enum": [
                0,
                1,
                2,
                5,
                10,
                25,
                40,
                50,
                100,
                150,
                200,
                400,
                800
            ],
            "type": "integer"
        },
        "TypeDump8": {
            "description": "IP of the user who created the task",
            "type": "string",
            "default": null
        },
        "TypeDump80": {
            "description": "Indicates if 'value' is in units of Gbps or Mbps",
            "enum": [
                "",
                "G",
                "M"
            ],
            "type": "string"
        },
        "TypeDump81": {
            "type": "array",
            "items": {
                "description": "Tag name, case-insensitive, must be unique across all tags",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "^(\\S+(\\s+\\S+)*)*$"
            }
        },
        "TypeDump82": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Link label",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "target_switch_label": {
                    "description": "Label of leaf or access switch type that indicates the target switch for this link.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "link_per_switch_count": {
                    "description": "Number of links per switch",
                    "type": "integer",
                    "minimum": 1
                },
                "link_speed": {
                    "$ref": "#/definitions/PortSpeedDump"
                },
                "attachment_type": {
                    "description": "Type of the attachment to the overlay layer of systems",
                    "enum": [
                        "dualAttached",
                        "singleAttached"
                    ],
                    "type": "string",
                    "default": "singleAttached"
                },
                "switch_peer": {
                    "description": "To which switch the link will be attached in case of a single attachment connectivity",
                    "enum": [
                        "first",
                        "none",
                        "second"
                    ],
                    "type": "string",
                    "default": null
                },
                "lag_mode": {
                    "description": "LAG mode for a port-channel facing the server",
                    "enum": [
                        "lacp_active",
                        "lacp_passive",
                        "none_lag",
                        "static_lag"
                    ],
                    "type": "string",
                    "default": null
                },
                "rail_index": {
                    "title": "RailIndex",
                    "description": "Specifies rail index for the link to indicate Rail membership; only applicable on Leaf-Generic links for rail-optimized network design",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1024,
                    "default": null
                },
                "tags": {
                    "$ref": "#/definitions/TypeDump81",
                    "default": []
                }
            },
            "required": [
                "label",
                "link_per_switch_count",
                "link_speed"
            ]
        },
        "TypeDump83": {
            "description": "Display name of logical device",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
        },
        "TypeDump84": {
            "description": "Panels of this logical device",
            "type": "array",
            "items": {
                "title": "LogicalPanel",
                "type": "object",
                "properties": {
                    "port_groups": {
                        "description": "Port groups in this panel",
                        "type": "array",
                        "items": {
                            "title": "PortGroup",
                            "type": "object",
                            "properties": {
                                "roles": {
                                    "description": "Possible roles for ports in this group",
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "access",
                                            "generic",
                                            "leaf",
                                            "peer",
                                            "spine",
                                            "superspine",
                                            "unused"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "count": {
                                    "description": "Number of ports in this group",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "speed": {
                                    "description": "Speed of the ports in this group",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "$ref": "#/definitions/TypeDump79"
                                        },
                                        "unit": {
                                            "$ref": "#/definitions/TypeDump80"
                                        }
                                    },
                                    "required": [
                                        "unit",
                                        "value"
                                    ]
                                }
                            },
                            "required": [
                                "count",
                                "roles",
                                "speed"
                            ]
                        }
                    },
                    "port_indexing": {
                        "description": "Indexing schema for port groups in this panel",
                        "type": "object",
                        "properties": {
                            "schema": {
                                "description": "Must always be 'absolute'",
                                "enum": [
                                    "absolute"
                                ],
                                "type": "string"
                            },
                            "order": {
                                "description": "Indicates how incrementing a port index changes port position across columns first or rows first",
                                "enum": [
                                    "L-R, T-B",
                                    "T-B, L-R"
                                ],
                                "type": "string"
                            },
                            "start_index": {
                                "description": "Starting index of this panel",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "order",
                            "schema",
                            "start_index"
                        ]
                    },
                    "panel_layout": {
                        "description": "Layout of this panel",
                        "type": "object",
                        "properties": {
                            "row_count": {
                                "description": "Number of rows in this panel",
                                "type": "integer",
                                "minimum": 1
                            },
                            "column_count": {
                                "description": "Number of columns in this panel",
                                "type": "integer",
                                "minimum": 1
                            }
                        },
                        "required": [
                            "column_count",
                            "row_count"
                        ]
                    }
                },
                "required": [
                    "panel_layout",
                    "port_groups",
                    "port_indexing"
                ]
            }
        },
        "TypeDump85": {
            "description": "Unique id of this logical device",
            "type": "string",
            "minLength": 1
        },
        "TypeDump86": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^(\\S+(\\s+\\S+)*)*$"
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    }
                },
                "required": [
                    "label"
                ]
            }
        },
        "TypeDump87": {
            "$ref": "#/definitions/TypeDump86",
            "default": []
        },
        "TypeDump88": {
            "description": "Total number of pools.",
            "type": "string"
        },
        "TypeDump89": {
            "description": "Actual number of used pools.",
            "type": "string"
        },
        "TypeDump9": {
            "description": "ID of the user who made last uncommitted changes",
            "type": "string",
            "default": null
        },
        "TypeDump90": {
            "description": "Actual number of used pools in %.",
            "type": "number"
        },
        "TypeDump91": null,
        "TypeDump92": {
            "description": "User for which the audit event belongs",
            "type": "string"
        },
        "TypeDump93": {
            "description": "IP of the user",
            "type": "string"
        },
        "TypeDump94": {
            "description": "Type of the event",
            "enum": [
                "authAclDisable",
                "authAclEnable",
                "authAclRuleAdd",
                "authAclRuleDelete",
                "authAclRuleUpdate",
                "blueprintCommit",
                "blueprintDelete",
                "blueprintLock",
                "blueprintRevert",
                "blueprintRollback",
                "blueprintUnlock",
                "deviceConfigChange",
                "login",
                "logout",
                "migrationCheckpoint",
                "operationModeChangeToMaintenance",
                "operationModeChangeToNormal",
                "operationModeChangeToReadOnly",
                "ratelimitClear",
                "ratelimitExceptionAdd",
                "ratelimitExceptionDelete",
                "syslogCreate",
                "syslogDelete",
                "syslogUpdate",
                "systemChangeApiOperationModeToMaintenance",
                "systemChangeApiOperationModeToNormal",
                "userCreate",
                "userDelete",
                "userUpdate"
            ],
            "type": "string"
        },
        "TypeDump95": {
            "description": "Result of the audit event",
            "type": "string"
        },
        "TypeDump96": {
            "description": "ID of the blueprint",
            "type": "string"
        },
        "TypeDump97": {
            "description": "Label of the blueprint",
            "type": "string"
        },
        "TypeDump98": {
            "description": "IP subnet for which the ratelimit event occurred",
            "type": "string"
        },
        "TypeDump99": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/definitions/TypeDump100"
                },
                "user": {
                    "$ref": "#/definitions/TypeDump101"
                },
                "user_ip": {
                    "$ref": "#/definitions/TypeDump102"
                },
                "type": {
                    "$ref": "#/definitions/TypeDump103"
                },
                "result": {
                    "$ref": "#/definitions/TypeDump104"
                },
                "username": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "email",
                "first_name",
                "last_name",
                "result",
                "roles",
                "timestamp",
                "type",
                "user",
                "user_ip",
                "username"
            ]
        },
        "TypeLoad": {
            "description": "OperationalProfile value must be one of the ['normal', 'maintenance', 'read_only']",
            "enum": [
                "maintenance",
                "normal",
                "read_only"
            ],
            "type": "string"
        },
        "TypeLoad1": {
            "description": "Specifies the amount of memory the application container would use in MB",
            "type": "integer"
        },
        "TypeLoad10": {
            "description": "IP address or hostname of the managed system. This is the address to which the system agent connects to interact with the managed system",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
        },
        "TypeLoad11": {
            "description": "Username used by system agent to authenticate with the managed system.",
            "type": "string",
            "minLength": 1
        },
        "TypeLoad12": {
            "description": "Password used by system agent to authenticate with the managed system.",
            "type": "string",
            "minLength": 1
        },
        "TypeLoad13": {
            "description": "versions which support the feature setting. The version is expressed a regex, the one with the most specific match selected.",
            "type": "string",
            "minLength": 1
        },
        "TypeLoad14": {
            "description": "True if device is capable of dual routing engine (supervisor) cards",
            "type": "boolean",
            "default": false
        },
        "TypeLoad15": {
            "description": "True if profile represents a physical device",
            "type": "boolean",
            "default": true
        },
        "TypeLoad16": {
            "type": "object",
            "properties": {
                "os_version": {
                    "description": "OS version that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                },
                "model": {
                    "description": "Model info that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                },
                "os": {
                    "description": "OS info that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                },
                "manufacturer": {
                    "description": "Manufacturer info that AOS will use to match and assign a system device to the Device Profile",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "manufacturer",
                "model",
                "os",
                "os_version"
            ]
        },
        "TypeLoad17": {
            "type": "object",
            "properties": {
                "datacenter": {
                    "enum": [
                        "disabled",
                        "full_support"
                    ],
                    "type": "string",
                    "default": "full_support"
                },
                "freeform": {
                    "enum": [
                        "disabled",
                        "full_support"
                    ],
                    "type": "string",
                    "default": "full_support"
                }
            }
        },
        "TypeLoad18": {
            "type": "object",
            "properties": {
                "userland": {
                    "description": "What type of userland (application binary/kernel) does the device support.",
                    "type": "integer"
                },
                "form_factor": {
                    "description": "How much rack space does the device need.",
                    "type": "string",
                    "minLength": 1
                },
                "ecmp_limit": {
                    "description": "What is the maximum number of Equal Cost Multi Path routes. This field changes BGP configuration on the device (ecmp max-paths).",
                    "type": "integer"
                },
                "asic": {
                    "description": "Type of Chipset (ASIC) on the device.",
                    "type": "string"
                },
                "cpu": {
                    "description": "What is the CPU architecture of the device.",
                    "type": "string",
                    "minLength": 1
                },
                "ram": {
                    "description": "How much memory does the device have.",
                    "type": "integer"
                },
                "vxlan_supported": {
                    "description": "Does the device support vxlan.",
                    "type": "boolean",
                    "default": null
                },
                "copp_strict": {
                    "description": "when set to True, generate strict copp profile config for NXOS",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "$ref": "#/definitions/TypeLoad13"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "breakout_capable": {
                    "description": "when set to True for a module, indicates that the ports of this module are breakout capable",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "module": {
                                "type": "integer"
                            },
                            "version": {
                                "$ref": "#/definitions/TypeLoad13"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "module",
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "as_seq_num_supported": {
                    "description": "when set to False, skips  rendering anything due to the inability to sequence the AS entry",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "$ref": "#/definitions/TypeLoad13"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "routing_instance_supported": {
                    "description": "The flag indicates whether the device supports\"routing instance\" command. This field is furtherused for AAA server related configurationon Junos. When set to True,routing instance command is used withpre-configured mgmt_junos interface; Otherwise,source address is used with the management IPaddress.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "$ref": "#/definitions/TypeLoad13"
                            },
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "version"
                        ]
                    },
                    "minItems": 1,
                    "default": null
                },
                "bfd_supported": {
                    "description": "Does the device support BFD.",
                    "type": "boolean",
                    "default": null
                },
                "vrf_limit": {
                    "description": "VRF range supported by the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "vtep_limit": {
                    "description": "Number of VTEPs supported by the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "vtep_flood_limit": {
                    "description": "Number of flood lists supported per VTEP on the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "max_l2_mtu": {
                    "description": "Maximum L2 MTU supported on the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                },
                "max_l3_mtu": {
                    "description": "Maximum L3 MTU supported on the device.",
                    "type": "integer",
                    "minimum": 1,
                    "default": null
                }
            },
            "required": [
                "asic",
                "cpu",
                "ecmp_limit",
                "form_factor",
                "ram",
                "userland"
            ]
        },
        "TypeLoad19": {
            "description": "This includes native capabilities of Device OS software and AOS management software for devices of this profile",
            "type": "object",
            "properties": {
                "onie": {
                    "description": "Does the device or device OS support onie",
                    "type": "boolean"
                },
                "lxc_support": {
                    "description": "Does the device support LXC containers",
                    "type": "boolean"
                },
                "config_apply_support": {
                    "description": "Enumeration describing what types of configuration can the device support. 1.complete_only: Every config push on the device is complete config push. 2.incremental: Every day2 config push on the device is incremental. Complete config push issupported.",
                    "enum": [
                        "complete_only",
                        "incremental"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "config_apply_support",
                "lxc_support",
                "onie"
            ]
        },
        "TypeLoad2": null,
        "TypeLoad20": {
            "description": "ID of template",
            "type": "string",
            "minLength": 1,
            "default": null
        },
        "TypeLoad21": {
            "description": "Display name of template",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
        },
        "TypeLoad22": {
            "description": "As a result of flexible fabric expansion it could be impossible to infer correct rack type / template from blueprint. Such rack types / templates will be marked with inconsistent for the purpose of validations. This field will not be stored for rack types / templates in catalogue since it is supposed that they all are consistent.",
            "enum": [
                "inconsistent",
                "ok"
            ],
            "type": "string",
            "default": null
        },
        "TypeLoad23": {
            "description": "Shows if template is able to create blueprint. \"blueprint\" means that this template can be used to create a blueprint and \"pod\" means that this template can't be used to create blueprint but can be used to define a pod in a pod-based template.",
            "enum": [
                "blueprint",
                "pod"
            ],
            "type": "string",
            "default": null
        },
        "TypeLoad24": {
            "type": "string",
            "format": "date-time"
        },
        "TypeLoad25": {
            "type": "string",
            "format": "date-time"
        },
        "TypeLoad26": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "rack_type_id": {
                        "description": "ID of rack type",
                        "type": "string"
                    },
                    "count": {
                        "description": "Number of rack types with `rack_type_id` in template or blueprint",
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "count",
                    "rack_type_id"
                ]
            },
            "minItems": 1
        },
        "TypeLoad27": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "$ref": "#/definitions/TypeLoad24"
                    },
                    "last_modified_at": {
                        "$ref": "#/definitions/TypeLoad25"
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "display_name": {
                        "description": "Rack type name",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 17
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    },
                    "fabric_connectivity_design": {
                        "description": "Fabric connectivity design. Rack does not have spines in case of \"l3collapsed\" and \"rail_collapsed\" designs",
                        "enum": [
                            "l3clos",
                            "l3collapsed",
                            "rail_collapsed"
                        ],
                        "type": "string",
                        "default": "l3clos"
                    },
                    "status": {
                        "description": "As a result of flexible fabric expansion, a rack type of a blueprint rack may become inconsistent. Such rack type will be marked with inconsistent status in the blueprint. This field is accepted for global rack type as a guardrail against UI exporting inconsistent rack type from blueprint to the global catalog. The field itself will not be stored in the rack type, as it is assumed that every rack type in global catalog is consistent",
                        "enum": [
                            "inconsistent",
                            "ok"
                        ],
                        "type": "string",
                        "default": null
                    },
                    "leafs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "description": "Leaf type label",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "logical_device": {
                                    "description": "ID of logical device",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "leaf_leaf_link_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "leaf_leaf_link_speed": {
                                    "$ref": "#/definitions/PortSpeedLoad",
                                    "default": null
                                },
                                "leaf_leaf_l3_link_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "leaf_leaf_l3_link_speed": {
                                    "$ref": "#/definitions/PortSpeedLoad",
                                    "default": null
                                },
                                "link_per_spine_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "link_per_spine_speed": {
                                    "$ref": "#/definitions/PortSpeedLoad",
                                    "default": null
                                },
                                "redundancy_protocol": {
                                    "enum": [
                                        "esi",
                                        "mlag"
                                    ],
                                    "type": "string",
                                    "default": null
                                },
                                "leaf_leaf_link_port_channel_id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "leaf_leaf_l3_link_port_channel_id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "mlag_vlan_id": {
                                    "description": "MLAG VLAN ID",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4094,
                                    "default": 0
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeLoad30",
                                    "default": []
                                }
                            },
                            "required": [
                                "label",
                                "logical_device"
                            ]
                        },
                        "minItems": 1
                    },
                    "access_switches": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "description": "Access switch label, which also needs to be unique among leaf labels.",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "logical_device": {
                                    "description": "ID of logical device",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "instance_count": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 1
                                },
                                "links": {
                                    "description": "L2 links from access switches to TOR leafs",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TypeLoad31"
                                    },
                                    "minItems": 1
                                },
                                "access_access_link_count": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "default": 0
                                },
                                "access_access_link_speed": {
                                    "$ref": "#/definitions/PortSpeedLoad",
                                    "default": null
                                },
                                "redundancy_protocol": {
                                    "enum": [
                                        "esi"
                                    ],
                                    "type": "string",
                                    "default": null
                                },
                                "access_access_link_port_channel_id_min": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "access_access_link_port_channel_id_max": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeLoad30",
                                    "default": []
                                }
                            },
                            "required": [
                                "label",
                                "links",
                                "logical_device"
                            ]
                        },
                        "default": []
                    },
                    "generic_systems": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "label": {
                                    "description": "Generic system type label",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 64
                                },
                                "logical_device": {
                                    "description": "ID of logical device",
                                    "type": "string",
                                    "minLength": 1
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TypeLoad31"
                                    },
                                    "minItems": 1
                                },
                                "count": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 1
                                },
                                "port_channel_id_min": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "port_channel_id_max": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 4096,
                                    "default": 0
                                },
                                "management_level": {
                                    "enum": [
                                        "full_control",
                                        "telemetry_only",
                                        "unmanaged"
                                    ],
                                    "type": "string"
                                },
                                "loopback": {
                                    "description": "Indicates whether loopback interface should be immediately created",
                                    "enum": [
                                        "disabled",
                                        "enabled"
                                    ],
                                    "type": "string",
                                    "default": "disabled"
                                },
                                "asn_domain": {
                                    "description": "Indicates whether ASN domain should be immediately created",
                                    "enum": [
                                        "disabled",
                                        "enabled"
                                    ],
                                    "type": "string",
                                    "default": "disabled"
                                },
                                "tags": {
                                    "$ref": "#/definitions/TypeLoad30",
                                    "default": []
                                }
                            },
                            "required": [
                                "label",
                                "links",
                                "logical_device",
                                "management_level"
                            ]
                        },
                        "default": []
                    },
                    "logical_devices": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "$ref": "#/definitions/TypeLoad32"
                                },
                                "panels": {
                                    "$ref": "#/definitions/TypeLoad33"
                                },
                                "id": {
                                    "$ref": "#/definitions/TypeLoad34"
                                }
                            },
                            "required": [
                                "display_name",
                                "id",
                                "panels"
                            ]
                        },
                        "default": []
                    },
                    "tags": {
                        "$ref": "#/definitions/TypeLoad35",
                        "default": []
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": {
                            "description": "Contains UI metadata to assist in visualization of the rack type or other UI-specific key-value storages"
                        },
                        "default": {}
                    }
                },
                "required": [
                    "created_at",
                    "display_name",
                    "id",
                    "last_modified_at",
                    "leafs"
                ]
            },
            "minItems": 1
        },
        "TypeLoad28": {
            "description": "Scalar multiplier for the speed of the port",
            "enum": [
                0,
                1,
                2,
                5,
                10,
                25,
                40,
                50,
                100,
                150,
                200,
                400,
                800
            ],
            "type": "integer"
        },
        "TypeLoad29": {
            "description": "Indicates if 'value' is in units of Gbps or Mbps",
            "enum": [
                "",
                "G",
                "M"
            ],
            "type": "string"
        },
        "TypeLoad3": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "default": ""
                },
                "units": {
                    "description": "Mapping of ValueType.name to units",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": {}
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad2"
                },
                "enable_metric_logging": {
                    "type": "boolean",
                    "default": false
                },
                "retention_duration": {
                    "type": "integer",
                    "default": 86400
                },
                "retention_size": {
                    "type": "integer",
                    "default": 0
                },
                "graph_annotation_properties": {
                    "description": "Set of annotation properties associated with graph nodes which values are stored in probe stages.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "node_id": {
                                "description": "Name of a property that contains a graph node ID.",
                                "type": "string"
                            },
                            "column": {
                                "description": "Name of a value column.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "column",
                            "node_id"
                        ]
                    },
                    "default": null
                }
            },
            "required": [
                "name",
                "tags"
            ],
            "additionalProperties": false
        },
        "TypeLoad30": {
            "type": "array",
            "items": {
                "description": "Tag name, case-insensitive, must be unique across all tags",
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "^(\\S+(\\s+\\S+)*)*$"
            }
        },
        "TypeLoad31": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Link label",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                },
                "target_switch_label": {
                    "description": "Label of leaf or access switch type that indicates the target switch for this link.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64,
                    "default": null
                },
                "link_per_switch_count": {
                    "description": "Number of links per switch",
                    "type": "integer",
                    "minimum": 1
                },
                "link_speed": {
                    "$ref": "#/definitions/PortSpeedLoad"
                },
                "attachment_type": {
                    "description": "Type of the attachment to the overlay layer of systems",
                    "enum": [
                        "dualAttached",
                        "singleAttached"
                    ],
                    "type": "string",
                    "default": "singleAttached"
                },
                "switch_peer": {
                    "description": "To which switch the link will be attached in case of a single attachment connectivity",
                    "enum": [
                        "first",
                        "none",
                        "second"
                    ],
                    "type": "string",
                    "default": null
                },
                "lag_mode": {
                    "description": "LAG mode for a port-channel facing the server",
                    "enum": [
                        "lacp_active",
                        "lacp_passive",
                        "none_lag",
                        "static_lag"
                    ],
                    "type": "string",
                    "default": null
                },
                "rail_index": {
                    "title": "RailIndex",
                    "description": "Specifies rail index for the link to indicate Rail membership; only applicable on Leaf-Generic links for rail-optimized network design",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1024,
                    "default": null
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad30",
                    "default": []
                }
            },
            "required": [
                "label",
                "link_per_switch_count",
                "link_speed"
            ]
        },
        "TypeLoad32": {
            "description": "Display name of logical device",
            "type": "string",
            "minLength": 1,
            "maxLength": 64
        },
        "TypeLoad33": {
            "description": "Panels of this logical device",
            "type": "array",
            "items": {
                "title": "LogicalPanel",
                "type": "object",
                "properties": {
                    "port_groups": {
                        "description": "Port groups in this panel",
                        "type": "array",
                        "items": {
                            "title": "PortGroup",
                            "type": "object",
                            "properties": {
                                "roles": {
                                    "description": "Possible roles for ports in this group",
                                    "type": "array",
                                    "items": {
                                        "enum": [
                                            "access",
                                            "generic",
                                            "leaf",
                                            "peer",
                                            "spine",
                                            "superspine",
                                            "unused"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "count": {
                                    "description": "Number of ports in this group",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "speed": {
                                    "description": "Speed of the ports in this group",
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "$ref": "#/definitions/TypeLoad28"
                                        },
                                        "unit": {
                                            "$ref": "#/definitions/TypeLoad29"
                                        }
                                    },
                                    "required": [
                                        "unit",
                                        "value"
                                    ]
                                }
                            },
                            "required": [
                                "count",
                                "roles",
                                "speed"
                            ]
                        }
                    },
                    "port_indexing": {
                        "description": "Indexing schema for port groups in this panel",
                        "type": "object",
                        "properties": {
                            "schema": {
                                "description": "Must always be 'absolute'",
                                "enum": [
                                    "absolute"
                                ],
                                "type": "string"
                            },
                            "order": {
                                "description": "Indicates how incrementing a port index changes port position across columns first or rows first",
                                "enum": [
                                    "L-R, T-B",
                                    "T-B, L-R"
                                ],
                                "type": "string"
                            },
                            "start_index": {
                                "description": "Starting index of this panel",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "order",
                            "schema",
                            "start_index"
                        ]
                    },
                    "panel_layout": {
                        "description": "Layout of this panel",
                        "type": "object",
                        "properties": {
                            "row_count": {
                                "description": "Number of rows in this panel",
                                "type": "integer",
                                "minimum": 1
                            },
                            "column_count": {
                                "description": "Number of columns in this panel",
                                "type": "integer",
                                "minimum": 1
                            }
                        },
                        "required": [
                            "column_count",
                            "row_count"
                        ]
                    }
                },
                "required": [
                    "panel_layout",
                    "port_groups",
                    "port_indexing"
                ]
            }
        },
        "TypeLoad34": {
            "description": "Unique id of this logical device",
            "type": "string",
            "minLength": 1
        },
        "TypeLoad35": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64,
                        "pattern": "^(\\S+(\\s+\\S+)*)*$"
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    }
                },
                "required": [
                    "label"
                ]
            }
        },
        "TypeLoad36": {
            "type": "object",
            "properties": {
                "logical_device": {
                    "$ref": "#/definitions/LogicalDeviceStatusLoad"
                },
                "tags": {
                    "$ref": "#/definitions/TypeLoad37"
                },
                "count": {
                    "description": "Number of spines per rack",
                    "type": "integer",
                    "minimum": 1
                },
                "link_per_superspine_count": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "link_per_superspine_speed": {
                    "$ref": "#/definitions/PortSpeedLoad",
                    "default": null
                }
            },
            "required": [
                "count",
                "logical_device"
            ]
        },
        "TypeLoad37": {
            "$ref": "#/definitions/TypeLoad35",
            "default": []
        },
        "TypeLoad38": {
            "description": "Total number of pools.",
            "type": "string"
        },
        "TypeLoad39": {
            "description": "Actual number of used pools.",
            "type": "string"
        },
        "TypeLoad4": null,
        "TypeLoad40": {
            "description": "Actual number of used pools in %.",
            "type": "number"
        },
        "TypeLoad41": null,
        "TypeLoad42": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the query",
                    "type": "string",
                    "default": null
                },
                "from": {
                    "description": "Source of the query data",
                    "default": null
                },
                "select": {
                    "description": "Fields to be selected",
                    "default": null
                },
                "filter": {
                    "description": "Filtering criteria",
                    "default": null
                },
                "order_by": {
                    "description": "Sorting criteria",
                    "default": null
                }
            }
        },
        "TypeLoad5": null,
        "TypeLoad6": {
            "description": "expression to be evaluated on accessors",
            "type": "string"
        },
        "TypeLoad7": {
            "description": "A list of filter strings, with a minimum length of one string",
            "type": "array",
            "items": {
                "description": "A string representing an individual filter criteria",
                "type": "string"
            },
            "minItems": 1
        },
        "TypeLoad8": {
            "anyOf": [
                {
                    "type": "integer"
                },
                {
                    "type": "number"
                }
            ]
        },
        "TypeLoad9": {
            "description": "expression to be evaluated on accessors",
            "type": "string"
        },
        "VirtualNetworkPolicyDump": {
            "title": "VirtualNetworkPolicy",
            "type": "object",
            "properties": {
                "overlay_control_protocol": {
                    "description": "Control protocol for VXLANs. If None, then no control plane is used",
                    "enum": [
                        "evpn"
                    ],
                    "type": "string",
                    "default": null
                }
            }
        },
        "VirtualNetworkPolicyLoad": {
            "$ref": "#/definitions/VirtualNetworkPolicyLoad1",
            "default": {
                "overlay_control_protocol": null
            }
        },
        "VirtualNetworkPolicyLoad1": {
            "title": "VirtualNetworkPolicy",
            "type": "object",
            "properties": {
                "overlay_control_protocol": {
                    "description": "Control protocol for VXLANs. If None, then no control plane is used",
                    "enum": [
                        "evpn"
                    ],
                    "type": "string",
                    "default": null
                }
            }
        }
    },
    "info": {
        "version": "6.0.0",
        "description": "AOS REST API",
        "title": "AOS"
    }
}