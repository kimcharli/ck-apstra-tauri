match(
  node('system', system_type='switch'{switch_filter}, name='switch')
    .out('hosted_interfaces').node('interface', if_type='ethernet', name='intf1')
    .out('link').node('link', name='link1')
    .in_('link').node(name='intf2')
    .in_('hosted_interfaces').node('system', system_type='server', name='server'),
  optional(
    node(name='intf1').in_('composed_of').node('interface', name='ae1' )
      .in_('composed_of').node('interface', name='evpn1')
  ),
  optional(
    node(name='intf1').in_('composed_of').node('interface', name='ae1' )
      .in_('composed_of').node('interface', name='evpn1')
	  .out('ep_member_of').node('ep_group')
	  .in_('ep_affected_by').node('ep_application_instance', name='ep_application_instance')
	  .out('ep_top_level').node('ep_endpoint_policy', policy_type_name='batch', name='CT')
  ),
  optional(
    node(name='intf1').in_('composed_of').node('interface', name='ae1' )
  ),
  optional(
    node(name='intf1').in_('composed_of').node('interface', name='ae1' )
	  .out('ep_member_of').node('ep_group')
	  .in_('ep_affected_by').node('ep_application_instance', name='ep_application_instance')
	  .out('ep_top_level').node('ep_endpoint_policy', policy_type_name='batch', name='CT')
  ),
  optional(
    node(name='intf1')
	  .out('ep_member_of').node('ep_group')
	  .in_('ep_affected_by').node('ep_application_instance', name='ep_application_instance')
	  .out('ep_top_level').node('ep_endpoint_policy', policy_type_name='batch', name='CT')
  )
)